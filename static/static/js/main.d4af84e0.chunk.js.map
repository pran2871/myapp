{"version":3,"sources":["constants/apiConstants.js","components/Header/Header.styled.js","components/Header/Header.js","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.js","components/LoginForm/EmailVerify.js","components/ForgotPassword/ForgotPassword.js","components/ResetPassword/ResetPassword.js","components/AuthenticatedRoute/index.js","components/AppLayout/AppLayout.styled.js","components/Sidebar/Drawer.js","components/Sidebar/Sidebar.js","components/Landing/Landing.js","components/Account/Account.styled.js","components/Account/Account.js","utils/utilityFunctions.js","components/ManageOrg/ManageStudents.styled.js","components/SelectDropDownComponent/index.js","components/ManageOrg/ManageStudentsAddEditModal.js","components/ManageOrg/index.js","components/ManageUser/AddEditModal.js","components/ManageUser/style.js","components/ManageUser/ListUsers.js","components/ManageStudents/ManageStudents.styled.js","components/ManageStudents/ManageStudentsAddEditModal.js","components/ManageStudents/index.js","components/Assessment/ManageStudents.styled.js","components/Assessment/ManageStudentsAddEditModal.js","components/Assessment/AssessmentStudentSelectionPage.js","components/Assessment/PickTemplate.js","components/Assessment/ManageTemplates.styled.js","components/Assessment/transferque.js","components/Assessment/Assessment.style.js","components/Assessment/Contact.js","components/Assessment/AssessmentTemplateSelectionPage.js","components/Assessment/Assessment.constant.js","components/Assessment/AssessmentFormPage.js","components/Assessment/AssessmentFormPage2.js","components/Assessment/AssessmentFormPagePast.js","components/Assessment/AssessmentFormPagePastAns.js","components/Assessment/AssessmentFormPagePastAnsView.js","components/Assessment/index.js","components/ManageQuestions/ManageQuestions.styled.js","components/ManageQuestions/ManageQuestionAddEditModal.js","components/ManageQuestions/index.js","components/ManageTemplates/ManageTemplates.styled.js","components/ManageTemplates/transferque.js","components/ManageTemplates/ManageTemplatesCreateEditModal.js","components/ManageTemplates/index.js","components/AppLayout/index.js","App.js","serviceWorker.js","index.js"],"names":["ACCESS_TOKEN_NAME","HeaderTitleContainer","styled","div","Header","Layout","withRouter","props","s","title","location","pathname","substring","length","charAt","toUpperCase","slice","indexOf","style","padding","LoginContainer","LoginFormContainer","FieldContainer","ButtonFieldContainer","useState","email","password","successMessage","state","setState","handleChange","value","id","prevState","redirectToHome","history","push","prefix","MailOutlined","placeholder","type","onChange","event","target","LockOutlined","onClick","e","preventDefault","payload","axios","post","then","response","status","data","message","error","localStorage","setItem","organization","orgID","orgName","role","roleName","user","emailID","userContactNo","userID","userName","debugMessage","code","catch","console","log","redirectToReset","getItem","get","showError","token","name","confirmPassword","redirectToVerify","put","sendDetailsToServer","confirmpassword","success","AuthenticatedRoute","this","Component","component","rest","to","React","PureComponent","Sider","AppLayoutContainer","AppLayoutSider","PageContainer","useStyles","makeStyles","drawer","width","classes","itemsList","text","variant","className","List","map","item","index","icon","ListItem","button","ListItemIcon","ListItemText","primary","container","display","Sidebar","Form","create","getFieldDecorator","form","labelCol","xs","span","sm","wrapperCol","onSubmit","validateFields","err","values","patch","headers","clear","Item","label","hasFeedback","rules","required","initialValue","allowClear","UserOutlined","pattern","min","max","Password","iconRender","visible","EyeTwoTone","EyeInvisibleOutlined","PhoneOutlined","disabled","TeamOutlined","GlobalOutlined","offset","htmlType","filterArray","options","filterValue","keyArray","filterConfig","includeScore","minMatchCharLength","threshold","keys","Fuse","search","filterRowDataObject","InputFilterContainer","InputField","Input","IconContainer","ActionContainer","SelectDropDownField","onChangeHandler","filterOption","inputValue","option","children","restProps","toString","undefined","mode","Option","key","ManageStudentsAddEdit","changeFilter","fieldId","addEditingStudentData","coachList","cancelAddEdit","addEditModalStatus","onFileChangeHandler","selectedFile","files","formData","FormData","append","res","alert","submit","updateListingData","referenceNumber","contactNumber","coach","organizationList","parsedData","rowData","Object","studentName","studentReferenceNumber","studentContactNo","onOk","editStudentData","createNewStudent","onCancel","footer","upload","config","bucketName","region","accessKeyId","secretAccessKey","ManageOrg","getStudentListApiCAllFunction","dataSource","deleteStudent","deleteData","delete","filename","S3FileUpload","uploadFile","manageStudentsColumns","dataIndex","render","studentData","onConfirm","okText","cancelText","filteredDataSource","columns","ManageStudentsAddEditModal","Select","addEdit","handleSignoutClick","toLowerCase","resetFields","orgRequired","disableOrg","addEditUserData","validateData","test","newUser","contactNo","refreshListingData","userRoleOrgID","roleList","info","showArrow","Fragment","showSearch","organizationData","ManageUsers","fetchUsersList","deleteUser","userData","deleteUserPayload","deleted","reviveUser","reviveUserPayload","createNewUser","editUserData","manageUsersColumns","record","sorter","a","b","localeCompare","SearchOutlined","rowClassName","CoachData","ManageStudents","elmId","startNewAssessment","data1","pastAssessment","studentId","studentID","PickTemplate","selectTemplate","templateID","theme","root","margin","cardHeader","spacing","list","height","backgroundColor","palette","background","paper","overflow","fontSize","fontWeight","whiteSpace","color","textTransform","button1","marginRight","marginLeft","not","filter","aVal","find","bVal","TransferList","defaultList","defaultSelectedList","onSelectListChange","leftChecked","setLeftChecked","rightChecked","setRightChecked","left","setLeft","right","setRight","useEffect","handleToggle","context","currentIndex","findIndex","cVal","newChecked","splice","customList","items","extra","Card","dense","labelId","Checkbox","checked","tabIndex","disableRipple","inputProps","Divider","Grid","justify","alignItems","Button","size","rem","rightList","Set","concat","aria-label","StudentNameContainer","CommentFieldContainer","ButtonComponent","ApiUtils","SelectDropDownComponent","DataUtils","getMainSkills","getSubSkills","mainSkill","params","mainSkillArea","getQuestions","subSkill","subSkillArea","getAllUsers","setTemplate","updateTemplate","Contact","handelMainSkillChange","Error","subSkillList","selectedMainSkillArea","selectedSubSkillArea","handelSubSkillChange","questionsList","questionList","addEditingTemplateData","templateName","assignedList","selectedQuestionList","onSave","question","questionID","questionLevel","level","questionText","mainskill","subskill","mainSkillList","ob","assignedTo","masterUserList","skill","defaultValue","hidden","skillIndex","gets","updated","everytime","it","changes","AssessmentTemplateSelectionPage","match","defaultActiveKey","TabPane","tab","assessmentFormTemplateResponse","templateId","studentDetails","orgContactNo","orgAddress","createdAt","updatedAt","assessmentDetails","comment","questions","questionId","questionLabel","questionAnswer","AssessmentFormPage","changeAnswer","questionData","ans","answersData","commentChange","submitForm","all","allquestions","result1","answerDataObject","forEach","questionsData","answer","i","ansText","Number","userId","templateData","allquestions1","tempAnswersData","Group","flexDirection","pagination","TextArea","rows","AssessmentFormPage2","selectedquestions","quest","AssessmentFormPagePast","selectAssessment","selectAssessmentView","assessmentID","answers","answerText","Assessment","exact","path","AssessmentFormPagePastAnsView","AssessmentFormPagePastAns","AssessmentStudentSelectionPage","QuestionHeaderContainer","TableHeaderContainer","SkillSelectionContainer","SelectDropDownComponentWrapper","ManageQuestionAddEditModal","addEditingQuestionData","mainSkillValue","subSkillValue","changeQuestionLevel","questionLevelList","mainSkillOptions","subSkillOptions","ManageQuestions","apiResponse","subSkillOptionsTmp","apiCallPromise","questionsTemp","editQuestion","deleteQuestion","createNewQuestion","addNewMainSkill","newMainSkillValue","addNewSubSkill","newSubSkillValue","questionFilterValue","mainSkillOptionsTemp","questionsColumns","updatedQuestionsData","onSearch","dropdownRender","menu","onMouseDown","flexWrap","flex","cursor","PlusOutlined","ManageTemplatesAddEdit","editTemplateData","createNewTemplate","userIndex","ManageTemplates","getTemplateListApiCAllFunction","editTemplatetData","deleteTemplate","manageTemplatesColumns","fullText","placement","substr","ManageTemplatesCreateEditModal","Content","AppLayout","Footer","handleAccountClick","handleCollapse","isSliderCollapsed","userType","filteredRoutes","Landing","validUsers","ManageUser","hasChildren","routeData","splitArray","split","displayUrl","replace","x","y","trim","breakpoint","collapsible","collapsed","onCollapse","route","rel","position","top","Account","App","atEnter","opacity","atLeave","atActive","LoginForm","ForgotPassword","EmailVerify","Resetpassword","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d4af84e0.chunk.js","sourcesContent":["//export const API_BASE_URL = process.env.REACT_APP_SERVER_URL;\n//export const API_BASE_URL = 'http://ec2-18-234-40-147.compute-1.amazonaws.com:8080'; \nexport const API_BASE_URL = 'http://localhost:8080';  \nexport const ACCESS_TOKEN_NAME = 'login_access_token';","import styled from 'styled-components';\n\nexport const HeaderTitleContainer = styled.div`\n    color: white;\n    font-size: 32px;\n    font-weight: bold;\n`;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { ACCESS_TOKEN_NAME } from '../../constants/apiConstants';\nimport { Layout } from 'antd';\n\n\n\nimport {\n    HeaderTitleContainer\n} from './Header.styled';\n\n// import {\n// ButtonFieldContainer,\n// } from '../LoginForm/LoginForm.styled';\n\nconst { Header } = Layout;\n\nfunction HeaderComponent(props) {\n    const capitalize = (s) => {\n        if (typeof s !== 'string') return ''\n        return s.charAt(0).toUpperCase() + s.slice(1)\n    }\n    let title = capitalize(props.location.pathname.substring(1,props.location.pathname.length))\n    if (\n        ['/login',\n        '/forgot',\n        '/contact',\n        '/table',\n        '/addorg',\n        '/about',\n        '/landing',\n        '/account',\n        '/verify',\n        '/reset',\n    '/templates'].indexOf(props.location.pathname) >= 0) {\n        title = 'Independence Skills Assessment'\n    }\n    \n    function renderLogout() {\n         if(props.location.pathname === '/dashboard' || props.location.pathname === '/account' || props.location.pathname === '/landing' ){\n            return(\n                 <div className=\"d-flex justify-content-end\">\n                \n                    <button className=\"btn btn-danger \" onClick={() => handleLogout()}>Logout</button>\n                    \n                </div>\n            )\n         }\n    }\n    function handleLogout() {\n        localStorage.removeItem(ACCESS_TOKEN_NAME)\n        props.history.push('/login')\n    }\n    return(\n        // <nav className=\"navbar navbar-dark bg-primary\">\n        //     <div className=\"row col-12 d-flex justify-content-center text-white\">\n        //         <span className=\"h3\">{props.title || title}</span>\n        //         {renderLogout()}\n        //     </div>\n        // </nav>\n        <Header style={{ padding: '0'}}>\n            <HeaderTitleContainer>\n                {props.title || title}\n            </HeaderTitleContainer>\n            {/* <ButtonFieldContainer>\n                        <Button\n                            type=\"primary\"\n                            onClick={handleSubmitClick}\n                        >\n                            Send Verification Code\n                        </Button>\n                    </ButtonFieldContainer> */}\n        </Header>\n    )\n}\nexport default withRouter(HeaderComponent);","import styled from 'styled-components';\n\nexport const LoginContainer = styled.div`\n    height: calc(100vh - 64px);\n    width: 100vw;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const LoginFormContainer = styled.div`\n    width: 350px;\n    border: 1px solid lightgray;\n    padding: 20px;\n    transform: translate(0, -50%);\n`;\n\nexport const FieldContainer = styled.div`\n    margin: 15px 0;\n`;\n\nexport const ButtonFieldContainer = styled.div`\n    margin: 35px 0;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`;","import React, {useState} from 'react';\nimport axios from 'axios';\nimport './LoginForm.css';\nimport {API_BASE_URL, ACCESS_TOKEN_NAME} from '../../constants/apiConstants';\nimport { withRouter } from \"react-router-dom\";\n\n\nimport Header from '../Header/Header';\n\nimport {\n    Input,\n    Button,\n    message\n} from 'antd';\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\n\nimport {\n    LoginContainer,\n    LoginFormContainer,\n    FieldContainer,\n    ButtonFieldContainer,\n} from './LoginForm.styled';\n\n\n\n\nfunction LoginForm(props) {\n    const [state , setState] = useState({\n        email : \"\",\n        password : \"\",\n        successMessage: null\n    })\n\n    const handleChange = (value, id) => {\n        setState(prevState => ({\n            ...prevState,\n            [id] : value\n        }))\n    }\n\n    const handleSubmitClick = (e) => {\n        //message.warning('warning test data');\n        //message.success('success test data');\n        //redirectToHome();\n        e.preventDefault();\n         const payload={\n             \"emailID\":state.email,\n             \"password\":state.password,\n         }\n         //http://localhost:8080/login/?email_id=email1&password=1234\n        axios.post(\"/login/\", payload)\n            .then(function (response) {\n                if(response.status === 200){\n                    if(response.data.status ==='error')\n                    {\n                        message.error(response.data.message);\n\n                    }else{\n                    localStorage.setItem('orgID',response.data.data.organization.orgID);\n                    localStorage.setItem('orgName',response.data.data.organization.orgName);\n                    localStorage.setItem('roleName',response.data.data.role.roleName);\n                    localStorage.setItem('emailID',response.data.data.user.emailID);\n                    localStorage.setItem('userContactNo',response.data.data.user.userContactNo);\n                    localStorage.setItem('userID',response.data.data.user.userID);\n                    localStorage.setItem('userName',response.data.data.user.userName);\n                    // localStorage.setItem('password',payload.password);\n                    // localStorage.setItem(ACCESS_TOKEN_NAME,response.data.debugMessage);\n                    localStorage.setItem(ACCESS_TOKEN_NAME,response.data.debugMessage);\n\n                    redirectToHome();\n                    //props.showError(null)\n                    }\n                }\n                else if(response.code === 204){\n                    message.error(response.data.message);\n                }\n                else{\n                    message.error(response.data.message);\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    const redirectToHome = () => {\n        props.history.push('/dashboard');\n    }\n    const redirectToRegister = () => {\n        props.history.push('/forgot');\n    }\n    return(\n        <div>\n            <Header />\n            <LoginContainer>\n                <LoginFormContainer>\n                    <FieldContainer>\n                        <Input\n                            prefix={<MailOutlined/>}\n                            placeholder=\"Email ID\"\n                            type=\"email\"\n                            id=\"email\"\n                            value={state.email}\n                            onChange={(event) => handleChange(event.target.value, 'email')}\n                        />\n                    </FieldContainer>\n                    <FieldContainer>\n                        <Input\n                            prefix={<LockOutlined/>}\n                            type=\"password\"\n                            id=\"password\"\n                            placeholder=\"Password\"\n                            value={state.password}\n                            onChange={(event) => handleChange(event.target.value, 'password')}\n                        />\n                    </FieldContainer>\n                    <ButtonFieldContainer>\n                        <Button type=\"primary\" onClick={handleSubmitClick}>\n                            Log In\n                        </Button>\n                        <Button type=\"link\" onClick={redirectToRegister} >\n                            Forgot Password?\n                        </Button>\n                    </ButtonFieldContainer>\n                </LoginFormContainer>\n            </LoginContainer>\n        </div>\n    )\n}\n\nexport default withRouter(LoginForm);","import React, {useState} from 'react';\nimport axios from 'axios';\nimport './LoginForm.css';\nimport {API_BASE_URL, ACCESS_TOKEN_NAME} from '../../constants/apiConstants';\nimport { withRouter } from \"react-router-dom\";\n\nimport Header from '../Header/Header';\n\nimport {\n    Input,\n    Button,\n} from 'antd';\n\nimport {\n    LoginContainer,\n    LoginFormContainer,\n    FieldContainer,\n    ButtonFieldContainer,\n} from '../LoginForm/LoginForm.styled';\n\n\n\n\nfunction LoginForm(props) {\n    const [state , setState] = useState({\n        email : \"\",\n        password : \"\",\n        code : \"\",\n        successMessage: null\n    })\n    const handleChange = (e) => {\n        const {id , value} = e.target   \n        setState(prevState => ({\n            ...prevState,\n            [id] : value\n        }))\n    }\n\n    const handleSubmitClick = (e) => {\n        e.preventDefault();\n         const payload={\n             \"email\":localStorage.getItem('email'),\n             \"password\":state.password,\n             \"code\":state.code,\n         }\n         //http://localhost:8080/login/verify/?email_id=akashmalla07@gmail.com&verification_code=ebnmavnfgy\n        axios.get(\"/login/verify?email_id=\"+payload.email+\"&verification_code=\"+payload.code, payload)\n            .then(function (response) {\n                console.log(response)\n                console.log(response.data)\n                //console.log(response.data.data.name)\n                //name1 = response.data.data.name\n                console.log(response.data.status)\n                //console.log(response.data.data.roleName)\n                if(response.status === 200){\n                    // setState(prevState => ({\n                    //     ...prevState,\n                    //     'successMessage' : 'Login successful. Redirecting to home page..'\n                    // }))\n                    if(response.data.status ==='Fail')\n                    {\n                        console.log(\"qqqqqqqqqqqqq\")\n                        props.showError(\"Wronng Verification code\");\n                        \n                    }else{\n                    console.log(\"hiiiiiiiiiiii\")\n                    localStorage.setItem(ACCESS_TOKEN_NAME,response.data.token);\n                    localStorage.setItem('name',response.data.data.name);\n                    localStorage.setItem('role',response.data.data.roleName);\n                    //localStorage.setItem(NAME,response.data.data.name);\n                   console.log(response.data.data.status)\n                   \n                   redirectToReset();\n                    props.showError(null)\n                    }\n                }\n                else if(response.code === 204){\n                    props.showError(\"Email and password do not match\");\n                }\n                else{\n                    props.showError(\"User does not exists\");\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    const redirectToHome = () => {\n        props.history.push('/landing');\n    }\n    const redirectToReset = () => {\n        props.history.push('/reset');\n    }\n    const redirectToRegister = () => {\n        props.history.push('/forgot'); \n    }\n    return(\n        <div>\n            <Header />\n            <LoginContainer>\n                <LoginFormContainer>\n                    <FieldContainer>\n                        <Input\n                            id=\"code\"\n                            placeholder=\"Enter Verification code\"\n                            value={state.code}\n                            onChange={handleChange}\n                        />\n                    </FieldContainer>\n                    <ButtonFieldContainer>\n                        <Button\n                            type=\"primary\"\n                            onClick={handleSubmitClick}\n                        >\n                            Submit\n                    </Button>\n                    </ButtonFieldContainer>\n                </LoginFormContainer>\n            </LoginContainer>\n        </div>\n    )\n}\n\nexport default withRouter(LoginForm);","import React, {useState} from 'react';\nimport axios from 'axios';\nimport './ForgotPassword.css';\nimport {API_BASE_URL, ACCESS_TOKEN_NAME} from '../../constants/apiConstants';\nimport { withRouter } from \"react-router-dom\";\n\nimport Header from '../Header/Header';\n\nimport {\n    Input,\n    Button, message\n} from 'antd';\n\nimport {\n    LoginContainer,\n    LoginFormContainer,\n    FieldContainer,\n    ButtonFieldContainer,\n} from '../LoginForm/LoginForm.styled';\n\n\nfunction ForgotPassword(props) {\n    \n\n    const [state , setState] = useState({\n        email : \"\",\n        password : \"\",\n        confirmPassword: \"\",\n        successMessage: null\n    })\n    const handleChange = (e) => {\n        const {id , value} = e.target   \n        setState(prevState => ({\n            ...prevState,\n            [id] : value\n        }))\n    }\n    const sendDetailsToServer = () => {\n        //if(state.email.length && state.password.length) {\n           // props.showError(null);\n            const payload={\n                \"email\":state.email,\n                \"password\":state.password,\n           }\n           localStorage.setItem('email',payload.email)\n            //http://localhost:8080/login/send-mail/?email_id=akashmalla07@gmail.com\n            \n            axios.put(\"/login/sendMail?email_id=\"+payload.email, payload)\n                .then(function (response) {\n                    console.log(response)\n                    if(response.status === 200){\n                        setState(prevState => ({\n                            ...prevState,\n                            'successMessage' : 'Registration successful. Redirecting to home page..'\n                        }))\n                        localStorage.setItem(ACCESS_TOKEN_NAME,response.data.token);\n                        redirectToVerify();\n                       // props.showError(null)\n                    } else{\n                        message.error(response.data.message);\n                    }\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });    \n        // } else {\n        //     props.showError('Please enter valid username and password')    \n        // }\n        \n    }\n    const redirectToHome = () => {\n        props.history.push('/home');\n    }\n    const redirectToLogin = () => {\n        props.history.push('/login'); \n    }\n    const redirectToVerify = () => {\n        props.history.push('/verify'); \n    }\n    const handleSubmitClick = (e) => {\n        e.preventDefault();\n        sendDetailsToServer()\n        // if(state.password === state.confirmPassword) {\n                \n        // } else {\n        //     props.showError('Passwords do not match');\n        // }\n    }\n    return(\n        <div>\n            <Header />\n            <LoginContainer>\n                <LoginFormContainer>\n                    <FieldContainer>\n                        <Input\n                            type=\"email\"\n                            id=\"email\"\n                            placeholder=\"Enter email\"\n                            value={state.email}\n                            onChange={handleChange}\n                        />\n                    </FieldContainer>\n                    <ButtonFieldContainer>\n                        <Button\n                            type=\"primary\"\n                            onClick={handleSubmitClick}\n                        >\n                            Send Verification Code\n                        </Button>\n                    </ButtonFieldContainer>\n                </LoginFormContainer>\n            </LoginContainer>\n        </div>\n    )\n}\n\nexport default withRouter(ForgotPassword);","import React, {useState} from 'react';\nimport axios from 'axios';\nimport './ResetPassword.css';\nimport { Button, Modal, Input , message} from 'antd';\nimport {API_BASE_URL, ACCESS_TOKEN_NAME} from '../../constants/apiConstants';\nimport { withRouter } from \"react-router-dom\";\n\nimport Header from '../Header/Header';\n\n\n\nimport {\n    LoginContainer,\n    LoginFormContainer,\n    FieldContainer,\n    ButtonFieldContainer,\n} from '../LoginForm/LoginForm.styled';\n\n\nfunction LoginForm(props) {\n    const [state , setState] = useState({\n        email : \"\",\n        password : \"\",\n        confirmpassword :\"\",\n        successMessage: null\n    })\n    const handleChange = (value, id) => {\n        setState(prevState => ({\n            ...prevState,\n            [id] : value\n        }))\n    }\n\n    const handleSubmitClick = (e) => {\n        e.preventDefault();\n         const payload={\n             \"email\":localStorage.getItem('email'),\n             \"password\":state.password,\n             \"confirmpassword\":state.confirmpassword,\n         }\n        \n         if(state.password === state.confirmpassword) {\n             //http://localhost:8080/login/changePassword/?email_id=akashmalla07@gmail.com&password=123456\n         \n        const reply = axios.put(\"/login/changePassword?email_id=\"+payload.email+\"&password=\"+payload.password, payload)\n            .then(function (response) {\n                console.log(response)\n                console.log(response.data)\n                //console.log(response.data.data.name)\n                //name1 = response.data.data.name\n                console.log(response.data.status)\n                //console.log(response.data.data.roleName)\n                if(response.status === 200){\n                   \n                         setState(prevState => ({\n                             ...prevState,\n                             'successMessage' : 'PassWord has been changed'\n                         }))\n                         message.success(\"Password successfully changed\");\n                    \n                    if(response.data.status ==='error')\n                    {\n                        console.log(\"qqqqqqqqqqqqq\")\n                        message.error(response.data.message);\n                    }else{\n                    console.log(\"hello\")\n                   \n                    \n                    \n                }\n                }\n                else if(response.code === 204){\n                    message.error(response.data.message);\n                }\n                else{\n                    message.error(response.data.message);\n                }\n            })\n            reply.then((response) => {\n                redirectToHome();\n            })\n            \n        }else{\n            message.error(\"error...try again\");\n        }\n    }\n    const redirectToHome = () => {\n        props.history.push('/landing');\n    }\n    const redirectToRegister = () => {\n        props.history.push('/forgot'); \n    }\n    return(\n        <div>\n            <Header />\n            <LoginContainer>\n                <LoginFormContainer>\n                    <FieldContainer>\n                        <Input\n                            type=\"password\"\n                            id=\"password\"\n                            placeholder=\"Enter New Password\" \n                            value={state.password}\n                        onChange={(event) => handleChange(event.target.value, 'password')}\n                        />\n                    </FieldContainer>\n                    <FieldContainer>\n                        <Input\n                            type=\"password\"\n                            id=\"confirmpassword\"\n                            placeholder=\"Enter New Password\"\n                            value={state.confirmpassword}\n                            onChange={(event) => handleChange(event.target.value, 'confirmpassword')}\n                        />\n                    </FieldContainer>\n                    <ButtonFieldContainer>\n                        <Button\n                            type=\"primary\"\n                            onClick={handleSubmitClick}\n                        >\n                            Submit\n                        </Button>\n                    </ButtonFieldContainer>\n                </LoginFormContainer>\n            </LoginContainer>\n        </div>\n    )\n}\n\nexport default withRouter(LoginForm);","/**\n *\n * AuthenticatedRoute\n *\n */\n\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { ACCESS_TOKEN_NAME } from '../../constants/apiConstants';\n\nclass AuthenticatedRoute extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n    render() {\n        const { component: Component, ...rest } = this.props;\n        let token = localStorage.getItem(ACCESS_TOKEN_NAME);\n        return (\n            ((token && token.length)) ?\n                (\n                    <Route component={Component} {...rest} />\n                ) :\n                (\n                    <Redirect to={{ pathname: '/login' }} />\n                )\n        );\n    }\n}\n\n\nexport default AuthenticatedRoute;\n","import styled from 'styled-components';\nimport { Layout } from 'antd';\n\nconst { Sider } = Layout;\n\nexport const AppLayoutContainer = styled(Layout)`\n    height: 100vh;\n    width: 100vw;\n    overflow: auto;\n`;\n\nexport const AppLayoutSider = styled(Sider)`\n    height: 100%;\n`;\n\nexport const PageContainer = styled.div`\n    padding: 15px;\n    box-shadow: 10px 5px 10px #d8d8d8;\n    border-radius: 3px;\n    background: white;\n`;","import React from \"react\";\nimport {\n  Drawer as MUIDrawer,\n  ListItem,\n  List,\n  ListItemIcon,\n  ListItemText\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { withRouter } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  drawer: {\n    width: \"190px\"\n  }\n});\n\nconst Drawer = props => {\n  const { history } = props;\n  const classes = useStyles();\n  const itemsList = [\n    {\n      text: \"Home\",\n    //   icon: <InboxIcon />,\n      onClick: () => history.push(\"/landing\")\n    },\n    {\n      text: \"Manage Organisation\",\n    //   icon: <MailIcon />,\n      onClick: () => history.push(\"/table\")\n    },\n    {\n        text: \"Manage User\",\n      //   icon: <MailIcon />,\n        onClick: () => history.push(\"/manageUser\")\n      },\n      {\n        text: \"Manage Templates\",\n      //   icon: <MailIcon />,\n        onClick: () => history.push(\"/templates\")\n      },\n      {\n        text: \"Manage Questions\",\n      //   icon: <MailIcon />,\n        onClick: () => history.push(\"/about\")\n      },\n      {\n        text: \"Manage Template\",\n      //   icon: <MailIcon />,\n        onClick: () => history.push(\"/about\")\n      },\n      {\n        text: \"Manage Student\",\n      //   icon: <MailIcon />,\n        onClick: () => history.push(\"/about\")\n      },\n    {\n      text: \"View Report\",\n    //   icon: <MailIcon />,\n      onClick: () => history.push(\"/contact\")\n    }\n    ,\n    {\n      text: \"Account\",\n    //   icon: <MailIcon />,\n      onClick: () => history.push(\"/account\")\n    }\n\n  ];\n  return (\n    <MUIDrawer variant=\"permanent\" className={classes.drawer}>\n      <List>\n        {itemsList.map((item, index) => {\n          const { text, icon, onClick } = item;\n          return (\n            <ListItem button key={text} onClick={onClick}>\n              {icon && <ListItemIcon>{icon}</ListItemIcon>}\n              <ListItemText primary={text} />\n            </ListItem>\n          );\n        })}\n      </List>\n    </MUIDrawer>\n  );\n};\n\nexport default withRouter(Drawer);\n","import React, {useState} from 'react';\nimport './Sidebar.css';\nimport {API_BASE_URL, ACCESS_TOKEN_NAME} from '../../constants/apiConstants';\nimport { withRouter } from \"react-router-dom\";\nimport Home from \"../../Home\";\nimport ManageOrganisation from \"../../Home\";\nimport ManageUser from \"../../Home\";\nimport ManageQuestions from \"../../Home\";\nimport ManageTemplate from \"../../Home\";\nimport ManageStudent from \"../../Home\";\nimport ViewReport from \"../../Contact\";\n\nimport LogOut from \"../LoginForm/LoginForm\";\n//import About from \"./About\";\n//import { Route, Switch } from \"react-router-dom\";\nimport Drawer from \"./Drawer.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n  } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\"\n  }\n});\n\nfunction Sidebar(props) {\n    const classes = useStyles();\n\n    const [state , setState] = useState({\n        email : \"\",\n        password : \"\",\n        confirmPassword: \"\",\n        successMessage: null\n    })\n    //name = localStorage.getItem('name');\n    //console.log(name);\n    const handleChange = (e) => {\n        const {id , value} = e.target\n        setState(prevState => ({\n            ...prevState,\n            [id] : value\n        }))\n    }\n\n    const redirectToHome = () => {\n        return localStorage.setItem('name');\n    }\n    const redirectToLogin = () => {\n        props.updateTitle('Login')\n        props.history.push('/login');\n    }\n    const handleSubmitClick = (e) => {\n        e.preventDefault();\n        if(state.password === state.confirmPassword) {\n           // sendDetailsToServer()\n        } else {\n            props.showError('Passwords do not match');\n        }\n    }\n    return(\n\n         <div className={classes.container}>\n      <Drawer />\n      <Switch>\n        <Route exact from=\"/landing\" render={props => <Home {...props} />} />\n        <Route exact path=\"/contact\" render={props => <ManageOrganisation {...props} />} />\n        <Route exact path=\"/manageUser\" render={props => <ManageUser {...props} />} />\n        <Route exact path=\"/contact\" render={props => <ManageQuestions {...props} />} />\n        <Route exact path=\"/contact\" render={props => <ManageTemplate {...props} />} />\n        <Route exact path=\"/contact\" render={props => <ManageStudent {...props} />} />\n        <Route exact path=\"/contact\" render={props => <ViewReport {...props} />} />\n\n        <Route exact path=\"/\" render={props => <LogOut {...props} />} />\n        {/* <Route exact path=\"/about\" render={props => <About {...props} />} /> */}\n      </Switch>\n    </div>\n\n    )\n}\n\nexport default Sidebar;","import React, {useState} from 'react';\nimport axios from 'axios';\nimport './Landing.css';\nimport Sidebar from '../Sidebar/Sidebar.js';\nimport { withRouter } from \"react-router-dom\";\n\n//import About from \"./About\";\n//import { Route, Switch } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n  } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\"\n  }\n});\n\nfunction RegistrationForm(props) {\n    const classes = useStyles();\n    \n    const [state , setState] = useState({\n        email : \"\",\n        password : \"\",\n        confirmPassword: \"\",\n        successMessage: null \n    })\n    //name = localStorage.getItem('name');\n    //console.log(name);\n    const handleChange = (e) => {\n        const {id , value} = e.target   \n        setState(prevState => ({\n            ...prevState,\n            [id] : value\n        }))\n    }\n    const sendDetailsToServer = () => {\n        if(state.email.length && state.password.length) {\n            props.showError(null);\n            const payload={\n                \"email\":state.email,\n                \"password\":state.password,\n            }\n            axios.post(\"http://localhost:8080/login/?email_id=\"+payload.email1+\"&password=\"+payload.password, payload)\n                .then(function (response) {\n                    if(response.status === 200){\n                        setState(prevState => ({\n                            ...prevState,\n                            'successMessage' : 'Registration successful. Redirecting to home page..'\n                        }))\n                        \n                        redirectToHome();\n                        props.showError(null)\n                    } else{\n                        props.showError(\"Some error ocurred\");\n                    }\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });    \n        } else {\n            props.showError('Please enter valid username and password')    \n        }\n        \n    }\n    const redirectToHome = () => {\n        return localStorage.setItem('name');\n    }\n    const redirectToLogin = () => {\n        props.updateTitle('Login')\n        props.history.push('/login'); \n    }\n    const handleSubmitClick = (e) => {\n        e.preventDefault();\n        if(state.password === state.confirmPassword) {\n            sendDetailsToServer()    \n        } else {\n            props.showError('Passwords do not match');\n        }\n    }\n    return(\n        <div>\n            \n        </div>\n    )\n}\n\nexport default withRouter(RegistrationForm);","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const FormInnerContainer = styled.div`\n    max-width: 350px;\n`;\n\nexport const FieldContainer = styled.div`\n    margin: 15px 0;\n`;","import React, {useState, Component, useEffect, useCallback} from 'react';\n//  import { withRouter } from \"react-router-dom\";\n//sidebar\nimport Home from \"../../Home\";\n\nimport {Input, Button, message, Form} from 'antd';\nimport {EyeInvisibleOutlined, EyeTwoTone, MailOutlined, LockOutlined, PhoneOutlined, UserOutlined, TeamOutlined, GlobalOutlined} from '@ant-design/icons';\n\nimport {\n    FormContainer,\n    FormInnerContainer,\n    FieldContainer,\n} from './Account.styled';\n\nimport axios from 'axios';\nimport {ACCESS_TOKEN_NAME} from \"../../constants/apiConstants\";\n\n\n\nfunction Account(props){\n    // const { userId } = props;\n    // const [response, setApiResponse] = useState();\n\n    // const [fieldValues , setFieldValues] = useState({\n    //     name : '',\n    //     contact: '',\n    //     email: '',\n    //     organization: '',\n    //     role: '',\n    //     id: '',\n    //     password:''\n    // });\n\n    // const [isEditState, setIsEditState] = useState(false);\n\n    // const setResponseToFormValues = (userData) => {\n    //     setFieldValues({\n    //         name : localStorage.getItem('userName') || '',\n    //         contact: localStorage.getItem('userContactNo') || '',\n    //         email: localStorage.getItem('emailID') || '',\n    //         password: localStorage.getItem('password') || '',\n    //         userContactNo : localStorage.getItem('userContactNo') || ''\n    //     });\n    //\n    // }\n\n\n    // const getUserDetails = useCallback(async () => {\n    //     const apiCallPromise = axios.get(\"/manageUser/?email_id=\"+localStorage.getItem('userName'),{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}}).then(function (response) {\n    //         if(response.status === 200) {\n    //             if (response.data.status === \"error\") {\n    //                 message.error(response.data.message);\n    //             } else {\n    //                 if(response.data.message !== \"\") {\n    //                     message.success(response.data.message);\n    //                 }\n    //\n    //                 return  response.data.data;\n    //             }\n    //         } else {\n    //             message.error(\"Something went wrong\");\n    //         }\n    //     }).catch(function (error) {\n    //         console.log(error.response);\n    //         if (error.response.status === 403) {\n    //             message.error(\"You were logged out!\");\n    //         } else {\n    //             message.error(\"Unable to contact server\");\n    //         }\n    //     });\n    //\n    //     apiCallPromise.then((apiResponse) => {\n    //         setApiResponse(apiResponse);\n    //         setResponseToFormValues(apiResponse);\n    //     });\n    //\n    // }, [userId]);\n    //\n    // useEffect(() => {\n    //     getUserDetails();\n    // }, [getUserDetails]);\n\n\n    // const changeField = (value, fieldId) => {\n    //     setFieldValues(\n    //         {\n    //             ...fieldValues,\n    //             [fieldId]: value,\n    //         }\n    //     );\n    // }\n\n    const saveEdit = e => {\n        e.preventDefault();\n\n        props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n\n                const payload={\n                    \"userName\":values.name,\n                    \"emailID\":values.email,\n                    \"userContactNo\":values.userContactNo,\n                    \"password\":values.password,\n                    \"userID\":localStorage.getItem('userID')\n                }\n\n                const reply = axios.patch(\"/manageUser/profile?user_id=\"+localStorage.getItem('userID'), payload,{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}}).then(response => {\n                    if(response.status === 200) {\n                        if (response.data.status === \"error\") {\n                            message.error(response.data.message);\n                        } else {\n                            if(response.data.message !== \"\") {\n                                message.success(response.data.message);\n                            }\n\n                            // props.history.push('/landing');\n                        }\n                    } else {\n                        message.error(\"Something went wrong\");\n                    }\n                }).catch(error => {\n                    console.log(error.response);\n                    if (error.response.status === 401 || error.response.status === 403) {\n                        localStorage.clear();\n                        message.error(\"You were logged out!\");\n                        props.history.push(`/login`);\n                    } else {\n                        message.error(\"Unable to contact server\");\n                    }\n                });\n            }\n        });\n    }\n\n    // const toggleEdit = () => {\n    //     setIsEditState(!isEditState);\n    // }\n\n    // const cancelEdit = () => {\n    //     setResponseToFormValues(response);\n    //     toggleEdit();\n    // }\n\n    const formItemLayout = {\n        labelCol: {\n            xs: { span: 8 },\n            sm: { span: 8 },\n        },\n        wrapperCol: {\n            xs: { span: 8 },\n            sm: { span: 8 },\n        },\n    };\n    const tailFormItemLayout = {\n        wrapperCol: {\n            xs: {\n                span: 8,\n                offset: 0,\n            },\n            sm: {\n                span: 8,\n                offset: 8,\n            },\n        },\n    };\n    const { getFieldDecorator } = props.form;\n\n    return (\n        <Form {...formItemLayout} onSubmit={saveEdit} >\n            <Form.Item label=\"Name\" hasFeedback>\n                {\n                    getFieldDecorator(\n                        'name',\n                        {\n                            rules: [{\n                                required: true,\n                                message: 'Name is required'\n                            }],\n                            initialValue: localStorage.getItem('userName') || ''\n                        }\n                    )(\n                        <Input\n                            allowClear\n                            prefix={<UserOutlined/>}\n                            placeholder=\"Enter Name\"\n                            // onChange={(event) => changeField(event.target.value, 'name')}\n                        />,\n                    )\n                }\n            </Form.Item>\n            <Form.Item label=\"Email ID\" hasFeedback>\n                {\n                    getFieldDecorator(\n                        'email',\n                        {\n                            rules: [{\n                                required: true,\n                                message: 'Email ID is required'\n                            },{\n                                pattern: /^[^\\s@]+@[^\\s@]+\\.([^\\s@1-9]){2,}$/,\n                                message: 'Invalid Email ID',\n                            }],\n                            initialValue: localStorage.getItem('emailID') || ''\n                        }\n                    )(\n                        <Input\n                            allowClear\n                            prefix={<MailOutlined/>}\n                            placeholder=\"Enter Email ID\"\n                            // onChange={(event) => changeField(event.target.value, 'email')}\n                        />,\n                    )\n                }\n            </Form.Item>\n            <Form.Item label=\"Password\" hasFeedback>\n                {\n                    getFieldDecorator(\n                        'password',\n                        {\n                            rules: [{\n                                required: false,\n                                message: 'Password is required'\n                            }, {\n                                min: 8,\n                                message: 'Password must be between 8 and 12 characters'\n                            },{\n                                max: 12,\n                                message: 'Password must be between 8 and 12 characters'\n                            }],\n                        }\n                    )(\n                        <Input.Password\n                            allowClear\n                            prefix={<LockOutlined/>}\n                            placeholder=\"Enter Password\"\n                            // onChange={(event) => changeField(event.target.value, 'password')}\n                            iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n                        />,\n                    )\n                }\n            </Form.Item>\n            <Form.Item label=\"Contact Number\" hasFeedback>\n                {\n                    getFieldDecorator(\n                        'userContactNo',\n                        {\n                            rules: [{\n                                pattern: /^[0-9]{8,10}$/,\n                                message: 'Invalid Contact Number'\n                            }],\n                            initialValue: localStorage.getItem('userContactNo') || ''\n                        }\n                    )(\n                        <Input\n                            allowClear\n                            prefix={<PhoneOutlined/>}\n                            placeholder=\"Enter Contact Number\"\n                            // onChange={(event) => changeField(event.target.value, 'userContactNo')}\n                        />,\n                    )\n                }\n            </Form.Item>\n            <Form.Item label=\"Role\">\n                <Input\n                    disabled={true}\n                    prefix={<TeamOutlined/>}\n                    value={localStorage.getItem('roleName')}\n                />\n            </Form.Item>\n            <Form.Item label=\"Organization\">\n                <Input\n                    disabled={true}\n                    prefix={<GlobalOutlined/>}\n                    value={localStorage.getItem('orgName') !== 'null' ? localStorage.getItem('orgName') : ''}\n                />\n            </Form.Item>\n            <Form.Item {...tailFormItemLayout} >\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Save\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n}\nexport default Form.create()(Account);","import Fuse from 'fuse.js';\n\nexport const filterArray = (options, filterValue, keyArray) => {\n\n    let filterConfig = {\n        includeScore: true,\n        minMatchCharLength: 1,\n        threshold: 0.5,\n    };\n\n    if (typeof options[0] !== 'string' && keyArray) {\n        filterConfig = {\n            ...filterConfig,\n            keys: keyArray,\n        }\n    }\n\n    const filteredRowsFuse = new Fuse(options, filterConfig);\n    const filteredRowsData = filteredRowsFuse.search(filterValue);\n\n    return filteredRowsData.map((filterRowDataObject) => filterRowDataObject.item);\n}","import styled from 'styled-components';\nimport { Input, Icon } from 'antd';\n\nexport const InputFilterContainer = styled.div`\n    margin-bottom: 15px;\n    display: flex;\n    justify-content: space-between;\n`;\n    \nexport const InputField = styled(Input)`\n    max-width: 350px;\n`;\n\nexport const FieldContainer = styled.div`\n    margin: 15px 0;\n`;\n\nexport const IconContainer = styled.div`\n    padding: 5px 10px;\n`;\n\nexport const ActionContainer = styled.div`\n    display: flex;\n`;","import React from 'react';\nimport { Select } from 'antd';\n\nimport {\n    filterArray,\n} from '../../utils/utilityFunctions'\n\n\nexport default class SelectDropDownField extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    onChangeHandler = (value) => {\n        this.props.onChangeHandler && this.props.onChangeHandler(value);\n    }\n\n    filterOption = (inputValue, option) => {\n\n        const filteredOptionData = filterArray([option.props.children], inputValue);\n        return !!filteredOptionData.length;\n    }\n\n    render() {\n\n        //  Below commented can be directly passed from the parent\n\n        let {\n            value = '',\n            options= [],\n            // disabled = false,\n            // allowClear = false,\n            // showArrow = false,\n            // showSearch = false,\n            // placeholder = '',\n            ...restProps\n        } = this.props;\n\n        // let temp = { ...a, ...d, b: 'b'};\n\n        // let temp2 = {a: 'a', b: 'b', x: 'x', y: 'y', z: 'z'};\n\n        // let a = temp2.a;\n        // let b = temp2.b;\n        // let c = temp2.c || 'testing';\n\n        // let { a, b, c = 'testing', ...rest } = temp2;\n        // rest = { x: 'x', y: 'y', z: 'z'}\n\n        value = value.toString();\n\n        return (\n            <Select\n                {...restProps}\n                value={value || undefined}\n                mode=\"default\"\n                style={{ width: '100%' }}\n                onChange={this.onChangeHandler}\n                filterOption={this.filterOption}\n            >\n                {options.map(option => (\n                    <Select.Option key={`dropdown-options-${option.id || option.key}`} value={option.id && option.id.toString() || option.key && option.key.toString()}>\n                        {option.label || option.name}\n                    </Select.Option>\n                ))}\n            </Select>\n        );\n    }\n}\n","/**\n *\n * ManageStudentsAddEdit\n *\n */\n\nimport React from 'react';\nimport { Button, Modal, Input , message} from 'antd';\nimport axios from 'axios';\nimport SelectDropDownComponent from '../SelectDropDownComponent';\nimport {ACCESS_TOKEN_NAME} from \"../../constants/apiConstants\";\nimport {\n    FieldContainer,\n} from './ManageStudents.styled';\n\nimport {\n    manageStudentsOrganizationResponse,\n    manageStudentsCoachListResponse,\n} from './ManageStudents.constants';\n// {studentID: 1, studentReferenceNumber: 123, studentName: \"sid1\", studentContactNo: \"123\", orgID: 1, …}\nclass ManageStudentsAddEdit extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n    constructor(props) {\n        super(props);\n        this.state = {\n            addEditingStudentData: {\n                name: '',\n                referenceNumber: '',\n                contactNumber: '',\n                orgName: '',\n                coach: '',\n            },\n            organizationList: [],\n            coachList: [],\n            // coachList: manageStudentsCoachListResponse.data,\n        }\n    }\n\n    componentDidMount() {\n\n\n        //http://localhost:8080/manageOrganization/getAll/\n        const apiCallPromise = axios.get(\"/manageOrganization/getAll/\",{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}})\n        .then(function (response) {\n            console.log(response)\n            console.log(response.data.data)\n            //console.log(response.data.data.orgName)\n            //console.log(response.data.data.orgID)\n            //console.log(this.state.dataSource)\n            console.log(\"akash\")\n        if(response.status === 200){\n            //this.setState({ dataSource: response.data.data });\n            //this.state.dataSource = response.data.data;\n            //this.state.orgID = response.data.data.orgID;\n            return response.data.data;\n        } else{\n            console.log('error');\n        }\n    })\n    .catch(function (error) {\n        console.log(error);\n    });\n\n    // using .then, create a new apiCallPromise which extracts the data\n    apiCallPromise.then((response) => {\n\n      console.log('response.data.data : ', response);\n      // [{name: 'a', b: 'b'}, {name: 'c', d: 'd'}]\n\n\n      const parsedData  = response.map((rowData) => {\n        return Object.values(rowData).map((value) => `${value}`);\n      });\n      console.log('setting data : ', parsedData);\n      this.setState({ organizationList: response });\n    })\n\n      //  this.setState({ organizationList: manageStudentsOrganizationResponse.data })\n\n// {name: \"qwe\", referenceNumber: \"1234\", contactNumber: \"1234\", organization: \"2\", coach: \"2\"}\n        const { addEditingStudentData } = this.props;\n        if (addEditingStudentData) {\n            this.setState({ addEditingStudentData: {\n                ...addEditingStudentData,\n                name: addEditingStudentData.studentName,\n                referenceNumber: addEditingStudentData.studentReferenceNumber,\n                contactNumber: addEditingStudentData.studentContactNo,\n                orgName: addEditingStudentData.orgName,\n                coach: addEditingStudentData.userID\n            }});\n        }\n    }\n    // \"studentReferenceNumber\" : this.state.addEditingStudentData.referenceNumber,\n    // \"studentName\" : this.state.addEditingStudentData.name,\n    // \"studentContactNo\" : this.state.addEditingStudentData.contactNumber,\n    // \"userID\":this.state.addEditingStudentData.coach,\n    // \"orgID\":this.state.addEditingStudentData.organization\n\n    changeFilter = (value, fieldId) => {\n        if (fieldId === 'orgName') {\n\n            //http://localhost:8080/manageStudents/getCoaches?orgID=1\n            //var id =\n            const apiCallPromise = axios.get(`manageStudents/getCoaches?orgID=${this.state.addEditingStudentData.orgName}`,{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}})\n        .then(function (response) {\n            console.log(response)\n            console.log(response.data.data)\n            //console.log(response.data.userName)\n            //console.log(this.state.dataSource)\n            console.log(\"akash\")\n        if(response.status === 200){\n            //this.setState({ dataSource: response.data.data });\n            //this.state.dataSource = response.data.data;\n            return response.data.data;\n        } else{\n            console.log('error');\n        }\n    })\n    .catch(function (error) {\n        console.log(error);\n    });\n\n    // using .then, create a new apiCallPromise which extracts the data\n    apiCallPromise.then((response) => {\n\n      console.log('response.data. : ', response);\n      // [{name: 'a', b: 'b'}, {name: 'c', d: 'd'}]\n\n\n\n      this.setState({\n        addEditingStudentData: {\n            ...this.state.addEditingStudentData,\n            [fieldId]: value,\n            coach: '',\n        },\n        coachList: response,\n    });\n\n    })\n        } else {\n            this.setState({ addEditingStudentData: {\n                ...this.state.addEditingStudentData,\n                [fieldId]: value,\n            } });\n        }\n    }\n\n\n    cancelAddEdit = () => {\n        this.setState({\n            addEditModalStatus: '',\n            addEditingStudentData: null\n        });\n    }\n    onFileChangeHandler = (e) => {\n        e.preventDefault();\n        this.setState({\n            selectedFile: e.target.files[0]\n        });\n        let formData = new FormData();\n        console.log(e.target.files[0])\n        console.log(this.state.selectedFile)\n        formData.append('file', this.state.selectedFile);\n        console.log(formData);\n        axios.post(\"/manageOrganization/upload\",formData,{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}} )\n            .then(res => {\n                    console.log(res.data);\n                    alert(\"File uploaded successfully.\")\n            })\n    };\n\n\n    submit = () => {\n        console.log('addEditingStudentData : ', this.state.addEditingStudentData);\n        console.log('addEditModalStatus : ', this.props.addEditModalStatus);\n\n\n        //http://localhost:8080/manageOrganization/add/\n        //http://localhost:8080/manageOrganization/update/\n\n       console.log(\"student details\");\n       console.log(this.state.addEditingStudentData);\n\n\n        // {studentID: 1, studentReferenceNumber: 123, studentName: \"sid1\", studentContactNo: \"123\", orgID: 1, …}\n        const payload={\n            \"orgID\":this.state.addEditingStudentData.orgID,\n            \"orgName\":this.state.addEditingStudentData.orgName,\n        }\n\n\n\n\n        console.log(payload)\n        if(this.props.addEditModalStatus === 'add'){\n\n            console.log(\"inside add the student\");\n            console.log(payload);\n            const reply = axios.post('/manageOrganization/',payload,{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}}).then(function (response) {\n                console.log(response);\n                console.log(\"updating Lists1\");\n\n            });\n            reply.then((response) => {\n                message.success(\"Organisation successfully added\");\n                this.props.updateListingData();\n            })\n        }else{\n            console.log(\"inside update the student\");\n            console.log(payload);\n           const reply = axios.patch('/manageOrganization/', payload,{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}})\n           .then(function (response) {\n                console.log(response);\n                console.log(\"updating Lists1\");\n\n            });\n            reply.then((response) => {\n                message.success(\"Organisation successfully updated\");\n                this.props.updateListingData();\n            })\n        }\n\n           //this.updateListingData()\n\n    }\n\n    render() {\n\n        const { addEditingStudentData, organizationList = [], coachList = [] } = this.state;\n        const { cancelAddEdit, addEditModalStatus } = this.props;\n\n        return (\n            <Modal\n                title={addEditModalStatus === 'edit' ? 'Edit Organization Name' : 'Add Organization Student'}\n                visible={addEditModalStatus.length}\n                onOk={addEditModalStatus === 'edit' ? this.editStudentData : this.createNewStudent}\n                onCancel={cancelAddEdit}\n                footer={[\n                    <>\n\n                    <Button key=\"back\" onClick={cancelAddEdit}>\n                        Cancel\n                    </Button>,\n                    <Button key=\"submit\" type=\"primary\" onClick={this.submit}>\n                        {addEditModalStatus === 'edit' ? 'Update' : 'Create'}\n                    </Button>,\n                    </>\n                ]}\n            >\n\n                <FieldContainer>\n                    <Input\n                        onChange={(event) => this.changeFilter(event.target.value, 'orgName')}\n                        value={addEditingStudentData.orgName}\n                        placeholder=\"Enter Name\"\n                    />\n                    <FieldContainer>\n                        <input type=\"file\" onChange={this.upload} placeholder=\"Upload Logo\"/>\n                    </FieldContainer>\n                </FieldContainer>\n\n                {/* <FieldContainer>\n                    <div >\n                                <label>Upload Your File </label>\n                                <input type=\"file\" className=\"form-control\" name=\"file\" onChange={this.onFileChangeHandler}/>\n                    </div>\n                </FieldContainer> */}\n\n            </Modal>\n        )\n    }\n}\n\n\nexport default ManageStudentsAddEdit;\n","/**\n *\n * ManageStudents\n *\n */\n\nimport { Button, Icon, message, Popconfirm, Table } from 'antd';\nimport axios from 'axios';\nimport React from 'react';\nimport S3FileUpload from 'react-s3';\nimport { ACCESS_TOKEN_NAME } from \"../../constants/apiConstants\";\n//import {aws} from '../../key';\nimport {\n    filterArray\n} from '../../utils/utilityFunctions';\nimport {\n    ActionContainer, IconContainer, InputField, InputFilterContainer\n} from './ManageStudents.styled';\nimport ManageStudentsAddEditModal from './ManageStudentsAddEditModal';\n\n\nconst props = {\n    name: 'file',\n    action: 'arn:aws:s3:us-west-1:113398994088:accesspoint/ubbuffaloaccesspoint',\n    headers: {\n        authorization: 'authorization-text',\n\n        'Access-Control-Allow-Origin': '*',\n    },\n    onChange(info) {\n        if (info.file.status !== 'uploading') {\n            console.log(info.file, info.fileList);\n        }\n        if (info.file.status === 'done') {\n            message.success(`${info.file.name} file uploaded successfully`);\n        } else if (info.file.status === 'error') {\n            message.error(`${info.file.name} file upload failed.`);\n        }\n    },\n};\nconst config = {\n    bucketName: 'ubbuffalo',\n    region: 'us-west-1',\n    accessKeyId: 'AKIAJ5566JC3RJTRX4IQ',\n    secretAccessKey: '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'\n}\n\nclass ManageOrg extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n    constructor(props) {\n        super(props);\n        this.state = {\n            filterValue: '',\n            dataSource: [],\n            addEditModalStatus: '',\n            addEditingStudentData: null,\n            deleteData: null,\n\n        }\n    }\n\n\n\n    componentDidMount() {\n        this.getStudentListApiCAllFunction();\n    }\n\n    getStudentListApiCAllFunction = () => {\n        //  ToDo: api call for the list of students data and save the data in this.state.dataSource\n\n        console.log(\"inside getStudentApi Call function 2\")\n        // http://localhost:8080/manageStudents/getAll\n        const apiCallPromise = axios.get(\"/manageOrganization/getAll\", { headers: { 'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME) } })\n            .then(function (response) {\n                console.log(response)\n                console.log(response.status)\n                console.log(response.data.data)\n                //console.log(this.state.dataSource)\n                console.log(\"akash\")\n                if (response.status === 200) {\n                    //this.setState({ dataSource: response.data.data });\n                    //this.state.dataSource = response.data.data;\n                    return response.data.data;\n                } else {\n                    console.log('error');\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n        // using .then, create a new apiCallPromise which extracts the data\n        apiCallPromise.then((response) => {\n\n            console.log('response.data.data : ', response);\n            // [{name: 'a', b: 'b'}, {name: 'c', d: 'd'}]\n\n            this.setState({ dataSource: response });\n        })\n\n    }\n\n    changeFilter = (event) => {\n        this.setState({ filterValue: event.target.value });\n    }\n\n    editStudentData = (data) => {\n        this.setState({\n            addEditModalStatus: 'edit',\n            addEditingStudentData: data\n        });\n    }\n\n    createNewStudent = () => {\n        this.setState({ addEditModalStatus: 'add' });\n    }\n\n    cancelAddEdit = () => {\n        this.setState({\n            addEditModalStatus: '',\n            addEditingStudentData: null\n        });\n    }\n\n    deleteStudent = (data) => {\n        //  ToDo: delete api call\n        console.log(\"delete\" + data)\n        this.setState({\n            addEditModalStatus: '',\n            deleteData: data\n        });\n        console.log(this.state.deleteData)\n        console.log(data)\n        //?email_id=\"+payload.email\n        const apiCallPromise = axios.delete(\"manageOrganization/delete?orgID=\" + data, { headers: { 'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME) } })\n            .then(function (response) {\n                console.log(\"inside delete function\")\n                console.log(response)\n\n                //console.log(this.state.dataSource)\n                console.log(\"akash\")\n                if (response.status === 200) {\n                    //this.setState({ dataSource: response.data.data });\n                    //this.state.dataSource = response.data.data;\n                    return response.data.data;\n                } else {\n                    console.log('error');\n                }\n            })\n            // apiCallPromise.then((response) => {\n            //     message.success(\"Organisation successfully deleted\");\n            //     this.updateListingData();\n            // })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n        apiCallPromise.then((response) => {\n            message.success(\"Organisation successfully deleted\");\n            this.getStudentListApiCAllFunction();\n        })\n        // message.success('Student successfully deleted');\n\n\n    }\n\n    updateListingData = () => {\n        console.log(\"inside the index page\");\n        this.getStudentListApiCAllFunction();\n        this.cancelAddEdit();\n    }\n\n    upload(e) {\n\n        console.log(e.target.files[0]);\n        const filename = e.target.files[0];\n        console.log(filename);\n        S3FileUpload.uploadFile(e.target.files[0], config)\n            .then((data) => {\n                console.log(data);\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n    render() {\n\n        const manageStudentsColumns = [\n\n            {\n                title: 'Organization Name',\n                dataIndex: 'orgName',\n                key: 'orgName',\n            },\n            // {\n            //     title: 'Upload',\n            //     dataIndex: 'orgID',\n            //     key: 'orgID',\n            //     render: (orgID,studentData) => {\n            //         return (\n            //                 <Upload {...props}>\n            //                     <Button icon={<UploadOutlined />}>Upload</Button>\n            //                 </Upload>\n\n            //         );\n            //     }\n            // },\n\n            // {\n            //     title: 'Upload',\n            //     dataIndex: 'orgID',\n            //     key: 'orgID',\n            //     render: (orgID,studentData) => {\n            //         return (\n            //                 <input type=\"file\" onChange={this.upload}/>\n\n            //         );\n            //     }\n            // },\n\n            {\n                title: 'Actions',\n                dataIndex: 'orgID',\n                key: 'orgID',\n                render: (orgID, studentData) => {\n                    return (\n                        <ActionContainer>\n                            <IconContainer>\n                                <Popconfirm\n                                    title={'Are you sure ?'}\n                                    onConfirm={() => this.deleteStudent(orgID)}\n                                    okText=\"Yes\"\n                                    cancelText=\"No\"\n                                >\n                                    <Icon type={'delete'} />\n                                </Popconfirm>\n                            </IconContainer>\n                            <IconContainer>\n                                <Icon type={'edit'} onClick={() => this.editStudentData(studentData)} />\n                            </IconContainer>\n                        </ActionContainer>\n                    );\n                }\n            },\n\n        ];\n\n        const { filterValue, dataSource, addEditModalStatus = '', addEditingStudentData } = this.state;\n\n        let filteredDataSource = dataSource;\n\n        if (filterValue && filterValue.length) {\n            filteredDataSource = filterArray(dataSource, filterValue, ['studentName', 'studentReferenceNumber', 'studentContactNo', 'organization.orgName', 'userID']);\n        }\n\n        return (\n            <div>\n                <InputFilterContainer>\n                    <InputField\n                        onChange={this.changeFilter}\n                        value={filterValue}\n                        placeholder=\"Enter Filter\"\n                    />\n                    <Button\n                        type=\"primary\"\n                        onClick={this.createNewStudent}\n                    >\n                        Add New Organization\n                    </Button>\n                </InputFilterContainer>\n                <Table\n                    dataSource={filteredDataSource}\n                    columns={manageStudentsColumns}\n                />\n                {addEditModalStatus && addEditModalStatus.length ? (\n                    <ManageStudentsAddEditModal\n                        addEditModalStatus={addEditModalStatus}\n                        addEditingStudentData={addEditingStudentData}\n                        cancelAddEdit={this.cancelAddEdit}\n                        updateListingData={this.updateListingData}\n                    />\n                ) : null}\n            </div>\n        )\n    }\n}\n\n\nexport default ManageOrg;\n","import React from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router';\nimport { Button, Modal, Input, message, Form, Select } from 'antd';\nimport {EyeInvisibleOutlined, EyeTwoTone, MailOutlined, LockOutlined, PhoneOutlined, UserOutlined, TeamOutlined, GlobalOutlined } from '@ant-design/icons';\n// import SelectDropDownComponent from '../SelectDropDownComponent';\n// import { FieldContainer } from './style';\nimport './AddEditModal.css'\nimport {ACCESS_TOKEN_NAME} from \"../../constants/apiConstants\";\n\nconst { Option } = Select;\n\nclass addEdit extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addEditUserData: {\n                userRoleOrgID : '',\n                userID : '',\n                emailID : '',\n                userName : '',\n                password : '',\n                userContactNo : '',\n                roleName : '',\n                orgID : ''\n            },\n            organizationList: [],\n            roleList: [],\n            orgRequired: true,\n            disableOrg: false\n        }\n    }\n\n    handleSignoutClick = () => {\n        localStorage.clear();\n        message.error(\"You were logged out!\");\n        this.props.history.push(`/login`);\n    }\n\n    componentDidMount() {\n        if (localStorage.getItem('roleName').toLowerCase() === 'ceo') {\n            this.setState({ roleList: ['Coach', 'Admin', 'Superadmin'] });\n        } else if (localStorage.getItem('roleName').toLowerCase() === 'superadmin') {\n            this.setState({ roleList: ['Coach', 'Admin', 'Superadmin'] });\n        } else if (localStorage.getItem('roleName').toLowerCase() === 'admin') {\n            this.setState({ roleList: ['Coach', 'Admin'] });\n        }\n\n        if (localStorage.getItem('roleName').toLowerCase() === 'ceo' || localStorage.getItem('roleName').toLowerCase() === 'superadmin') {\n            const { organizationList } = this.props;\n            this.setState({ organizationList: organizationList });\n        } else {\n            this.setState({organizationList: [\n                {\n                    orgID: localStorage.getItem('orgID'),\n                    orgName: localStorage.getItem('orgName')\n                }\n            ]});\n        }\n\n\n        const { addEditUserData } = this.props;\n        if (addEditUserData) {\n            this.setState({ addEditUserData: {\n                ...addEditUserData,\n                userID: addEditUserData.userID,\n                userName: addEditUserData.userName,\n                emailID: addEditUserData.emailID,\n                password: addEditUserData.password,\n                userContactNo: addEditUserData.userContactNo,\n                roleName: addEditUserData.roleName,\n                orgID: addEditUserData.orgID,\n            }});\n\n            if (addEditUserData.roleName.toLowerCase() === 'superadmin' || addEditUserData.roleName.toLowerCase() === 'ceo') {\n                this.props.form.resetFields(['orgID']);\n                this.setState({orgRequired: false});\n                this.setState({disableOrg: true});\n            }\n        }\n    }\n\n    changeFilter = (value, fieldId) => {\n        // this.setState({ addEditUserData: {\n        //     ...this.state.addEditUserData,\n        //     [fieldId]: value,\n        // }});\n\n        if (fieldId === 'roleName') {\n            if (value.toLowerCase() === 'superadmin') {\n                this.props.form.resetFields(['orgID']);\n                this.setState({orgRequired: false});\n                this.setState({disableOrg: true});\n            } else {\n                this.setState({orgRequired: true});\n                this.setState({disableOrg: false});\n            }\n        }\n    }\n\n    // refreshListingData = () => {\n    //     this.fetchUsersList();\n    //     this.cancelAddEdit();\n    // }\n\n    cancelAddEdit = () => {\n        this.setState({\n            addEditModalStatus: '',\n            addEditUserData: null\n        });\n    }\n\n    validateData = () => {\n        if (this.state.addEditUserData.userName === null || this.state.addEditUserData.userName === \"\") {\n            message.error(\"Name can not be empty\");\n            return false;\n        }\n\n        if (this.state.addEditUserData.emailID === null || this.state.addEditUserData.emailID === \"\") {\n            message.error(\"Email ID can not be empty\");\n            return false;\n        } else {\n            if (/^[^\\s@]+@[^\\s@]+\\.([^\\s@1-9]){2,}$/.test(this.state.addEditUserData.emailID) === false){\n                message.error(\"Invalid Email ID\");\n                return false;\n            }\n        }\n\n        if (this.state.addEditUserData.password !== null && this.state.addEditUserData.password !== \"\") {\n            if (this.state.addEditUserData.password.length < 8 || this.state.addEditUserData.password.length > 12) {\n                message.error(\"Password must be 8 to 12 characters long\");\n                return false;\n            }\n        }\n\n        if (this.state.addEditUserData.userContactNo !== null && this.state.addEditUserData.userContactNo !== \"\" && /^[0-9]{8,10}$/.test(this.state.addEditUserData.userContactNo) === false) {\n            message.error(\"Invalid Contact Number\");\n            return false;\n        }\n\n        if (this.state.addEditUserData.roleName === null || this.state.addEditUserData.roleName === \"\") {\n            message.error(\"Please select a Role\");\n            return false;\n        } else if (this.state.addEditUserData.roleName.toLowerCase() === \"coach\" || this.state.addEditUserData.roleName.toLowerCase() === \"admin\") {\n            if (this.state.addEditUserData.orgID === null || this.state.addEditUserData.orgID === \"\") {\n                message.error(\"Please select an Organization\");\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    submit = (values) => {\n        // if (this.validateData() === false) {\n        //     return;\n        // }\n        // console.log(\"submit\")\n        // console.log(values)\n\n        if(this.props.addEditModalStatus === 'add'){\n            if (values.password === null || values.password === \"\") {\n                message.error(\"Password can not be empty\");\n                return;\n            }\n\n            const newUser = {\n                \"user\": {\n                    \"emailID\": values.emailID,\n                    \"userName\": values.name,\n                    \"password\": values.password,\n                    \"userContactNo\": values.contactNo\n                },\n                \"role\":{\n                    \"roleName\": values.roleName\n                },\n                \"organization\":{\n                    \"orgID\": values.orgID\n                }\n            }\n\n            const addUserResponse = axios.post(\"/manageUser/?user_id=\"+localStorage.getItem('userID'), newUser, {headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}}).then(response => {\n                return response;\n            });\n\n            addUserResponse.then(response => {\n                if (response.status === 200) {\n                    if (response.data.status === \"error\") {\n                        message.error(response.data.message);\n                    } else if (response.data.status === \"success\") {\n                        this.props.refreshListingData();\n\n                        if (response.data.message !== \"\") {\n                            message.success(response.data.message);\n                        }\n                    }\n                } else {\n                    message.error(\"Something went wrong\");\n                }\n            }).catch(error => {\n                console.log(error.response);\n                if (error.response.status === 401 || error.response.status === 403) {\n                    this.handleSignoutClick();\n                } else {\n                    message.error(\"Unable to contact server\");\n                }\n            });\n        }else{\n            const newUser = {\n                \"userRoleOrgID\": this.state.addEditUserData.userRoleOrgID,\n                \"user\": {\n                    \"userID\": this.state.addEditUserData.userID,\n                    \"emailID\": values.emailID,\n                    \"userName\": values.name,\n                    \"password\": values.password,\n                    // !== undefined ? values.password : \"\",\n                    \"userContactNo\": values.contactNo\n                },\n                \"role\":{\n                    \"roleName\": values.roleName\n                },\n                \"organization\":{\n                    \"orgID\": values.orgID\n                }\n            }\n\n            const updateUserResponse = axios.patch(\"/manageUser/?user_id=\"+localStorage.getItem('userID'), newUser, {headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}}).then(function (response) {\n                return response;\n            });\n\n            updateUserResponse.then((response) => {\n                if (response.status === 200) {\n                    if (response.data.status === \"error\") {\n                        message.error(response.data.message);\n                    } else if (response.data.status === \"success\") {\n                        this.props.refreshListingData();\n\n                        if (response.data.message !== \"\") {\n                            message.success(response.data.message);\n                        }\n                    }\n                } else {\n                    message.error(\"Something went wrong\");\n                }\n            }).catch(error => {\n                console.log(error.response);\n                if (error.response.status === 401 || error.response.status === 403) {\n                    this.handleSignoutClick();\n                } else {\n                    message.error(\"Unable to contact server\");\n                }\n            });\n        }\n    }\n\n    render() {\n        const { addEditUserData, organizationList = [], roleList = [] } = this.state;\n        const { cancelAddEdit, addEditModalStatus } = this.props;\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 8 },\n                sm: { span: 8 },\n            },\n            wrapperCol: {\n                xs: { span: 8 },\n                sm: { span: 8 },\n            },\n        };\n\n        return (\n            <Modal\n                title={addEditModalStatus === 'edit' ? <b>Update User</b> : <b>Add New User</b>}\n                visible={addEditModalStatus.length > 0}\n                // onOk={addEditModalStatus === 'edit' ? this.editUserData : this.createNewUser}\n                okText={addEditModalStatus === 'edit' ? 'Update' : 'Create'}\n                onOk={() => {\n                    this.props.form.validateFields().then(values => {\n                        this.submit(values);\n                    }).catch(info => {\n                        console.log(\"Validation Failed:\", info);\n                    });\n                }}\n                cancelText=\"Cancel\"\n                onCancel={cancelAddEdit}\n                // footer={[\n                //     // <Button key=\"back\" onClick={cancelAddEdit}>\n                //     //     Cancel\n                //     // </Button>,\n                //     // <Button key=\"submit\" type=\"primary\" onClick={this.submit}>\n                //     //     {addEditModalStatus === 'edit' ? 'Update' : 'Create'}\n                //     // </Button>,\n                // ]}\n            >\n                <Form {...formItemLayout} >\n                    <Form.Item label=\"Name\" hasFeedback>\n                        {\n                            addEditModalStatus === 'add' ?\n                                getFieldDecorator(\n                                    'name',\n                                    {\n                                        rules: [{\n                                            required: true,\n                                            message: 'Name is required'\n                                        }\n                                        ],\n                                    }\n                                )(\n                                    <Input\n                                        allowClear\n                                        prefix={<UserOutlined/>}\n                                        placeholder=\"Enter Name\"\n                                        onChange={(event) => this.changeFilter(event.target.value, 'userName')}\n                                    />,\n                                )\n                            :\n                                getFieldDecorator(\n                                    'name',\n                                    {\n                                        rules: [{\n                                            required: true,\n                                            message: 'Name is required'\n                                        }],\n                                        initialValue: addEditUserData.userName\n                                    }\n                                )(\n                                    <Input\n                                        allowClear\n                                        prefix={<UserOutlined/>}\n                                        placeholder=\"Enter Name\"\n                                        onChange={(event) => this.changeFilter(event.target.value, 'userName')}\n                                    />,\n                                )\n                        }\n                    </Form.Item>\n                    <Form.Item label=\"Email ID\" hasFeedback>\n                        {\n                            addEditModalStatus === 'add' ?\n                                getFieldDecorator(\n                                    'emailID',\n                                    {\n                                        rules: [{\n                                            required: true,\n                                            message: 'Email ID is required',\n                                            // pattern: /^[^\\s@]+@[^\\s@]+\\.([^\\s@1-9]){2,}$/\n                                        },{\n                                            // type: 'email',\n                                            pattern: /^[^\\s@]+@[^\\s@]+\\.([^\\s@1-9]){2,}$/,\n                                            message: 'Invalid Email ID',\n                                        }]\n                                    }\n                                )(\n                                    <Input\n                                        allowClear\n                                        prefix={<MailOutlined/>}\n                                        placeholder=\"Enter Email ID\"\n                                        onChange={(event) => this.changeFilter(event.target.value, 'emailID')}\n                                    />,\n                                )\n                            :\n                                getFieldDecorator(\n                                    'emailID',\n                                    {\n                                        rules: [{\n                                            required: true,\n                                            message: 'Email ID is required',\n                                            // pattern: /^[^\\s@]+@[^\\s@]+\\.([^\\s@1-9]){2,}$/\n                                        },{\n                                            // type: 'email',\n                                            pattern: /^[^\\s@]+@[^\\s@]+\\.([^\\s@1-9]){2,}$/,\n                                            message: 'Invalid Email ID',\n                                        }],\n                                        initialValue: addEditUserData.emailID\n                                    }\n                                )(\n                                    <Input\n                                        allowClear\n                                        prefix={<MailOutlined/>}\n                                        placeholder=\"Enter Email ID\"\n                                        onChange={(event) => this.changeFilter(event.target.value, 'emailID')}\n                                    />,\n                                )\n                        }\n                    </Form.Item>\n                    <Form.Item label=\"Password\" hasFeedback>\n                        {\n                            addEditModalStatus === 'add' ?\n                                getFieldDecorator(\n                                    'password',\n                                    {\n                                        rules: [{\n                                            required: true,\n                                            message: 'Password is required'\n                                        }, {\n                                            min: 8,\n                                            message: 'Password must be between 8 and 12 characters'\n                                        },{\n                                            max: 12,\n                                            message: 'Password must be between 8 and 12 characters'\n                                        }],\n                                    }\n                                )(\n                                    <Input.Password\n                                        allowClear\n                                        prefix={<LockOutlined/>}\n                                        placeholder=\"Enter Password\"\n                                        onChange={(event) => this.changeFilter(event.target.value, 'password')}\n                                        iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n                                    />\n                                )\n                            :\n                                getFieldDecorator(\n                                    'password',\n                                    {\n                                        rules: [{\n                                            required: false,\n                                            message: 'Password is required'\n                                        }, {\n                                            min: 8,\n                                            message: 'Password must be between 8 and 12 characters'\n                                        },{\n                                            max: 12,\n                                            message: 'Password must be between 8 and 12 characters'\n                                        }],\n                                        initialValue: addEditUserData.password\n                                    }\n                                )(\n                                    <Input.Password\n                                        allowClear\n                                        prefix={<LockOutlined/>}\n                                        placeholder=\"Enter Password\"\n                                        onChange={(event) => this.changeFilter(event.target.value, 'password')}\n                                        iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n                                    />\n                                )\n                        }\n                    </Form.Item>\n                    <Form.Item label=\"Contact Number\" hasFeedback>\n                        {\n                            addEditModalStatus === 'add' ?\n                                getFieldDecorator(\n                                    'contactNo',\n                                    {\n                                        rules: [{\n                                            pattern: /^[0-9]{8,10}$/,\n                                            message: 'Invalid Contact Number'\n                                        }],\n                                    }\n                                )(\n                                    <Input\n                                        allowClear\n                                        // type={'number'}\n                                        prefix={<PhoneOutlined/>}\n                                        placeholder=\"Enter Contact Number\"\n                                        onChange={(event) => this.changeFilter(event.target.value, 'userContactNo')}\n                                    />\n                                )\n                            :\n                                getFieldDecorator(\n                                    'contactNo',\n                                    {\n                                        rules: [{\n                                            pattern: /^[0-9]{8,10}$/,\n                                            message: 'Invalid Contact Number'\n                                        }],\n                                        initialValue: addEditUserData.userContactNo\n                                    }\n                                )(\n                                    <Input\n                                        allowClear\n                                        // type={'number'}\n                                        prefix={<PhoneOutlined/>}\n                                        placeholder=\"Enter Contact Number\"\n                                        onChange={(event) => this.changeFilter(event.target.value, 'userContactNo')}\n                                    />\n                                )\n                        }\n                    </Form.Item>\n                    <Form.Item label=\"Role\" hasFeedback>\n                        {\n                            addEditModalStatus === 'add' ?\n                                getFieldDecorator(\n                                    'roleName',\n                                    {\n                                        rules: [{\n                                            required: true,\n                                            message: 'Please select a Role',\n                                        }],\n                                    }\n                                )(\n                                    <Select\n                                        showArrow\n                                        placeholder={\n                                            <React.Fragment>\n                                                <TeamOutlined/>\n                                                &nbsp; Select Role\n                                            </React.Fragment>\n                                        }\n                                        onChange={(value) => this.changeFilter(value, 'roleName')}\n                                    >\n                                        {\n                                            roleList.map(roleName =>\n                                                <Option value={roleName.toLowerCase()}>\n                                                    {roleName}\n                                                </Option>)\n                                        }\n                                    </Select>\n                                ) :\n\n                                getFieldDecorator(\n                                    'roleName',\n                                    {\n                                        rules: [{\n                                            required: true,\n                                            message: 'Please select a Role',\n                                        }],\n                                        initialValue: addEditUserData.roleName\n                                    }\n                                )(\n                                    <Select\n                                        showArrow\n                                        placeholder={\n                                            <React.Fragment>\n                                                <TeamOutlined/>\n                                                &nbsp; Select Role\n                                            </React.Fragment>\n                                        }\n                                        onChange={(value) => this.changeFilter(value, 'roleName')}\n                                        disabled={addEditUserData.roleName.toLowerCase() === 'ceo'}\n                                    >\n                                        {\n                                            roleList.map(roleName =>\n                                                <Option value={roleName.toLowerCase()}>\n                                                    {roleName}\n                                                </Option>)\n                                        }\n                                    </Select>\n                                )\n                        }\n                    </Form.Item>\n                    <Form.Item label=\"Organization\" hasFeedback>\n                        {\n                            addEditModalStatus === 'add' ?\n                                getFieldDecorator(\n                                    'orgID',\n                                    {\n                                        rules: [{\n                                            required: this.state.orgRequired,\n                                            message: 'Please select an Organization',\n                                        }],\n                                    }\n                                )(\n                                    <Select\n                                        showSearch\n                                        allowClear\n                                        showArrow\n                                        placeholder={\n                                            <React.Fragment>\n                                                <GlobalOutlined/>\n                                                &nbsp; Select Organization\n                                            </React.Fragment>\n                                        }\n                                        onChange={(value) => this.changeFilter(value, 'orgID')}\n                                        disabled={this.state.disableOrg}\n                                    >\n                                        {\n                                            organizationList.map(organizationData =>\n                                                <Option value={organizationData.orgID}>\n                                                    {organizationData.orgName}\n                                                </Option>)\n                                        }\n                                    </Select>\n                                ) :\n\n                                getFieldDecorator(\n                                    'orgID',\n                                    {\n                                        rules: [{\n                                            required: this.state.orgRequired,\n                                            message: 'Please select an Organization',\n                                        }],\n                                        initialValue: addEditUserData.roleName.toLowerCase() !== 'superadmin' && addEditUserData.roleName.toLowerCase() !== 'ceo' ? addEditUserData.orgID : '',\n                                    }\n                                )(\n                                    <Select\n                                        showSearch\n                                        allowClear\n                                        showArrow\n                                        placeholder={\n                                            <React.Fragment>\n                                                <GlobalOutlined/>\n                                                &nbsp; Select Organization\n                                            </React.Fragment>\n                                        }\n                                        onChange={(value) => this.changeFilter(value, 'orgID')}\n                                        disabled={this.state.disableOrg}\n                                    >\n                                        {\n                                            organizationList.map(organizationData =>\n                                                <Option value={organizationData.orgID}>\n                                                    {organizationData.orgName}\n                                                </Option>)\n                                        }\n                                    </Select>\n                                )\n                        }\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n}\n\n\nexport default withRouter(Form.create()(addEdit));//addEdit;\n","import styled from 'styled-components';\nimport { Input, Icon } from 'antd';\n\nexport const InputFilterContainer = styled.div`\n    margin-bottom: 15px;\n    display: flex;\n    justify-content: space-between;\n`;\n\nexport const InputField = styled(Input)`\n    max-width: 350px;\n`;\n\nexport const FieldContainer = styled.div`\n    margin: 15px 0;\n`;\n\nexport const IconContainer = styled.div`\n    padding: 5px 10px;\n`;\n\nexport const ActionContainer = styled.div`\n    display: flex;\n`;","import React from 'react';\nimport axios from 'axios';\nimport './ListUsers.css'\nimport AddEditModal from './AddEditModal';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { filterArray } from '../../utils/utilityFunctions';\nimport { Table, Button, Icon, Popconfirm, message, Tooltip } from 'antd';\nimport { InputFilterContainer, InputField, IconContainer, ActionContainer } from './style';\nimport {ACCESS_TOKEN_NAME} from \"../../constants/apiConstants\";\n\nclass ManageUsers extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filterValue: '',\n            dataSource: [],\n            addEditModalStatus: '',\n            addEditUserData: null,\n            deleteData:null,\n            organizationList: [],\n        }\n    }\n\n    handleSignoutClick = () => {\n        localStorage.clear();\n        message.error(\"You were logged out!\");\n        this.props.history.push(`/login`);\n    }\n\n    componentDidMount() {\n        this.fetchUsersList();\n\n        if (localStorage.getItem('roleName').toLowerCase() === 'ceo' || localStorage.getItem('roleName').toLowerCase() === 'superadmin') {\n            axios.get(\"/manageOrganization/getAll/\", {headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}}).then(response => {\n                if (response.status === 200) {\n                    this.setState({organizationList: response.data.data});\n                } else {\n                    console.log('error fetching orgList');\n                }\n            }).catch(error => {\n                console.log(error.response);\n                if (error.response.status === 401 || error.response.status === 403) {\n                    // message.error(\"You were logged out!\");\n                    // this.handleSignoutClick();\n                } else {\n                    message.error(\"Unable to contact server\");\n                }\n                return false;\n            });\n        }\n    }\n\n    fetchUsersList = () => {\n        axios.get(\"/manageUser/getAll/?user_id=\"+localStorage.getItem('userID'), {headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}}).then(response => {\n            if(response.status === 200){\n                if(response.data.status === \"error\") {\n                    message.error(response.data.message);\n                }else{\n                    if(response.data.message !== \"\") {\n                        message.success(response.data.message);\n                    }\n                    this.setState({ dataSource: response.data.data });\n                }\n            } else {\n                message.error(\"Something went wrong\");\n            }\n        }).catch(error => {\n            console.log(error.response);\n            if (error.response.status === 401 || error.response.status === 403) {\n                // message.error(\"You were logged out!\");\n                this.handleSignoutClick();\n            } else {\n                message.error(\"Unable to contact server\");\n            }\n        });\n    }\n\n\n    // export ManageUsers();\n\n    deleteUser = (userRoleOrgID, userData) => {\n        this.setState({\n            addEditModalStatus: '',\n            deleteData: userData\n        });\n\n        const deleteUserPayload = {\n            userRoleOrgID: userData.userRoleOrgID,\n            user: userData.user,\n            role: userData.role,\n            organization: userData.organization\n        }\n\n        axios.delete(\"/manageUser/?user_id=\"+localStorage.getItem('userID'), {data: deleteUserPayload, headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}}).then(response => {\n            if (response.status === 200) {\n                if (response.data.status === \"error\") {\n                    message.error(response.data.message);\n                } else if (response.data.status === \"success\") {\n                    if (response.data.message !== \"\") {\n                        message.success(response.data.message);\n                    }\n\n                    const dataSource = [...this.state.dataSource];\n                    // this.setState({ dataSource: dataSource.filter(item => item.userRoleOrgID !== userRoleOrgID) });\n                    dataSource[dataSource.indexOf(userData)].deleted = true;\n                    this.setState({ dataSource: dataSource });\n                    // this.refreshListingData();\n                }\n            } else {\n                message.error(\"Something went wrong\");\n            }\n        }).catch(error => {\n            console.log(error.response);\n            if (error.response.status === 401 || error.response.status === 403) {\n                // message.error(\"You were logged out!\");\n                this.handleSignoutClick();\n            } else {\n                message.error(\"Unable to contact server\");\n            }\n        });\n    }\n\n    reviveUser = (userRoleOrgID, userData) => {\n        this.setState({\n            addEditModalStatus: '',\n            deleteData: userData\n        });\n\n        const reviveUserPayload = {\n            userRoleOrgID: userData.userRoleOrgID,\n            deleted: userData.deleted,\n            user: userData.user,\n            role: userData.role,\n            organization: userData.organization\n        }\n\n        axios.post(\"/manageUser/revive?user_id=\"+localStorage.getItem('userID'), reviveUserPayload, {headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}}).then(response => {\n            if (response.status === 200) {\n                if (response.data.status === \"error\") {\n                    message.error(response.data.message);\n                } else if (response.data.status === \"success\") {\n                    if (response.data.message !== \"\") {\n                        message.success(response.data.message);\n                    }\n\n                    const dataSource = [...this.state.dataSource];\n                    dataSource[dataSource.indexOf(userData)].deleted = false;\n                    this.setState({ dataSource: dataSource });\n                    // this.refreshListingData();\n                }\n            } else {\n                message.error(\"Something went wrong\");\n            }\n        }).catch(error => {\n            console.log(error.response);\n            if (error.response.status === 401 || error.response.status === 403) {\n                // message.error(\"You were logged out!\");\n                this.handleSignoutClick();\n            } else {\n                message.error(\"Unable to contact server\");\n            }\n        });\n    }\n\n    createNewUser = () => {\n        this.setState({ addEditModalStatus: 'add' });\n    }\n\n    editUserData = (userRoleOrgID, userData) => {\n        let orgID = userData.organization.orgID;\n\n        if(userData.role.roleName.toLowerCase() === 'superadmin' || userData.role.roleName.toLowerCase() === 'ceo'){\n            orgID = '';\n        }\n\n        this.setState({\n            addEditModalStatus: 'edit',\n            addEditUserData: {\n                userRoleOrgID : userData.userRoleOrgID,\n                userID : userData.user.userID,\n                emailID : userData.user.emailID,\n                userName : userData.user.userName,\n                password : '',\n                userContactNo : userData.user.userContactNo,\n                roleName : userData.role.roleName,\n                orgID : orgID\n            }\n        });\n    }\n\n    cancelAddEdit = () => {\n        this.setState({\n            addEditModalStatus: '',\n            addEditUserData: null\n        });\n    }\n\n    changeFilter = (event) => {\n        this.setState({ filterValue: event.target.value });\n    }\n\n    refreshListingData = () => {\n        this.fetchUsersList();\n        this.cancelAddEdit();\n    }\n\n    render() {\n        const manageUsersColumns = [\n            {\n                title: 'S. No.',\n                dataIndex: '',\n                key: 'S. No.',\n                render: (text, record, index) => index+1,\n            },\n            {\n                title: 'Name',\n                dataIndex: 'user.userName',\n                key: 'userName',\n                sorter: (a, b) => {\n                        a = a.user.userName || '';\n                        b = b.user.userName || '';\n                    return a.localeCompare(b)\n                },\n            },\n            {\n                title: 'Email ID',\n                dataIndex: 'user.emailID',\n                key: 'emailID',\n                sorter: (a, b) => {\n                    a = a.user.emailID || '';\n                    b = b.user.emailID || '';\n                    return a.localeCompare(b)\n                },\n            },\n            {\n                title: 'Role',\n                dataIndex: 'role.roleName',\n                key: 'roleName',\n                sorter: (a, b) => {\n                    a = a.role.roleName || '';\n                    b = b.role.roleName || '';\n                    return a.localeCompare(b)\n                },\n            },\n            {\n                title: 'Organization Name',\n                dataIndex: 'organization.orgName',\n                key: 'orgName',\n                sorter: (a, b) => {\n                    a = a.organization.orgName || '';\n                    b = b.organization.orgName || '';\n                    return a.localeCompare(b)\n                }\n            },\n            {\n                title: 'Status',\n                dataIndex: 'deleted',\n                key: 'deleted',\n                render: deleted => (deleted ? 'Inactive' : 'Active'),\n                sorter: (a, b) => {\n                    a = a.deleted.toString();\n                    b = b.deleted.toString();\n                    return a.localeCompare(b)\n                },\n            },\n            {\n                title: 'Actions',\n                dataIndex: 'userRoleOrgID',\n                key: 'userRoleOrgID',\n                render: (userRoleOrgID, userData) => {\n                    return (\n                        <ActionContainer>\n                            <IconContainer>\n                                <Tooltip title=\"Edit User\">\n                                    <Icon type={'edit'} onClick={() => this.editUserData(userRoleOrgID, userData)} />\n                                </Tooltip>\n                            </IconContainer>\n                            {\n                                userData.deleted ?\n                                    <IconContainer>\n                                        <Tooltip title=\"Revive User\">\n                                            <Popconfirm\n                                                title={'Are you sure to revive?'}\n                                                onConfirm={() => this.reviveUser(userRoleOrgID, userData)}\n                                                okText=\"Yes\"\n                                                cancelText=\"No\"\n                                            >\n                                                <Icon type={'sync'}/>\n                                            </Popconfirm>\n                                        </Tooltip>\n                                    </IconContainer>\n                                :\n                                    <IconContainer>\n                                        <Tooltip title=\"Delete User\">\n                                            <Popconfirm\n                                                title={'Are you sure to delete?'}\n                                                onConfirm={() => this.deleteUser(userRoleOrgID, userData)}\n                                                okText=\"Yes\"\n                                                cancelText=\"No\"\n                                            >\n                                                <Icon type={'delete'}/>\n                                            </Popconfirm>\n                                        </Tooltip>\n                                    </IconContainer>\n                            }\n                        </ActionContainer>\n                    );\n                }\n            },\n        ];\n\n\n        const { filterValue, dataSource, addEditModalStatus = '', addEditUserData, organizationList } = this.state;\n\n        let filteredDataSource = dataSource;\n        if (filterValue && filterValue.length > 0) {\n            filteredDataSource = filterArray(\n                dataSource,\n                filterValue,\n                ['user.userName', 'user.emailID', 'role.roleName', 'organization.orgName', 'deleted']\n            );\n        }\n\n        return (\n            <div>\n                <InputFilterContainer>\n                    <InputField\n                        prefix={<SearchOutlined/>}\n                        onChange={this.changeFilter}\n                        value={filterValue}\n                        allowClear\n                        placeholder=\"Search User\"\n                    />\n                    <Button\n                        type=\"primary\"\n                        onClick={this.createNewUser}\n                    >Add User</Button>\n                </InputFilterContainer>\n                <Table\n                    rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' :  'table-row-dark'}\n                    dataSource={filteredDataSource}\n                    columns={manageUsersColumns}\n                />\n                {\n                    addEditModalStatus && addEditModalStatus.length > 0 ? (\n                        <AddEditModal\n                            addEditModalStatus={addEditModalStatus}\n                            addEditUserData={addEditUserData}\n                            cancelAddEdit={this.cancelAddEdit}\n                            refreshListingData={this.refreshListingData}\n                            organizationList={organizationList}\n                        />\n                    ) : null\n                }\n            </div>\n        )\n    }\n}\n\n\nexport default ManageUsers;","import styled from 'styled-components';\nimport { Input, Icon } from 'antd';\n\nexport const InputFilterContainer = styled.div`\n    margin-bottom: 15px;\n    display: flex;\n    justify-content: space-between;\n`;\n    \nexport const InputField = styled(Input)`\n    max-width: 350px;\n`;\n\nexport const FieldContainer = styled.div`\n    margin: 15px 0;\n`;\n\nexport const IconContainer = styled.div`\n    padding: 5px 10px;\n`;\n\nexport const ActionContainer = styled.div`\n    display: flex;\n`;","/**\n *\n * ManageStudentsAddEdit\n *\n */\n\nimport React from 'react';\nimport { Button, Modal, Input, message } from 'antd';\nimport axios from 'axios';\nimport SelectDropDownComponent from '../SelectDropDownComponent';\nimport {ACCESS_TOKEN_NAME} from \"../../constants/apiConstants\";\nimport {\n    FieldContainer,\n} from './ManageStudents.styled';\n\nimport {\n    manageStudentsOrganizationResponse,\n    manageStudentsCoachListResponse,\n} from './ManageStudents.constants';\n// {studentID: 1, studentReferenceNumber: 123, studentName: \"sid1\", studentContactNo: \"123\", orgID: 1, …}\nclass ManageStudentsAddEdit extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n    constructor(props) {\n        super(props);\n        this.state = {\n            addEditingStudentData: {\n                name: '',\n                referenceNumber: '',\n                contactNumber: '',\n                organization: '',\n                coach: '',\n            },\n            organizationList: [],\n            coachList: [],\n            // coachList: manageStudentsCoachListResponse.data,\n        }\n    }\n\n    componentDidMount() {\n\n\n        //http://localhost:8080/manageOrganization/getAll/\n        const apiCallPromise = axios.get(\"/manageOrganization/getAll/\",{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}})\n        .then(function (response) {\n            console.log(response)\n            console.log(response.data.data)\n            //console.log(response.data.data.orgName)\n            //console.log(response.data.data.orgID)\n            //console.log(this.state.dataSource)\n            console.log(\"akash\")\n        if(response.status === 200){\n            //this.setState({ dataSource: response.data.data });\n            //this.state.dataSource = response.data.data;\n            //this.state.orgID = response.data.data.orgID;\n            return response.data.data;\n        } else{\n            console.log('error');\n        }\n    })\n    .catch(function (error) {\n        console.log(error);\n    });\n\n    // using .then, create a new apiCallPromise which extracts the data\n    apiCallPromise.then((response) => {\n\n      console.log('response.data.data : ', response);\n      // [{name: 'a', b: 'b'}, {name: 'c', d: 'd'}]\n\n\n    //   const parsedData  = response.map((rowData) => {\n    //     return Object.values(rowData).map((value) => `${value}`);\n    //   });\n    //   console.log('setting data : ', parsedData);\n      this.setState({ organizationList: response });\n    })\n\n      //  this.setState({ organizationList: manageStudentsOrganizationResponse.data })\n\n// {name: \"qwe\", referenceNumber: \"1234\", contactNumber: \"1234\", organization: \"2\", coach: \"2\"}\n        const { addEditingStudentData } = this.props;\n        if (addEditingStudentData) {\n            this.setState({ addEditingStudentData: {\n                ...addEditingStudentData,\n                name: addEditingStudentData.studentName,\n                referenceNumber: addEditingStudentData.studentReferenceNumber,\n                contactNumber: addEditingStudentData.studentContactNo,\n                organization: addEditingStudentData.orgID,\n                coach: addEditingStudentData.userID\n            }});\n        }\n    }\n    // \"studentReferenceNumber\" : this.state.addEditingStudentData.referenceNumber,\n    // \"studentName\" : this.state.addEditingStudentData.name,\n    // \"studentContactNo\" : this.state.addEditingStudentData.contactNumber,\n    // \"userID\":this.state.addEditingStudentData.coach,\n    // \"orgID\":this.state.addEditingStudentData.organization\n\n    changeFilter = (value, fieldId) => {\n        if (fieldId === 'organization') {\n\n            //http://localhost:8080/manageStudents/getCoaches?orgID=1\n            //var id =\n            const apiCallPromise = axios.get(`manageStudents/getCoaches?orgID=${value}`,{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}})\n        .then(function (response) {\n            console.log(response)\n            console.log(response.data.data)\n            //console.log(response.data.userName)\n            //console.log(this.state.dataSource)\n            console.log(\"akash\")\n        if(response.status === 200){\n            //this.setState({ dataSource: response.data.data });\n            //this.state.dataSource = response.data.data;\n            return response.data.data;\n        } else{\n            console.log('error');\n        }\n    })\n    .catch(function (error) {\n        console.log(error);\n    });\n\n    // using .then, create a new apiCallPromise which extracts the data\n    apiCallPromise.then((response) => {\n\n      console.log('response.data. : ', response);\n      // [{name: 'a', b: 'b'}, {name: 'c', d: 'd'}]\n\n\n\n      this.setState({\n        addEditingStudentData: {\n            ...this.state.addEditingStudentData,\n            [fieldId]: value,\n            coach: '',\n        },\n        coachList: response,\n    });\n\n    })\n        } else {\n            this.setState({ addEditingStudentData: {\n                ...this.state.addEditingStudentData,\n                [fieldId]: value,\n            } });\n        }\n    }\n    updateListingData = () => {\n        console.log(\"updateListingData 2\");\n        this.getStudentListApiCAllFunction();\n        this.cancelAddEdit();\n    }\n\n    cancelAddEdit = () => {\n        this.setState({\n            addEditModalStatus: '',\n            addEditingStudentData: null\n        });\n    }\n\n    getStudentListApiCAllFunction = () => {\n\n\n       // http://localhost:8080/manageStudents/getAll\n       console.log(\"refreshed 3\");\n        const apiCallPromise = axios.get(\"/manageStudents/getAll\",{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}})\n        .then(function (response) {\n            console.log(response)\n            console.log(response.status)\n            console.log(response.data.data)\n            //console.log(this.state.dataSource)\n            console.log(\"akash\")\n        if(response.status === 200){\n            //this.setState({ dataSource: response.data.data });\n            //this.state.dataSource = response.data.data;\n            return response.data.data;\n        } else{\n            console.log('error');\n        }\n    })\n    .catch(function (error) {\n        console.log(error);\n    });\n\n    // using .then, create a new apiCallPromise which extracts the data\n    apiCallPromise.then((response) => {\n\n      console.log('response.data.data : ', response);\n      // [{name: 'a', b: 'b'}, {name: 'c', d: 'd'}]\n\n\n      const parsedData  = response.map((rowData) => {\n        return Object.values(rowData).map((value) => `${value}`);\n      });\n      console.log('setting data : ', parsedData);\n      this.setState({ dataSource: response });\n    })\n\n    }\n\n    submit = () => {\n        console.log('addEditingStudentData : ', this.state.addEditingStudentData);\n        console.log('addEditModalStatus : ', this.props.addEditModalStatus);\n\n\n        //http://localhost:8080/manageOrganization/add/\n        //http://localhost:8080/manageOrganization/update/\n\n       console.log(\"student details\");\n       console.log(this.state.addEditingStudentData);\n\n\n        // {studentID: 1, studentReferenceNumber: 123, studentName: \"sid1\", studentContactNo: \"123\", orgID: 1, …}\n        const payload={\n            \"studentReferenceNumber\" : this.state.addEditingStudentData.referenceNumber,\n            \"studentName\" : this.state.addEditingStudentData.name,\n            \"studentContactNo\" : this.state.addEditingStudentData.contactNumber,\n            \"userID\":this.state.addEditingStudentData.coach,\n            \"orgID\":this.state.addEditingStudentData.organization\n        }\n        console.log(payload)\n        if(this.props.addEditModalStatus === 'add'){\n\n            console.log(\"inside add the student\");\n            console.log(payload);\n            const reply = axios.post('/manageStudents/add',payload,{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}}).then(function (response) {\n                console.log(response);\n                console.log(\"updating Lists1\");\n\n\n            });\n\n            reply.then((response) => {\n                message.success(\"Student successfully added\");\n                this.props.updateListingData();\n            })\n        }else{\n            console.log(\"inside update the student\");\n            console.log(payload);\n         const reply =   axios.patch('/manageStudents/update', payload,{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}})\n           .then(function (response) {\n                console.log(response);\n                console.log(\"updating Lists1\");\n\n            });\n            reply.then((response) => {\n                message.success(\"Student successfully updated\");\n                this.props.updateListingData();\n            })\n        }\n\n           //this.updateListingData()\n\n    }\n\n    render() {\n\n        const { addEditingStudentData, organizationList = [], coachList = [] } = this.state;\n        const { cancelAddEdit, addEditModalStatus } = this.props;\n\n        return (\n            <Modal\n                title={addEditModalStatus === 'edit' ? 'Edit Student Data' : 'Add New Student'}\n                visible={addEditModalStatus.length}\n                onOk={addEditModalStatus === 'edit' ? this.editStudentData : this.createNewStudent}\n                onCancel={cancelAddEdit}\n                footer={[\n                    <Button key=\"back\" onClick={cancelAddEdit}>\n                        Cancel\n                    </Button>,\n                    <Button key=\"submit\" type=\"primary\" onClick={this.submit}>\n                        {addEditModalStatus === 'edit' ? 'Update' : 'Create'}\n                    </Button>,\n                ]}\n            >\n\n                <FieldContainer>\n                    <p>{addEditModalStatus === 'add' ? '' : 'Enter Name'}</p>\n                    <Input\n                        onChange={(event) => this.changeFilter(event.target.value, 'name')}\n                        value={addEditingStudentData.name}\n                        placeholder=\"Enter Name\"\n                    />\n                </FieldContainer>\n                <FieldContainer>\n                <p>{addEditModalStatus === 'add' ? '' : 'Enter Reference Number'}</p>\n                    <Input\n                    disabled={addEditModalStatus === 'edit'}\n                        onChange={(event) => this.changeFilter(event.target.value, 'referenceNumber')}\n                        value={addEditingStudentData.referenceNumber}\n                        placeholder=\"Enter Reference Number\"\n                    />\n                </FieldContainer>\n                <FieldContainer>\n                <p>{addEditModalStatus === 'add' ? '' : 'Enter Contact Number'}</p>\n                    <Input\n                        onChange={(event) => this.changeFilter(event.target.value, 'contactNumber')}\n                        value={addEditingStudentData.contactNumber}\n                        placeholder=\"Enter Contact Number\"\n                    />\n                </FieldContainer>\n                <FieldContainer>\n                <p>{addEditModalStatus === 'add' ? '' : 'Select Organisation'}</p>\n                    <SelectDropDownComponent\n                        //elmId=\"organization\"\n\n\n                        //disabled={addEditModalStatus === 'edit'}\n\n                        showSearch\n                        allowClear\n                        showArrow\n                        onChangeHandler={(value) => this.changeFilter(value, 'organization')}\n                        value={addEditingStudentData.organization}\n                        placeholder=\"Select Organization\"\n                        options={organizationList.map((organizationData) => {\n                            return {\n                                id: organizationData.orgID,\n                                label: organizationData.orgName,\n                            }\n                        })}\n                    />\n                </FieldContainer>\n                <FieldContainer>\n                <p>{addEditModalStatus === 'add' ? '' : 'Select Coach'}</p>\n                    <SelectDropDownComponent\n\n                        //elmId=\"coach\"\n                        // disabled={addEditModalStatus === 'edit'}\n                        //disabled={addEditModalStatus === 'edit'}\n\n                        showSearch\n                        allowClear\n                        showArrow\n                        onChangeHandler={(value) => this.changeFilter(value, 'coach')}\n                        value={addEditingStudentData.coach}\n                        placeholder=\"Select Coach\"\n                        options={coachList.map((CoachData) => {\n                            return {\n                                id: CoachData.userID,\n                                label: CoachData.userName,\n                            }\n                        })}\n                    />\n                </FieldContainer>\n            </Modal>\n        )\n    }\n}\n\n\nexport default ManageStudentsAddEdit;\n","/**\n *\n * ManageStudents\n *\n */\n\nimport React from 'react';\nimport { Table, Button, Icon, Popconfirm, message } from 'antd';\nimport axios from 'axios';\nimport {\n    manageStudentsApiResponse,\n} from './ManageStudents.constants';\n\nimport ManageStudentsAddEditModal from './ManageStudentsAddEditModal';\n\nimport {\n    filterArray,\n} from '../../utils/utilityFunctions';\n\nimport {\n    InputFilterContainer,\n    InputField,\n    IconContainer,\n    ActionContainer,\n} from './ManageStudents.styled';\n\nclass ManageStudents extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n    constructor(props) {\n        super(props);\n        this.state = {\n            filterValue: '',\n            dataSource: [],\n            addEditModalStatus: '',\n            addEditingStudentData: null,\n            deleteData:null,\n            \n        }\n    }\n\n    componentDidMount() {\n        this.getStudentListApiCAllFunction();\n    }\n\n    getStudentListApiCAllFunction = () => {\n        //  ToDo: api call for the list of students data and save the data in this.state.dataSource\n\n        console.log(\"inside getStudentApi Call function 2\")\n       // http://localhost:8080/manageStudents/getAll\n        const apiCallPromise = axios.get(\"/manageStudents/getAll\",{headers: {'Authorization': 'Bearer ' + localStorage.getItem('jwtToken')}})\n        .then(function (response) {\n            console.log(response)\n            console.log(response.status)\n            console.log(response.data.data)\n            //console.log(this.state.dataSource)\n            console.log(\"akash\")\n        if(response.status === 200){\n            //this.setState({ dataSource: response.data.data });\n            //this.state.dataSource = response.data.data;\n            if(response.data.status ==='error')\n            {                        \n                console.log(response.data.message);\n                message.error(response.data.message);\n                \n            }else{\n            return response.data.data;\n            }\n        } else{\n            console.log('error');\n            message.error(response.data.message);\n        }\n    })\n    .catch(function (error) {\n        console.log(error);\n    });  \n\n    // using .then, create a new apiCallPromise which extracts the data\n    apiCallPromise.then((response) => {\n\n      console.log('response.data.data : ', response);\n      // [{name: 'a', b: 'b'}, {name: 'c', d: 'd'}]\n\n      this.setState({ dataSource: response });\n    })\n\n    }\n\n    changeFilter = (event) => {\n        this.setState({ filterValue: event.target.value });\n    }\n\n    editStudentData = (data) => {\n        this.setState({\n            addEditModalStatus: 'edit',\n            addEditingStudentData: data\n        });\n    }\n\n    createNewStudent = () => {\n        this.setState({ addEditModalStatus: 'add' });\n    }\n\n    cancelAddEdit = () => {\n        this.setState({\n            addEditModalStatus: '',\n            addEditingStudentData: null\n        });\n    }\n\n    deleteStudent = (data) => {\n        //  ToDo: delete api call\n        console.log(\"delete\"+data)\n        this.setState({\n            addEditModalStatus: '',\n            deleteData: data\n        });\n        console.log(this.state.deleteData)\n        console.log(data)\n        //?email_id=\"+payload.email\n        const apiCallPromise = axios.delete(\"manageStudents/delete?studentReferenceNumber=\"+data,{headers: {'Authorization': 'Bearer ' + localStorage.getItem('jwtToken')}})\n        .then(function (response) {\n            console.log(\"inside delete function\")\n            console.log(response)\n            console.log(response.status)\n            console.log(response.data.data)\n            //console.log(this.state.dataSource)\n            console.log(\"akash\")\n        if(response.status === 200){\n            //this.setState({ dataSource: response.data.data });\n            //this.state.dataSource = response.data.data;\n            return response.data.data;\n        } else{\n            console.log('error');\n        }\n    })\n    .catch(function (error) {\n        console.log(error);\n    });\n    apiCallPromise.then((response) => {\n        message.success(\"Student deleted successfully\");\n        this.updateListingData();\n    })\n\n        this.getStudentListApiCAllFunction();\n    }\n\n    updateListingData = () => {\n        console.log(\"inside the index page\");\n        this.getStudentListApiCAllFunction();\n        this.cancelAddEdit();\n    }\n\n    render() {\n\n        const manageStudentsColumns = [\n            {\n                title: 'Name',\n                dataIndex: 'studentName',\n                key: 'studentName',\n            },\n            {\n                title: 'Reference ID',\n                dataIndex: 'studentReferenceNumber',\n                key: 'studentReferenceNumber',\n            },\n            // {\n            //     title: 'Address',\n            //     dataIndex: 'studentContactNo',\n            //     key: 'studentContactNo',\n            // },\n            {\n                title: 'Organization Name',\n                dataIndex: 'organizationName',\n                key: 'organizationName',\n            },\n            {\n                title: 'Coach Name',\n                dataIndex: 'coachName',\n                key: 'coachName',\n            },\n            {\n                title: 'Actions',\n                dataIndex: 'studentReferenceNumber',\n                key: 'studentReferenceNumber',\n                render: (studentReferenceNumber,studentData) => {\n                    return (\n                        <ActionContainer>\n                            <IconContainer>\n                                <Popconfirm\n                                    title={'Are you sure ?'}\n                                    onConfirm={() => this.deleteStudent(studentReferenceNumber)}\n                                    okText=\"Yes\"\n                                    cancelText=\"No\"\n                                >\n                                    <Icon type={'delete'} />\n                                </Popconfirm>\n                            </IconContainer>\n                            <IconContainer>\n                                <Icon type={'edit'} onClick={() => this.editStudentData(studentData)} />\n                            </IconContainer>\n                        </ActionContainer>\n                    );\n                }\n            },\n        ];\n\n        const { filterValue, dataSource, addEditModalStatus = '', addEditingStudentData } = this.state;\n\n        let filteredDataSource = dataSource;\n\n        if (filterValue && filterValue.length) {\n            filteredDataSource = filterArray(dataSource, filterValue, ['studentName', 'studentReferenceNumber', 'studentContactNo', 'organization.orgName', 'userID']);\n        }\n\n        return (\n            <div>\n                <InputFilterContainer>\n                    <InputField\n                        onChange={this.changeFilter}\n                        value={filterValue}\n                        placeholder=\"Enter Filter\"\n                    />\n                    <Button\n                        type=\"primary\"\n                        onClick={this.createNewStudent}\n                    >\n                        Add Student\n                    </Button>\n                </InputFilterContainer>\n                <Table\n                    dataSource={filteredDataSource}\n                    columns={manageStudentsColumns}\n                />\n                {addEditModalStatus && addEditModalStatus.length ? (\n                    <ManageStudentsAddEditModal\n                        addEditModalStatus={addEditModalStatus}\n                        addEditingStudentData={addEditingStudentData}\n                        cancelAddEdit={this.cancelAddEdit}\n                        updateListingData={this.updateListingData}\n                    />\n                ) : null}\n            </div>\n        )\n    }\n}\n\n\nexport default ManageStudents;\n","import styled from 'styled-components';\nimport { Input, Icon } from 'antd';\n\nexport const InputFilterContainer = styled.div`\n    margin-bottom: 15px;\n    display: flex;\n    justify-content: space-between;\n`;\n    \nexport const InputField = styled(Input)`\n    max-width: 350px;\n`;\n\nexport const FieldContainer = styled.div`\n    margin: 15px 0;\n`;\n\nexport const IconContainer = styled.div`\n    padding: 5px 10px;\n`;\n\nexport const ActionContainer = styled.div`\n    display: flex;\n`;","/**\n *\n * ManageStudentsAddEdit\n *\n */\n\nimport React from 'react';\nimport { Button, Modal, Input } from 'antd';\nimport axios from 'axios';\nimport SelectDropDownComponent from '../SelectDropDownComponent';\nimport {ACCESS_TOKEN_NAME} from \"../../constants/apiConstants\";\nimport {\n    FieldContainer,\n} from './ManageStudents.styled';\n\nimport {\n    manageStudentsOrganizationResponse,\n    manageStudentsCoachListResponse,\n} from './ManageStudents.constants';\n\nclass ManageStudentsAddEdit extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n    constructor(props) {\n        super(props);\n        this.state = {\n            addEditingStudentData: {\n                name: '',\n                referenceNumber: '',\n                contactNumber: '',\n                organization: '',\n                coach: '',\n            },\n            organizationList: [],\n            coachList: [],\n            // coachList: manageStudentsCoachListResponse.data,\n        }\n    }\n\n    componentDidMount() {\n\n\n        //http://localhost:8080/manageOrganization/getAll/\n        const apiCallPromise = axios.get(\"/manageOrganization/getAll/\",{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}})\n        .then(function (response) {\n            console.log(response)\n            console.log(response.data.data)\n            //console.log(response.data.data.orgName)\n            //console.log(response.data.data.orgID)\n            //console.log(this.state.dataSource)\n            console.log(\"akash\")\n        if(response.status === 200){\n            //this.setState({ dataSource: response.data.data });\n            //this.state.dataSource = response.data.data;\n            //this.state.orgID = response.data.data.orgID;\n            return response.data.data;\n        } else{\n            console.log('error');\n        }\n    })\n    .catch(function (error) {\n        console.log(error);\n    });\n\n    // using .then, create a new apiCallPromise which extracts the data\n    apiCallPromise.then((response) => {\n\n      console.log('response.data.data : ', response);\n      // [{name: 'a', b: 'b'}, {name: 'c', d: 'd'}]\n\n\n      const parsedData  = response.map((rowData) => {\n        return Object.values(rowData).map((value) => `${value}`);\n      });\n      console.log('setting data : ', parsedData);\n      this.setState({ organizationList: response });\n    })\n\n      //  this.setState({ organizationList: manageStudentsOrganizationResponse.data })\n\n\n        const { addEditingStudentData } = this.props;\n        if (addEditingStudentData) {\n            this.setState({ addEditingStudentData: {\n                ...addEditingStudentData,\n                name: addEditingStudentData.studentName,\n                referenceNumber: addEditingStudentData.studentReferenceNumber,\n                contactNumber: addEditingStudentData.studentContactNo,\n                organization: addEditingStudentData.organization.orgID,\n                coach: addEditingStudentData.userID\n            }});\n        }\n    }\n\n    changeFilter = (value, fieldId) => {\n        if (fieldId === 'organization') {\n                       //http://localhost:8080/manageStudents/getCoaches?orgID=1\n            //var id =\n            const apiCallPromise = axios.get(`manageStudents/getCoaches?orgID=${this.state.addEditingStudentData.organization}`,{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}})\n        .then(function (response) {\n            console.log(response)\n            console.log(response.data.data)\n            //console.log(response.data.userName)\n            //console.log(this.state.dataSource)\n            console.log(\"akash\")\n        if(response.status === 200){\n            //this.setState({ dataSource: response.data.data });\n            //this.state.dataSource = response.data.data;\n            return response.data.data;\n        } else{\n            console.log('error');\n        }\n    })\n    .catch(function (error) {\n        console.log(error);\n    });\n\n    // using .then, create a new apiCallPromise which extracts the data\n    apiCallPromise.then((response) => {\n\n      console.log('response.data. : ', response);\n      // [{name: 'a', b: 'b'}, {name: 'c', d: 'd'}]\n\n\n\n      this.setState({\n        addEditingStudentData: {\n            ...this.state.addEditingStudentData,\n            [fieldId]: value,\n            coach: '',\n        },\n        coachList: response,\n    });\n\n    })\n\n\n\n\n        } else {\n            this.setState({ addEditingStudentData: {\n                ...this.state.addEditingStudentData,\n                [fieldId]: value,\n            } });\n        }\n    }\n\n    submit = () => {\n        console.log('addEditingStudentData : ', this.state.addEditingStudentData);\n        console.log('addEditModalStatus : ', this.props.addEditModalStatus);\n\n\n        //http://localhost:8080/manageOrganization/add/\n        //http://localhost:8080/manageOrganization/update/\n\n\n\n        axios.post(this.props.addEditModalStatus === 'add' ? '/manageOrganization/add/' : '/manageOrganization/update/', this.state.addEditingStudentData,{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}})\n           .then(function (response) {\n                console.log(response);\n            });\n\n        this.props.updateListingData();\n    }\n\n    render() {\n\n        const { addEditingStudentData, organizationList = [], coachList = [] } = this.state;\n        const { cancelAddEdit, addEditModalStatus } = this.props;\n\n        return (\n            <Modal\n                title={addEditModalStatus === 'edit' ? 'Edit Student Data' : 'Add New Student'}\n                visible={addEditModalStatus.length}\n                onOk={addEditModalStatus === 'edit' ? this.editStudentData : this.createNewStudent}\n                onCancel={cancelAddEdit}\n                footer={[\n                    <Button key=\"back\" onClick={cancelAddEdit}>\n                        Cancel\n                    </Button>,\n                    <Button key=\"submit\" type=\"primary\" onClick={this.submit}>\n                        {addEditModalStatus === 'edit' ? 'Update' : 'Create'}\n                    </Button>,\n                ]}\n            >\n                <FieldContainer>\n                    <Input\n                        onChange={(event) => this.changeFilter(event.target.value, 'name')}\n                        value={addEditingStudentData.name}\n                        placeholder=\"Enter Name\"\n                    />\n                </FieldContainer>\n                <FieldContainer>\n                    <Input\n                        onChange={(event) => this.changeFilter(event.target.value, 'referenceNumber')}\n                        value={addEditingStudentData.referenceNumber}\n                        placeholder=\"Enter Reference Number\"\n                    />\n                </FieldContainer>\n                <FieldContainer>\n                    <Input\n                        onChange={(event) => this.changeFilter(event.target.value, 'contactNumber')}\n                        value={addEditingStudentData.contactNumber}\n                        placeholder=\"Enter Contact Number\"\n                    />\n                </FieldContainer>\n                <FieldContainer>\n                    <SelectDropDownComponent\n                        elmId=\"organization\"\n                        disabled={addEditModalStatus === 'edit'}\n                        showSearch\n                        allowClear\n                        showArrow\n                        onChangeHandler={(value) => this.changeFilter(value, 'organization')}\n                        value={addEditingStudentData.organization}\n                        placeholder=\"Select Organization\"\n                        options={organizationList.map((organizationData) => {\n                            return {\n                                id: organizationData.orgID,\n                                label: organizationData.orgName,\n                            }\n                        })}\n                    />\n                </FieldContainer>\n                <FieldContainer>\n                    <SelectDropDownComponent\n                        elmId=\"coach\"\n                        disabled={addEditModalStatus === 'edit'}\n                        showSearch\n                        allowClear\n                        showArrow\n                        onChangeHandler={(value) => this.changeFilter(value, 'coach')}\n                        value={addEditingStudentData.coach}\n                        placeholder=\"Select Coach\"\n                        options={coachList.map((CoachData) => {\n                            return {\n                                id: CoachData.userID,\n                                label: CoachData.userName,\n                            }\n                        })}\n                    />\n                </FieldContainer>\n            </Modal>\n        )\n    }\n}\n\n\nexport default ManageStudentsAddEdit;\n","// /**\n//  *\n//  * AssessmentStudentSelectionPage\n//  *\n//  */\n\n// import React from 'react';\n\n// class AssessmentStudentSelectionPage extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//         }\n//     }\n\n\n//     render() {\n\n//         console.log('props : ', this.props.match.params);\n\n//         return (\n//             <div>\n//                 assessment listing page\n//             </div>\n//         )\n//     }\n// }\n\n\n// export default AssessmentStudentSelectionPage;\n\n/**\n *\n * ManageStudents\n *\n */\n\nimport React from 'react';\nimport { Table, Button, Icon, Popconfirm, message } from 'antd';\nimport axios from 'axios';\nimport {\n    manageStudentsApiResponse,\n} from './ManageStudents.constants';\nimport {ACCESS_TOKEN_NAME} from \"../../constants/apiConstants\";\nimport ManageStudentsAddEditModal from './ManageStudentsAddEditModal';\n\nimport {\n    filterArray,\n} from '../../utils/utilityFunctions';\n\nimport {\n    InputFilterContainer,\n    InputField,\n    IconContainer,\n    ActionContainer,\n} from './ManageStudents.styled';\n\nclass ManageStudents extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n    constructor(props) {\n        super(props);\n        this.state = {\n            filterValue: '',\n            dataSource: [],\n            addEditModalStatus: '',\n            addEditingStudentData: null,\n\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"hello\")\n        this.getStudentListApiCAllFunction();\n    }\n\n    getStudentListApiCAllFunction = () => {\n\n\n       // http://localhost:8080/manageStudents/getAll\n        const apiCallPromise = axios.get(\"/manageStudents/getAll\",{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}})\n        .then(function (response) {\n            console.log(response)\n            console.log(response.status)\n            console.log(response.data.data)\n            //console.log(this.state.dataSource)\n            console.log(\"akash\")\n        if(response.status === 200){\n            //this.setState({ dataSource: response.data.data });\n            //this.state.dataSource = response.data.data;\n            return response.data.data;\n        } else{\n            console.log('error');\n        }\n    })\n    .catch(function (error) {\n        console.log(error);\n    });\n\n    // using .then, create a new apiCallPromise which extracts the data\n    apiCallPromise.then((response) => {\n\n      console.log('response.data.data : ', response);\n      // [{name: 'a', b: 'b'}, {name: 'c', d: 'd'}]\n      this.setState({ dataSource: response });\n    })\n\n    }\n\n    //deleteStudent = (studentId) => {\n    startNewAssessment = (data,data1) =>{\n        this.setState({\n            addEditingStudentData: data\n        });\n        localStorage.setItem('testName',data)\n        console.log(data)\n        console.log(data1)\n        console.log(\"start new assess\"+data+\" \"+data1);\n       // this.props.history.push(`/assessment/:${data}`);\n       this.props.history.push(`/assessment/`+data);\n    }\n\n    pastAssessment = (data,data1) =>{\n        console.log(\"past assess \"+data);\n        this.setState({\n            addEditingStudentData: data\n        });\n        localStorage.setItem('testName',data)\n        console.log(data)\n        console.log(data1)\n        this.props.history.push(`/assessment/pastassessment/`+data);\n    }\n\n    changeFilter = (event) => {\n        this.setState({ filterValue: event.target.value });\n    }\n\n    editStudentData = (data) => {\n        this.setState({\n            addEditModalStatus: 'edit',\n            addEditingStudentData: data\n        });\n    }\n\n    createNewStudent = () => {\n        this.setState({ addEditModalStatus: 'add' });\n    }\n\n    cancelAddEdit = () => {\n        this.setState({\n            addEditModalStatus: '',\n            addEditingStudentData: null\n        });\n    }\n\n    deleteStudent = (studentId) => {\n\n        console.log(\"delete\")\n        const apiCallPromise = axios.get(\"manageOrganization/delete/\",{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}})\n        .then(function (response) {\n            console.log(response)\n            console.log(response.status)\n            console.log(response.data.data)\n            //console.log(this.state.dataSource)\n            console.log(\"akash\")\n        if(response.status === 200){\n            //this.setState({ dataSource: response.data.data });\n            //this.state.dataSource = response.data.data;\n            return response.data.data;\n        } else{\n            console.log('error');\n        }\n    })\n    .catch(function (error) {\n        console.log(error);\n    });\n        message.success('Student successfully deleted');\n        this.getStudentListApiCAllFunction();\n    }\n\n    updateListingData = () => {\n        this.getStudentListApiCAllFunction();\n        this.cancelAddEdit();\n    }\n\n    render() {\n\n        const manageStudentsColumns = [\n            {\n                title: 'Name',\n                dataIndex: 'studentName',\n                key: 'studentName',\n            },\n            {\n                title: 'Reference ID',\n                dataIndex: 'studentReferenceNumber',\n                key: 'studentReferenceNumber',\n            },\n            // {\n            //     title: 'Address',\n            //     dataIndex: 'studentContactNo',\n            //     key: 'studentContactNo',\n            // },\n            {\n                title: 'Organization Name',\n                dataIndex: 'organizationName',\n                key: 'organizationName',\n            },\n            {\n                title: 'Coach Name',\n                dataIndex: 'coachName',\n                key: 'coachName',\n            },\n            {\n                title: 'Actions',\n                dataIndex: 'studentID',\n                dataIndex: 'studentName',\n                key: 'studentID',\n                render: (studentID,studentName) => <Button onClick={() => this.startNewAssessment(studentID,studentName)\n\n                } >Start New Assessment</Button>,\n            },\n            {\n                title: '',\n                dataIndex: 'studentID',\n                dataIndex: 'studentName',\n                key: 'studentID',\n                render: (studentID,studentName) => <Button onClick={() => this.pastAssessment(studentID,studentName)}>Past Assessment</Button>,\n            },\n        ];\n\n        const { filterValue, dataSource, addEditModalStatus = '', addEditingStudentData } = this.state;\n\n        let filteredDataSource = dataSource;\n\n        if (filterValue && filterValue.length) {\n            filteredDataSource = filterArray(dataSource, filterValue, ['studentName', 'studentReferenceNumber', 'studentContactNo', 'organization.orgName', 'userID']);\n        }\n\n        return (\n            <div>\n                <InputFilterContainer>\n                    <InputField\n                        onChange={this.changeFilter}\n                        value={filterValue}\n                        placeholder=\"Enter Filter\"\n                    />\n\n                </InputFilterContainer>\n                <Table\n                    dataSource={filteredDataSource}\n                    columns={manageStudentsColumns}\n                />\n                {addEditModalStatus && addEditModalStatus.length ? (\n                    <ManageStudentsAddEditModal\n                        addEditModalStatus={addEditModalStatus}\n                        addEditingStudentData={addEditingStudentData}\n                        cancelAddEdit={this.cancelAddEdit}\n                        updateListingData={this.updateListingData}\n                    />\n                ) : null}\n            </div>\n        )\n    }\n}\n\n\nexport default ManageStudents;\n\n","// import React from 'react'\n// import styles from './styles'\n\n// const About = () => (\n//   <div style={styles.container}>\n\n//     <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n//   </div>\n// )\n\n// export default About\n\nimport React from 'react';\nimport {ACCESS_TOKEN_NAME} from \"../../constants/apiConstants\";\nimport { Table, Button, Icon, Popconfirm, message } from 'antd';\nimport axios from 'axios';\nimport styles from './styles'\nimport {\n    manageStudentsApiResponse,\n} from './ManageStudents.constants';\n\nimport ManageStudentsAddEditModal from './ManageStudentsAddEditModal';\n\nimport {\n    filterArray,\n} from '../../utils/utilityFunctions';\n\nimport {\n    InputFilterContainer,\n    InputField,\n    IconContainer,\n    ActionContainer,\n} from './ManageStudents.styled';\n\nclass PickTemplate extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n    constructor(props) {\n        super(props);\n        this.state = {\n            filterValue: '',\n            dataSource: [],\n            addEditModalStatus: '',\n            addEditingStudentData: null,\n            deleteData:null,\n\n\n        }\n    }\n\n    componentDidMount() {\n      console.log('pick ur template')\n      console.log(this.state.studentID)\n        this.getStudentListApiCAllFunction();\n    }\n\n    getStudentListApiCAllFunction = () => {\n\n\n       // http://localhost:8080/manageStudents/getAll\n        const apiCallPromise = axios.get(\"/manageTemplate\",{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}})\n        .then(function (response) {\n            console.log(response)\n            console.log(response.status)\n            console.log(response.data)\n            //console.log(this.state.dataSource)\n            console.log(\"akash\")\n        if(response.status === 200){\n            //this.setState({ dataSource: response.data.data });\n            //this.state.dataSource = response.data.data;\n            return response.data;\n        } else{\n            console.log('error');\n        }\n    })\n    .catch(function (error) {\n        console.log(error);\n    });\n\n    // using .then, create a new apiCallPromise which extracts the data\n    apiCallPromise.then((response) => {\n\n      console.log('response.data.data : ', response);\n      // [{name: 'a', b: 'b'}, {name: 'c', d: 'd'}]\n\n      this.setState({ dataSource: response });\n    })\n\n    }\n\n    changeFilter = (event) => {\n        this.setState({ filterValue: event.target.value });\n    }\n\n    editStudentData = (data) => {\n        this.setState({\n            addEditModalStatus: 'edit',\n            addEditingStudentData: data\n        });\n    }\n\n    createNewStudent = (data) => {\n        this.setState({ addEditModalStatus: 'add' });\n    }\n\n    selectTemplate = (data) => {\n      this.setState({\n        addEditingStudentData: data\n    });\n    console.log(\"studentID from \",this.state)\n    console.log(data);\n    console.log('history props : ', this.props);\n    localStorage.setItem('testtemplate',data)\n    this.props.history.push(`/assessment/${data}/${data}`);\n    //this.props.history.push(`/assessment/1/`+data);\n    }\n\n    cancelAddEdit = () => {\n        this.setState({\n            addEditModalStatus: '',\n            addEditingStudentData: null\n        });\n    }\n\n    deleteStudent = (data) => {\n\n        console.log(\"delete\"+data)\n        this.setState({\n            addEditModalStatus: 'edit',\n            deleteData: data\n        });\n        console.log(this.state.deleteData)\n        const apiCallPromise = axios.get(\"manageOrganization/delete/\",{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}})\n        .then(function (response) {\n            console.log(response)\n            console.log(response.status)\n            console.log(response.data.data)\n            //console.log(this.state.dataSource)\n            console.log(\"akash\")\n        if(response.status === 200){\n            //this.setState({ dataSource: response.data.data });\n            //this.state.dataSource = response.data.data;\n            return response.data.data;\n        } else{\n            console.log('error');\n        }\n    })\n    .catch(function (error) {\n        console.log(error);\n    });\n        message.success('Student successfully deleted');\n        this.getStudentListApiCAllFunction();\n    }\n\n    updateListingData = () => {\n        this.getStudentListApiCAllFunction();\n        this.cancelAddEdit();\n    }\n\n    render() {\n\n        const manageStudentsColumns = [\n            {\n                title: 'Template Name',\n                dataIndex: 'templateName',\n                key: 'templateName',\n\n            },\n            {\n                title: 'Created By',\n                dataIndex: 'createdBY.userName',\n                key: 'createdBY.userName',\n            },\n            {\n              title: '',\n              dataIndex: 'templateID',\n                key: 'templateID',\n              render: (templateID) => <Button onClick={() => this.selectTemplate(templateID)}>Start</Button>,\n          },\n            // {\n            //     title: 'Address',\n            //     dataIndex: 'studentContactNo',\n            //     key: 'studentContactNo',\n            // },\n            // {\n            //     title: 'Organization Name',\n            //     dataIndex: 'organization.orgName',\n            //     key: 'organization',\n            // },\n            // {\n            //     title: 'Coach Name',\n            //     dataIndex: 'userID',\n            //     key: 'userID',\n            // },\n\n        ];\n\n        const { filterValue, dataSource, addEditModalStatus = '', addEditingStudentData } = this.state;\n\n        let filteredDataSource = dataSource;\n\n        if (filterValue && filterValue.length) {\n            filteredDataSource = filterArray(dataSource, filterValue, ['studentName', 'studentReferenceNumber', 'studentContactNo', 'organization.orgName', 'userID']);\n        }\n\n        return (\n            <div>\n                <InputFilterContainer>\n                    <InputField\n                        onChange={this.changeFilter}\n                        value={filterValue}\n                        placeholder=\"Enter Filter\"\n                    />\n\n                </InputFilterContainer>\n                <Table\n                    dataSource={filteredDataSource}\n                    columns={manageStudentsColumns}\n                />\n                {addEditModalStatus && addEditModalStatus.length ? (\n                    <ManageStudentsAddEditModal\n                        addEditModalStatus={addEditModalStatus}\n                        addEditingStudentData={addEditingStudentData}\n                        cancelAddEdit={this.cancelAddEdit}\n                        updateListingData={this.updateListingData}\n                    />\n                ) : null}\n            </div>\n        )\n    }\n}\n\n\nexport default PickTemplate;\n\n","import styled from 'styled-components';\nimport { Input, Icon , Modal } from 'antd';\n\nexport const InputFilterContainer = styled.div`\n    margin-bottom: 15px;\n    display: flex;\n    justify-content: space-between;\n`;\n    \nexport const InputField = styled(Input)`\n    max-width: 350px;\n`;\n\nexport const FieldContainer = styled.div`\n    margin: 15px 0;\n`;\n\nexport const IconContainer = styled.div`\n    padding: 5px 10px;\n`;\n\nexport const ActionContainer = styled.div`\n    display: flex;\n`;\n\n","import Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useEffect } from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 'auto',\n  },\n  cardHeader: {\n    padding: theme.spacing(1, 2),\n  },\n  list: {\n    width: 350,\n    height: 350,\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5, 0),\n    fontSize: 14,\n    height: 32,\n    fontWeight: 400,\n    whiteSpace: \"nowrap\",\n    color: 'rgba(0, 0, 0, 0.65)',\n    textTransform: \"none\"\n  },\n  button1: {\n    margin: theme.spacing(0.5, 0),\n    fontSize: 14,\n    height: 32,\n    fontWeight: 400,\n    whiteSpace: \"nowrap\",\n    marginRight: 20,\n    marginLeft: 90,\n    color: 'rgba(0, 0, 0, 0.65)',\n    textTransform: \"none\"\n  },\n}));\n\nfunction not(a, b) {\n  return a.filter((aVal) => !b.find((bVal) => bVal.key === aVal.key));\n}\n\nfunction intersection(a, b) {\n  return a.filter((aVal) => b.find((bVal) => bVal.key === aVal.key));\n}\n\nfunction union(a, b) {\n  return [...a, ...not(b, a)];\n}\n\nexport default function TransferList({ defaultList, defaultSelectedList, onSelectListChange }) {\n  const classes = useStyles();\n  const [leftChecked, setLeftChecked] = React.useState([]);\n  const [rightChecked, setRightChecked] = React.useState([]);\n  const [left, setLeft] = React.useState(defaultList || []);\n  const [right, setRight] = React.useState(defaultSelectedList || []);\n\n  useEffect(() => {\n    setLeft(defaultList);\n  }, [defaultList]);\n\n  // useEffect(() => {\n  //   setRight(selectedList);\n  // }, [selectedList]);\n\n\n\n  const handleToggle = (value, context) => () => {\n    if (context === 'left') {\n      const currentIndex = leftChecked.findIndex(cVal => cVal.key === value.key);\n      const newChecked = [...leftChecked];\n\n      if (currentIndex === -1) {\n        newChecked.push(value);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n\n      setLeftChecked(newChecked);\n    } else {\n      const currentIndex = rightChecked.findIndex(cVal => cVal.key === value.key);\n      const newChecked = [...rightChecked];\n\n      if (currentIndex === -1) {\n        newChecked.push(value);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n\n      setRightChecked(newChecked);\n    }\n\n  };\n\n  // const numberOfChecked = (items) => intersection(checked, items).length;\n\n\n  const moveAll = () => {\n    const rem = not(left, right);\n    const rightList = [...new Set(right.concat(rem))];\n    setRight(rightList);\n    // setRight(right.concat(leftChecked));\n    // setLeft(not(left, []));\n    setLeftChecked([]);\n    onSelectListChange && onSelectListChange(rightList);\n  }\n\n  const deletAll = () => {\n    const rightList = [...new Set(right.concat(left))];\n    setRight([]);\n    // setRight(right.concat(leftChecked));\n    // setLeft(not(left, []));\n    setRightChecked([]);\n    onSelectListChange && onSelectListChange([]);\n  }\n\n  const handleCheckedRight = () => {\n    // elemnets present in checked only bt not in rightlist A-B operation\n    const rem = not(leftChecked, right);\n    console.log(\"rem\", rem, \"right\", right)\n    const rightList = [...new Set(right.concat(rem))];\n    setRight(rightList);\n    // setRight(right.concat(leftChecked));\n    setLeft(not(left, []));\n    setLeftChecked([]);\n    onSelectListChange && onSelectListChange(rightList);\n  };\n\n  const handleCheckedLeft = () => {\n    setLeft(left)\n    // setLeft(left.concat(rightChecked));\n    const rightList = not(right, rightChecked);\n    setRight(rightList);\n    setRightChecked([]);\n    onSelectListChange && onSelectListChange(rightList);\n  };\n\n  const customList = (context, items, extra) => (\n    <Card>\n      {/* <CardHeader\n        className={classes.cardHeader}\n        avatar={\n          <Checkbox\n            onClick={handleToggleAll(items)}\n            checked={numberOfChecked(items) === items.length && items.length !== 0}\n            indeterminate={numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0}\n            disabled={items.length === 0}\n            inputProps={{ 'aria-label': 'all items selected' }}\n          />\n        }\n        title={title}\n        subheader={`${numberOfChecked(items)}/${items.length} selected`}\n      /> */}\n\n      <List className={classes.list} dense component=\"div\" role=\"list\">\n        {items.map((value) => {\n          const labelId = `transfer-list-all-item-${value.key}-label`;\n\n          return (\n            <ListItem key={value.key} role=\"listitem\" button onClick={handleToggle(value, context)}>\n              <ListItemIcon>\n\n                <Checkbox\n                  checked={!!(context === 'left' ? leftChecked : rightChecked).find(cVal => cVal.key === value.key)}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ 'aria-labelledby': labelId }}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={`${value.title}`} />\n            </ListItem>\n          );\n        })}\n        <ListItem />\n      </List>\n      <Divider />\n      {extra}\n    </Card>\n  );\n\n  return (\n    <Grid container spacing={2} justify=\"center\" alignItems=\"center\" className={classes.root}>\n      <Grid item>{customList('left', left, <> <Button\n        variant=\"outlined\"\n        size=\"small\"\n        className={classes.button, classes.button1}\n        onClick={handleCheckedRight}\n        // disabled={leftChecked.length === 0}\n        aria-label=\"move selected right\"\n      >\n        Add\n          </Button>\n        <Button\n          variant=\"outlined\"\n          size=\"small\"\n          className={classes.button}\n          onClick={moveAll}\n          // disabled={leftChecked.length === 0}\n          aria-label=\"move selected right\"\n          style={{ marginRight: 30 }}\n        >\n          Add all\n          </Button>\n      </>)}</Grid>\n\n      <Grid item>{customList('right', right, <> <Button\n        variant=\"outlined\"\n        size=\"small\"\n        className={classes.button, classes.button1}\n        onClick={handleCheckedLeft}\n        // disabled={rightChecked.length === 0}\n        aria-label=\"move selected left\"\n      >\n        Delete\n          </Button>\n        <Button\n          variant=\"outlined\"\n          size=\"small\"\n          className={classes.button}\n          onClick={deletAll}\n          // disabled={rightChecked.length === 0}\n          aria-label=\"move selected left\"\n        >\n          Delete all\n          </Button>\n      </>)}</Grid>\n    </Grid>\n  );\n}\n","import styled from 'styled-components';\nimport { Button } from 'antd';\nimport SelectDropDownComponent from '../SelectDropDownComponent';\nimport { Input } from 'antd';\n\nexport const StudentNameContainer = styled.div`\n    font-size: 24px;\n    display: flex;\n    font-weight: bold;\n`;\n\nexport const FieldContainer = styled.div`\n    margin: 15px 0;\n`;\n\nexport const TemplateContainer = styled.div`\n    margin: 15px 0;\n`;\n\nexport const CommentFieldContainer = styled.div`\n    margin: 15px 0;\n    max-width: 350px;\n`;\n\nexport const ButtonFieldContainer = styled.div`\n    margin: 15px 0;\n    display: flex;\n    justify-content: flex-end;\n`;\n\nexport const ButtonComponent = styled(Button)`\n    margin-left: 10px;\n`;\n\nexport const QuestionHeaderContainer = styled.div`\n    margin-bottom: 35px;\n    display: flex;\n    justify-content: space-between;\n`;\n\nexport const TableHeaderContainer = styled.div`\n    margin-bottom: 15px;\n    display: flex;\n    justify-content: space-between;\n`;\n\nexport const InputField = styled(Input)`\n    max-width: 350px;\n`;\n\nexport const SkillSelectionContainer = styled.div`\n    display: flex;\n    width: 500px;\n`;\n\nexport const SelectDropDownComponentWrapper = styled(SelectDropDownComponent)`\n    margin-right: 15px;\n`;\n\n\nexport const IconContainer = styled.div`\n    padding: 5px 10px;\n`;\n\nexport const ActionContainer = styled.div`\n    display: flex;\n`;","\n\n// const Contact = () => (\n//   <div style={styles.container}>\n\n//   <h2> Pick Your Questions Page will be shown here</h2>\n//   <h3>Coming Soon.......</h3>\n//   </div>\n// )\n\n// export default Contact\n\n\n/**\n *\n * ManageTemplatesCreateEdit\n *\n */\n\n\nimport { Button, Input, message, Modal, Select } from 'antd';\nimport axios from 'axios';\nimport React from 'react';\nimport { Redirect } from 'react-router'\nimport './manageTemplate.css';\nimport styles from './styles'\nimport {\n    FieldContainer\n} from './ManageTemplates.styled';\nimport Transfer from './transferque';\nimport {ACCESS_TOKEN_NAME} from \"../../constants/apiConstants\";\nimport {\n  TemplateContainer,\n\n  CommentFieldContainer,\n  ButtonFieldContainer,\n  ButtonComponent,\n  SkillSelectionContainer,\n    QuestionHeaderContainer,\n    TableHeaderContainer,\n    SelectDropDownComponentWrapper,\n\n    IconContainer,\n    ActionContainer,\n    InputField,\n} from './Assessment.style';\n\nconst ApiUtils = {\n    MAIN_SKILLS: '/manageQuestion/getMainSkills',\n    SUB_SKILLS: '/manageQuestion/getSubSkills',\n    QUESTIONS: '/manageQuestion/bySkill',\n    USERS: `/manageStudents/getCoaches/?orgID=${localStorage.getItem('orgID')}`,\n    SET_TEMPLATE: 'manageTemplate/',\n    UPDATE_TEMPLATE: 'manageTemplate/',\n\n}\n// const DataUtils = {\n//     getMainSkills: async () => {\n//         return await axios.get(ApiUtils.MAIN_SKILLS,{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}});\n//     },\n//     getSubSkills: async (mainSkill) => {\n//         return await axios.get(ApiUtils.SUB_SKILLS, {\n//             params: { mainSkillArea: mainSkill }\n//         },{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}});\n//     },\n//     getQuestions: async (mainSkill, subSkill) => {\n//         return await axios.get(ApiUtils.QUESTIONS, {\n//             params: { mainSkillArea: mainSkill, subSkillArea: subSkill }\n//         },{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}});\n//     },\n//     getAllUsers: async () => {\n//         return await axios.get(ApiUtils.USERS,{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}});\n//     },\n//     setTemplate: async (payload) => {\n//         return await axios.post(ApiUtils.SET_TEMPLATE, payload,{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}})\n//     },\n//     updateTemplate: async (payload) => {\n//         return await axios.put(ApiUtils.UPDATE_TEMPLATE, payload,{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}})\n//     }\n// };\n\nconst DataUtils = {\n    getMainSkills: async () => {\n        return await axios.get(ApiUtils.MAIN_SKILLS, { headers: { 'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME) } });\n    },\n    getSubSkills: async (mainSkill) => {\n        return await axios.get(ApiUtils.SUB_SKILLS, {\n            params: { mainSkillArea: mainSkill, },\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME) }\n        });\n    },\n    getQuestions: async (mainSkill, subSkill) => {\n        return await axios.get(ApiUtils.QUESTIONS, {\n            params: { mainSkillArea: mainSkill, subSkillArea: subSkill },\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME) }\n        }\n        );\n    },\n    getAllUsers: async () => {\n        return await axios.get('/manageStudents/getCoaches/?orgID='+localStorage.getItem('orgID'), { headers: { 'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME) } });\n    },\n    setTemplate: async (payload) => {\n        return await axios.post(ApiUtils.SET_TEMPLATE, payload, { headers: { 'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME) } })\n    },\n    updateTemplate: async (payload) => {\n        return await axios.put(ApiUtils.UPDATE_TEMPLATE, payload, { headers: { 'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME) } })\n    }\n};\n\nclass Contact extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n    constructor(props) {\n        super(props);\n        this.state = {\n            templateName: props.templateName || '',\n\n            selectedMainSkillArea: '',\n            mainSkillList: [],\n\n            selectedSubSkillArea: '',\n            subSkillList: [],\n\n            selectedQuestionList: (props.questionsList || []).map(ob => ({ key: ob.questionID, title: ob.questionText })),\n            questionsList: [],\n\n\n            //asigned by users\n            assignedList: (props.assignedTo || []).map(ob => ob.userID),\n            // all users to populate dropdown\n            masterUserList: [],\n        }\n    }\n\n    componentDidMount() {\n\n        DataUtils.getMainSkills().then((response) => {\n            if (!(response.data && response.data.data)) throw new Error('data not found in response');\n            this.setState({ mainSkillList: response.data.data });\n        }).catch((e) => {\n            alert('error did mount');\n        });\n\n        DataUtils.getAllUsers().then((response) => {\n            if (!(response.data && response.data.data)) throw new Error('data not found in response');\n            this.setState({ masterUserList: response.data.data });\n        }).catch((e) => {\n            alert('error all select');\n        });\n        const { addEditingTemplateData } = this.props;\n        if (addEditingTemplateData) {\n            this.setState({\n                ...addEditingTemplateData,\n                templateName: addEditingTemplateData.templateName,\n                selectedQuestionList: (addEditingTemplateData.questionsList || []).map(ob => ({ key: ob.questionID, title: ob.questionText , level:ob.questionLevel\n                , mainskill:ob.skill.mainSkillArea, subskill:ob.skill.subSkillArea})),\n                assignedList: (addEditingTemplateData.assignedTo || []).map(ob => ob.userID),\n                questionsList: []\n            });\n        }\n\n        console.log(addEditingTemplateData)\n    }\n\n    handelMainSkillChange = (value) => {\n        console.log(value)\n        DataUtils.getSubSkills(value).then((response) => {\n            if (!(response.data && response.data.data)) throw new Error('data not found in response');\n            this.setState({ subSkillList: response.data.data, selectedMainSkillArea: value });\n            this.setState({selectedSubSkillArea:null});\n        }).catch((e) => {\n            alert('error  main skill handle change');\n        })\n        //  this.setState({ selectedMainSkillArea: value });\n    }\n\n    handelSubSkillChange = (value) => {\n        DataUtils.getQuestions(this.state.selectedMainSkillArea, value).then((response) => {\n            if (!(response.data && response.data.data)) throw new Error('data not found in response');\n            console.log(response.data.data)\n            this.setState({ questionsList: response.data.data, selectedSubSkillArea: value });\n\n            console.log(this.state.questionList)\n        }).catch((e) => {\n            alert('error subskill');\n        })\n        //  this.setState({ selectedMainSkillArea: value });\n    }\n\n\n\n\n    cancelAddEdit = () => {\n        this.setState({\n            addEditModalStatus: '',\n            addEditingTemplateData: null\n        });\n    }\n\n\n\n    submit = () => {\n\n        // {studentID: 1, studentReferenceNumber: 123, studentName: \"sid1\", studentContactNo: \"123\", orgID: 1, …}\n        console.log(this.state)\n        const { templateName, assignedList, selectedQuestionList } = this.state;\n        const { onSave } = this.props;\n        let obj = this.props.templateID ? { templateID: this.props.templateID } : {};\n\n        // if (this.props.addEditModalStatus === 'add') {\n            const payload = {\n\n                \"templateName\": templateName,\n                \"createdBY\": {\n                    \"userID\": localStorage.getItem('userID')\n                },\n                \"assignedTo\": assignedList.map((id) => ({\n                    userID: id\n                })),\n                \"questionsList\": selectedQuestionList.map((question) => ({\n                    questionID: question.key,\n                    questionLevel: question.level,\n                    questionText:question.title,\n                    \"skill\":{\n                        mainSkillArea: question.mainskill,\n                        subSkillArea: question.subskill\n                    }\n\n                }))\n            }\n            //this.props.payload = payload;\n            this.setState({ payload: payload });\n            console.log(payload);\n            console.log(this.state.payload);\n            // {<Redirect to='/assessment/create' data = {payload}/>}\n            localStorage.setItem('payload123',payload);\n            console.log(localStorage.getItem('payload123'))\n            //this.props.history.push(this.state.payload);\n            // this.props.history.push('/assessment/create/{payload}')\n\n             this.props.history.push({\n                pathname: '/assessment/create',\n                data:payload // your data array of objects\n              })\n            // DataUtils.setTemplate({\n\n            //     // \"templateName\": this.props.addEditingTemplateData.templateID,\n            //     \"createdBY\": {\n            //         \"userID\": localStorage.getItem('userID')\n            //     },\n            //     \"assignedTo\": assignedList.map((id) => ({\n            //         userID: id\n            //     })),\n            //     \"questionsList\": selectedQuestionList.map((question) => ({\n            //         questionID: question.key\n            //     }))\n            // }).then((response) => {\n            //     message.success(\"Template successfully added\");\n            //     this.props.updateListingData();\n            // }).catch((e) => {\n            //     alert('error while saving');\n            // })\n\n        // } else {\n        //     console.log(\"inside update\")\n        //     console.log(\"templateID  is\", this.props.addEditingTemplateData.templateID)\n        //     const payload = {\n        //         \"templateID\": this.props.addEditingTemplateData.templateID,\n        //         \"templateName\": templateName,\n        //         \"createdBY\": {\n        //             \"userID\": localStorage.getItem('userID')\n        //         },\n        //         \"assignedTo\": assignedList.map((id) => ({\n        //             userID: id\n        //         })),\n        //         \"questionsList\": selectedQuestionList.map((question) => ({\n        //             questionID: question.key\n        //         }))\n        //     }\n        //     console.log(\"payload is\", payload)\n        //     DataUtils.updateTemplate(payload).then((response) => {\n        //         message.success(\"Template successfully updated\");\n        //         this.props.updateListingData();\n        //     }).catch((e) => {\n        //         alert('error while update');\n        //     })\n        // }\n\n        //this.updateListingData()\n\n    }\n\n    render() {\n        //console.log('history : ', this.props.history);\n        //console.log('studentId : ', this.state.studentId);\n        const { studentId } = this.state;\n        const { questionsList, mainSkillList, assignedList, masterUserList, selectedMainSkillArea,\n            selectedSubSkillArea,\n            selectedQuestionList, subSkillList, templateName } = this.state;\n        const { cancelAddEdit, addEditModalStatus } = this.props;\n\n        return (\n<div>\n\n\n                <FieldContainer>\n                    <Input value={templateName} placeholder='Enter Template Name' style={{ width: 400 }} onChange={(e) => {\n                        this.setState({ templateName: e.target.value });\n                    }} />\n\n                </FieldContainer>\n\n\n                {/* <FieldContainer>\n\n\n                    <Select value={selectedMainSkillArea} placeholder=\"Select main-skill area\" style={{ width: 400 }} onChange={this.handelMainSkillChange} placeholder=\"Select Main Skill\">\n                        {mainSkillList.map((skill, skillIndex) => {\n                            return <Select.Option key={skillIndex} value={skill}>{skill}</Select.Option>\n                        })}\n                    </Select>\n\n\n                    <Select value={selectedSubSkillArea} placeholder=\"Select sub-skill area\" style={{ width: 400, marginLeft: 90 }} onChange={this.handelSubSkillChange}>\n                        {subSkillList.map((skill, skillIndex) => {\n                            return <Select.Option key={skillIndex} value={skill}>{skill}</Select.Option>\n                        })}\n                    </Select>\n\n\n                </FieldContainer> */}\n\n                <FieldContainer>\n\n\n                        <Select defaultValue=\"\" value={selectedMainSkillArea} style={{ width: 400 }} onChange={this.handelMainSkillChange}>\n                            <option value='' hidden>Select main-skill area</option>\n                            {mainSkillList.map((skill, skillIndex) => {\n                                return <Select.Option key={skillIndex} value={skill}>{skill}</Select.Option>\n                            })}\n                        </Select>\n\n\n                        <Select defaultValue=\"\" value={selectedSubSkillArea} style={{ width: 400 }} onChange={this.handelSubSkillChange}>\n                            <option value='' hidden>Select sub-skill area</option>\n                            {subSkillList.map((skill, skillIndex) => {\n                                return <Select.Option key={skillIndex} value={skill}>{skill}</Select.Option>\n                            })}\n                        </Select>\n\n\n                </FieldContainer>\n\n                {/* <FieldContainer>\n                    <div><p style={{ color: 'rgba(0, 0, 0, 0.65)' }}>Main-skill Area</p>\n                        <Select defaultValue=\"\" value={selectedMainSkillArea} style={{ width: 400 }} onChange={this.handelMainSkillChange}>\n                            <option value='' hidden>Select main-skill area</option>\n                            {mainSkillList.map((skill, skillIndex) => {\n                                return <Select.Option key={skillIndex} value={skill}>{skill}</Select.Option>\n                            })}\n                        </Select>\n                    </div>\n                    <div>\n                        <p style={{ color: 'rgba(0, 0, 0, 0.65)' }}> Sub-skill Area</p>\n                        <Select defaultValue=\"\" value={selectedSubSkillArea} style={{ width: 400 }} onChange={this.handelSubSkillChange}>\n                            <option value='' hidden>Select sub-skill area</option>\n                            {subSkillList.map((skill, skillIndex) => {\n                                return <Select.Option key={skillIndex} value={skill}>{skill}</Select.Option>\n                            })}\n                        </Select>\n                    </div>\n                </FieldContainer> */}\n                <h4 style={{ color: 'rgba(0, 0, 0, 0.65)' }}>&nbsp;&nbsp;&nbsp;&nbsp;Select Questions&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Selected Questions</h4>\n                <Transfer\n                    this gets updated everytime it changes\n                    defaultList={questionsList.map((question) => {\n                        return {\n                            key: question.questionID,\n                            title: question.questionText,\n                            level: question.questionLevel,\n                            mainskill: question.skill.mainSkillArea,\n                            subskill: question.skill.subSkillArea\n                        }\n                    })}\n                    //this wont get updated on change, acts like initial value\n                    defaultSelectedList={selectedQuestionList}\n                    //this is always the left side of tranfer list callback\n                    onSelectListChange={(value) => this.setState({ selectedQuestionList: value })} />\n\n\n                <ButtonFieldContainer>\n\n\n                    <Button key=\"submit\" type=\"primary\" onClick={this.submit}>\n                    Start Assessment\n                    </Button>\n                </ButtonFieldContainer>\n            </div >\n\n        )\n    }\n}\n\n\nexport default Contact;\n\n\n\n/*\n\n\n\n\n           <div>\n\n                <FieldContainer style={{\n                    width: 700,\n                }}>  <p style={{ color: 'rgba(0, 0, 0, 0.65)' }}>Template Name</p>\n                    <Input value={templateName} placeholder='Enter Template Name' onChange={(e) => {\n                        this.setState({ templateName: e.target.value });\n                    }} />\n                </FieldContainer>\n                <FieldContainer style={{ display: \"flex\" }}>\n                    <div><p style={{ color: 'rgba(0, 0, 0, 0.65)' }}>Main-skill Area</p>\n                        <Select defaultValue=\"\" value={this.state.selectedMainSkillArea} style={{ width: 400 }} onChange={this.handelMainSkillChange}>\n                            <option value='' hidden>Select main-skill area</option>\n                            {mainSkillList.map((skill, skillIndex) => {\n                                return <Select.Option key={skillIndex} value={skill}>{skill}</Select.Option>\n                            })}\n                        </Select>\n                    </div>\n                    <div>\n                        <p style={{ color: 'rgba(0, 0, 0, 0.65)' }}> Sub-skill Area</p>\n                        <Select defaultValue=\"\" value={selectedSubSkillArea} style={{ width: 400 }} onChange={this.handelSubSkillChange}>\n                            <option value='' hidden>Select sub-skill area</option>\n                            {subSkillList.map((skill, skillIndex) => {\n                                return <Select.Option key={skillIndex} value={skill}>{skill}</Select.Option>\n                            })}\n                        </Select>\n                    </div>\n                </FieldContainer>\n                <p style={{ color: 'rgba(0, 0, 0, 0.65)' }}>&nbsp;&nbsp;&nbsp;&nbsp;Select Questions&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Selected Questions</p>\n                <Transfer\n                    // this gets updated everytime it changes\n                    defaultList={questionsList.map((question) => {\n                        return {\n                            key: question.questionID,\n                            title: question.questionText,\n                            level: question.questionLevel,\n                            mainskill: question.skill.mainSkillArea,\n                            subskill: question.skill.subSkillArea\n                        }\n                    })}\n                    //this wont get updated on change, acts like initial value\n                    defaultSelectedList={selectedQuestionList}\n                    //this is always the left side of tranfer list callback\n                    onSelectListChange={(value) => this.setState({ selectedQuestionList: value })} />\n\n                <ButtonFieldContainer>\n\n                    <Button key=\"submit\" type=\"primary\" onClick={this.submit}>\n                    Start Assessment\n                    </Button>\n                </ButtonFieldContainer>\n\n            </div >\n*/","/**\n *\n * AssessmentTemplateSelectionPage\n *\n */\n\nimport React from 'react';\n//  import { Tabs, TabList, TabPanel, Tab } from 'react-re-super-tabs'\nimport { Tabs } from 'antd';\nimport PickTemplate from './PickTemplate'\nimport Contact from './Contact'\n\n\n\nclass AssessmentTemplateSelectionPage extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n    constructor(props) {\n        super(props);\n        this.state = {\n          studentId:props.match.params.studentId\n        }\n    }\n\n\n    render() {\n\n        console.log('history : ', this.props.history);\n        console.log('studentId : ', this.state.studentId);\n        const { studentId } = this.state.studentId;\n        \n\n        return (\n              <div>\n\n                <Tabs defaultActiveKey=\"1\">\n                    <Tabs.TabPane tab=\"Pick you template\" key=\"1\">\n                      <PickTemplate {...this.props} studentId={studentId} />\n                    </Tabs.TabPane>\n                    <Tabs.TabPane tab=\"Create you own question list\" key=\"2\">\n                      <Contact {...this.props} studentId={studentId}/>\n                    </Tabs.TabPane>\n                  </Tabs>\n            \n            {/* <Tabs activeTab='picktemplate'>\n              <TabList>\n                <Tab component={CustomTab } label='Pick Your Template' id='picktemplate' />\n                \n                <Tab component={CustomTab} label='Create Your Own Question List' id='contact' />\n              </TabList>\n              <TabList>\n                 <TabPanel component={PickTemplate}  id='picktemplate' />\n                \n                <TabPanel exact render={(props) => <Picktemplate {...props} />} id='picktemplate' />\n                <TabPanel component={Contact} id='contact' />\n              </TabList>\n            </Tabs> */}\n          </div>\n        )\n    }\n}\n\n\nexport default AssessmentTemplateSelectionPage;\n","export const assessmentFormTemplateResponse = {\n    status: 200,\n    data: {\n        templateId: 1, //  optional\n        studentDetails: {\n            studentID: 1,\n            studentReferenceNumber: 123,\n            studentName: \"akash\",\n            studentContactNo: \"7865435689\",\n            organization: {\n                orgID: 1,\n                orgName: \"Accessible academics\",\n                orgContactNo: \"5678998765\",\n                orgAddress: \"122 Merrimac\",\n                createdAt: \"2020-10-23T03:22:29.159+00:00\",\n                updatedAt: null\n            },\n            userID: 1,\n            createdAt: \"2020-10-23T03:22:29.159+00:00\",\n            updatedAt: \"2020-10-23T03:22:29.159+00:00\"\n        },\n        assessmentDetails: {\n            comment: 'sample comment',\n            questions: [\n                {\n                    questionId: 1,\n                    questionLabel: 'Question - 1',\n                    questionAnswer: 1,\n                },\n                {\n                    questionId: 2,\n                    questionLabel: 'Question - 2',\n                    questionAnswer: 2,\n                },\n                {\n                    questionId: 3,\n                    questionLabel: 'Question - 3',\n                    questionAnswer: 3,\n                },\n                {\n                    questionId: 4,\n                    questionLabel: 'Question - 4',\n                    questionAnswer: 2,\n                },\n            ],\n        }\n    }\n};\n\nexport const draftOrSubmitAssessment = {\n    comment: '',\n    temp: {\n        1: 1,\n        2: 1,\n        3: 2\n    },\n};\n\n//  save api: a/s/saveAssessment/{studentId}/{templateId}\n//  draft api: a/s/draftAssessment/{studentId}/{templateId}","/**\n *\n * AssessmentFormPage\n *\n */\n\nimport React from 'react';\nimport {ACCESS_TOKEN_NAME} from \"../../constants/apiConstants\";\nimport { Table, Radio, Input,message ,Tooltip} from 'antd';\nimport axios from 'axios';\nimport {\n    assessmentFormTemplateResponse,\n} from './Assessment.constant';\n\nimport {\n    StudentNameContainer,\n    FieldContainer,\n    CommentFieldContainer,\n    ButtonFieldContainer,\n    ButtonComponent,\n} from './Assessment.style';\n\nclass AssessmentFormPage extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n    constructor(props) {\n        super(props);\n        this.state = {\n            templateData: null,\n            answersData: {},\n            questionData: {},\n            comment: '',\n            ans:[],\n            userId:localStorage.getItem('userID'),\n            allquestions:[]\n\n        }\n    }\n\n    componentDidMount() {\n        //get all api\n        const apiCallPromise = axios.get(\"/manageTemplate/?templateID=\"+localStorage.getItem('testtemplate'),{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}})\n\n        .then(function (response) {\n            console.log(response)\n            console.log(response.status)\n            //console.log(\"response\",response.data.questionsList)\n            //console.log(this.state.dataSource)\n\n            if (response.status === 200) {\n                //this.setState({ dataSource: response.data.data });\n                //this.state.dataSource = response.data.data;\n                return response.data.questionsList;\n            } else {\n                console.log('error');\n            }\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n\n    // using .then, create a new apiCallPromise which extracts the data\n    apiCallPromise.then((response) => {\n\n        console.log('response.data.data : ', response);\n        // [{name: 'a', b: 'b'}, {name: 'c', d: 'd'}]\n\n        this.setState({ dataSource: response });\n        assessmentFormTemplateResponse.data.assessmentDetails.questions = response\n        console.log(this.state.dataSource)\n        console.log(assessmentFormTemplateResponse.data.assessmentDetails.questions)\n\n        const allquestions1=[]\n        assessmentFormTemplateResponse.data.assessmentDetails.questions.forEach((questionData) => {\n            allquestions1.push({\n                        \"questionID\": questionData.questionID,\n                        \"questionText\": questionData.questionText,\n                        \"ansText\":'',\n                        \"mainSkillArea\":questionData.skill.mainSkillArea,\n                        \"subSkillArea\":questionData.skill.subSkillArea,\n                        \"questionLevel\":questionData.questionLevel\n                    });\n        });\n        console.log(allquestions1)\n        this.setState({ allquestions: allquestions1 });\n        console.log(this.state.allquestions)\n    })\n\n        //\n        const allquestions1=this.state.allquestions\n\n        assessmentFormTemplateResponse.data.assessmentDetails.questions.forEach((questionData) => {\n            allquestions1.push({\n                        \"questionID\": questionData.questionID,\n                        \"questionText\": questionData.questionText,\n                        \"ansText\":''\n                    });\n        });\n        const tempAnswersData = {};\n        assessmentFormTemplateResponse.data.assessmentDetails.questions.forEach((questionData) => {\n            if (questionData.questionAnswer) {\n                tempAnswersData[questionData.questionID] = questionData.questionText;\n            }\n        });\n\n        // const apiResponse = this.state.dataSource\n        // console.log(apiResponse)\n        // for (let i = 0; i< this.state.dataSource.length; i ++) {\n        //     allquestions.push({\n        //         \"questionID\": this.state.dataSource[i].questionID,\n        //         \"questionText\": this.state.dataSource[i].questionText,\n        //         \"ansText\":''\n        //     });\n        //     console.log(\"all questions\")\n        //     console.log(allquestions)\n        // }\n\n        //this.setState({ mainSkillOptions: mainSkillOptionsTemp });\n        //this.setState({ templateData: assessmentFormTemplateResponse.data, answersData: tempAnswersData, comment: assessmentFormTemplateResponse.data.assessmentDetails.comment || '' })\n        this.setState({ templateData: assessmentFormTemplateResponse.data, answersData: '', comment:  '' })\n        this.setState({questionData:tempAnswersData})\n    }\n\n    changeAnswer = (event, questionData) => {\n        console.log(\"changeAns\")\n        let tempAns = this.state.ans;\n        tempAns.push({\n            \"question\":questionData.questionID,\"answer\":event.target.value,\"questionText\":questionData.questionText\n        });\n\n        // let userDetails = {\n        //     name: 'siddu',\n        //     age: 70,\n        // };\n\n        // let professionalDetails = {\n        //     name: 'gaiks',\n        //     designation: 'full time',\n        //     companyJoiningDate: '02/02/2020'\n        // }\n\n        //let tempUserDetails = userDetails;\n        //tempUserDetails.designation = 'full time';\n\n       // let completeUserDetails = { name: '-', ...userDetails, ...professionalDetails };\n        //let tempUserDetails = { name: '-'. name: 'siddu',age: 70,designation: 'full time', name: 'gaiks', companyJoiningDate: '02/02/2020' };\n\n        // completeUserDetails = {\n        //     name: 'gaiks',\n        //     age: 70,\n        //     designation: 'full time',\n        //     companyJoiningDate: '02/02/2020'\n        // }\n\n        // let answeredQuestions = [{questionId: 1, answerId: 1}, {questionId: 2, answerId: 2}, {questionId: 3, answerId: 3}];\n        // let unAsweredQuestions = [{questionId: 1, answerId: 2}, {questionId: 5}];\n\n        // let totalQuestions = [...answeredQuestions, ...unAsweredQuestions, {questionId: 6}]\n        // //let totalQuestions = [{questionId: 1, answerId: 1}, {questionId: 2, answerId: 2}, {questionId: 3, answerId: 3}, {questionId: 1, answerId: 2}, {questionId: 5}, {questionnId: 6}]\n\n        this.setState({\n            answersData: { ...this.state.answersData, [questionData.questionID]: event.target.value , \"question\":questionData.questionID,\"answer\":event.target.value},\n            //ans: tempAns,\n        })\n    }\n\n    commentChange = (event) => {\n        this.setState({ comment: event.target.value })\n    }\n\n    submitForm = (mode) => {\n        console.log('mode : ', mode); // submit or saveDraft\n        console.log('state : ', this.state.answersData);\n        console.log('state : ', this.state);\n        const result=[]\n\n        let res = this.state.ans\n        console.log(res)\n        console.log(res.length)\n\n        let all = this.state.allquestions\n        console.log(\"save as a draft\")\n        console.log(all)\n        let result1=[]\n\n        //  res = [{questionId: 2, answerId: 1}, {questionId: 4, answerId: 3}]\n        //  all = [{questionId: 1}, {questionId: 2}, {questionId: 3}, {questionId: 4}, {questionId: 5},]\n        let answerDataObject = {};\n        res.forEach((questionsData) => answerDataObject[questionsData.question] = questionsData.answer);\n        //  answerDataObject = {2: 1, 4: 3};\n        console.log(answerDataObject)\n        for (let i = 0; i< all.length ; i ++) {\n            console.log(all[i])\n            console.log(all[i].ansText)\n            const questionData = all[i];\n            console.log(answerDataObject[questionData.questionID])\n\n            result1.push(\n            {\n\n                    \"userID\": Number(this.state.userId),\n                    \"answerText\": answerDataObject[questionData.questionID] || questionData.ansText || '',\n                    \"questionID\": questionData.questionID,\n                    \"questionText\": questionData.questionText,\n                    \"mainSkillArea\": questionData.mainSkillArea,\n                    \"subSkillArea\": questionData.subSkillArea,\n                    \"questionLevel\": questionData.questionLevel,\n                    \"studentReferenceNumber\": this.state.templateData.studentDetails.studentReferenceNumber,\n                    \"comment\":this.state.comment,\n\n            }\n            );\n        }\n        //this.setState({ : mainSkillOptionsTemp });\n        // if (mode === 'submit') {\n        //     this.props.history.push('/assessment')\n        // }\n        console.log(result1)\n        if(mode === 'submit'){\n        const reply = axios.post('/assessment/submit',result1,{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}}).then(function (response) {\n            console.log(response);\n            console.log(\"updating Lists1\");\n\n        });\n        reply.then((response) => {\n            message.success(\"Submitted successfully\");\n           console.log(\"response=\"+response);\n            this.props.history.push('/assessment');\n        })\n        message.success(\"Submitted successfully\");\n           //console.log(\"response=\"+response);\n            this.props.history.push('/assessment');\n    }\n    if(mode === 'saveDraft'){\n        const reply = axios.post('/assessment/draft',result1,{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}}).then(function (response) {\n            console.log(response);\n            console.log(\"updating Lists1\");\n\n        });\n        reply.then((response) => {\n            message.success(\"Draft Saved successfully\");\n           console.log(\"response=\"+response);\n            this.props.history.push('/assessment');\n        })\n        message.success(\"Submitted successfully\");\n\n         this.props.history.push('/assessment');\n    }\n    }\n\n\n    render() {\n\n        const { templateData, comment } = this.state;\n        if (!templateData) {\n            return null;\n        }\n\n        const filteredDataSource = [\n            {\n                title: 'Main Skill',\n                dataIndex: 'skill.mainSkillArea',\n                key: 'skill.mainSkillArea',\n            },\n            {\n                title: 'Sub Skill',\n                dataIndex: 'skill.subSkillArea',\n                key: 'skill.subSkillArea',\n            },\n            {\n                title: 'Question Level',\n                dataIndex: 'questionLevel',\n                key: 'questionLevel',\n            },\n            {\n                title: 'Question',\n                dataIndex: 'questionText',\n                key: 'questionText',\n            },\n            {\n                title: 'Answer',\n                dataIndex: 'questionID',\n                key: 'questionID',\n                render: (questionID, questionData) => {\n\n                    const { answersData } = this.state;\n                    return (\n\n                        <Radio.Group name=\"radiogroup\" value={(answersData && answersData[questionID]) || ''} onChange={(event) => this.changeAnswer(event, questionData)} style={{display: 'flex', flexDirection: 'row'}}>\n                        <Tooltip title=\"Not Independent\">\n                            <Radio value={1} >1</Radio>\n                        </Tooltip>\n                        <Tooltip title=\"Independent with Guidance\">\n                        <Radio value={2} >2</Radio>\n                      </Tooltip>\n                      <Tooltip title=\"Independent\">\n                        <Radio value={3} >3</Radio>\n                      </Tooltip>\n                        </Radio.Group>\n\n\n                    );\n                }\n            },\n        ];\n\n        return (\n            <div>\n                <StudentNameContainer>\n                    {/* {templateData.studentDetails.studentName || ''} */}\n                    {localStorage.getItem('testName')}\n\n                </StudentNameContainer>\n\n                <FieldContainer>\n                    <Table\n                        dataSource={this.state.dataSource}\n                        columns={filteredDataSource}\n                        pagination={false}\n\n                    />\n\n                </FieldContainer>\n                <CommentFieldContainer>\n                    <Input.TextArea\n                        rows={4}\n                        value={comment}\n                        placeholder=\"Enter your comment\"\n                        onChange={this.commentChange}\n                    />\n                </CommentFieldContainer>\n                <ButtonFieldContainer>\n                    <ButtonComponent\n                        type=\"default\"\n                        onClick={() => this.submitForm('saveDraft')}\n                    >\n                        Save Draft\n                    </ButtonComponent>\n                    <ButtonComponent\n                        type=\"primary\"\n                        onClick={() => this.submitForm('submit')}\n                    >\n                        Submit\n                    </ButtonComponent>\n                </ButtonFieldContainer>\n            </div>\n        )\n    }\n}\n\n\nexport default AssessmentFormPage;\n","/**\n *\n * AssessmentFormPage\n *\n */\n\nimport React from 'react';\nimport {ACCESS_TOKEN_NAME} from \"../../constants/apiConstants\";\nimport { Table, Radio, Input,message ,Tooltip} from 'antd';\nimport axios from 'axios';\nimport {\n    assessmentFormTemplateResponse,\n} from './Assessment.constant';\n\nimport {\n    StudentNameContainer,\n    FieldContainer,\n    CommentFieldContainer,\n    ButtonFieldContainer,\n    ButtonComponent,\n} from './Assessment.style';\n\nclass AssessmentFormPage2 extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n    constructor(props) {\n        super(props);\n        this.state = {\n            templateData: null,\n            answersData: {},\n            questionData: {},\n            comment: '',\n            ans:[],\n            userId:localStorage.getItem('userID'),\n            allquestions:[],\n            selectedquestions:this.props.payload,\n            quest:localStorage.getItem('payload123')\n        }\n    }\n\n    componentDidMount() {\n        //get all api\n        console.log(localStorage.getItem('payload123'));\n        const quest = this.props.history.location.data.questionsList\n        console.log(this.props.history.location.data.questionsList);\n    console.log(quest)\n    //     const apiCallPromise = axios.get(\"/manageTemplate/?templateID=\"+localStorage.getItem('testtemplate'))\n\n    //     .then(function (response) {\n    //         console.log(response)\n    //         console.log(response.status)\n    //         //console.log(\"response\",response.data.questionsList)\n    //         //console.log(this.state.dataSource)\n\n    //         if (response.status === 200) {\n    //             //this.setState({ dataSource: response.data.data });\n    //             //this.state.dataSource = response.data.data;\n    //             return response.data.questionsList;\n    //         } else {\n    //             console.log('error');\n    //         }\n    //     })\n    //     .catch(function (error) {\n    //         console.log(error);\n    //     });\n\n    // // using .then, create a new apiCallPromise which extracts the data\n    // apiCallPromise.then((response) => {\n\n    //     console.log('response.data.data : ', response);\n    //     // [{name: 'a', b: 'b'}, {name: 'c', d: 'd'}]\n\n    //     this.setState({ dataSource: response });\n    //     assessmentFormTemplateResponse.data.assessmentDetails.questions = response\n    //     console.log(this.state.dataSource)\n    //     console.log(assessmentFormTemplateResponse.data.assessmentDetails.questions)\n\n    //     const allquestions1=[]\n    //     assessmentFormTemplateResponse.data.assessmentDetails.questions.forEach((questionData) => {\n    //         allquestions1.push({\n    //                     \"questionID\": questionData.questionID,\n    //                     \"questionText\": questionData.questionText,\n    //                     \"ansText\":'',\n    //                     \"mainSkillArea\":questionData.skill.mainSkillArea,\n    //                     \"subSkillArea\":questionData.skill.subSkillArea,\n    //                     \"questionLevel\":questionData.questionLevel\n    //                 });\n    //     });\n    //     console.log(allquestions1)\n    //     this.setState({ allquestions: allquestions1 });\n    //     console.log(this.state.allquestions)\n    // })\n\n\n        // [{name: 'a', b: 'b'}, {name: 'c', d: 'd'}]\n\n        this.setState({ dataSource: quest });\n        assessmentFormTemplateResponse.data.assessmentDetails.questions = quest\n        console.log(this.state.dataSource)\n        console.log(assessmentFormTemplateResponse.data.assessmentDetails.questions)\n\n        let allquestions1=[]\n        assessmentFormTemplateResponse.data.assessmentDetails.questions.forEach((questionData) => {\n            allquestions1.push({\n                        \"questionID\": questionData.questionID,\n                        \"questionText\": questionData.questionText,\n                        \"ansText\":'',\n                        \"mainSkillArea\":questionData.skill.mainSkillArea,\n                        \"subSkillArea\":questionData.skill.subSkillArea,\n                        \"questionLevel\":questionData.questionLevel\n                    });\n        });\n        console.log(allquestions1)\n        this.setState({ allquestions: allquestions1 });\n        console.log(this.state.allquestions)\n        //const allquestions1=this.state.allquestions\n\n        // assessmentFormTemplateResponse.data.assessmentDetails.questions.forEach((questionData) => {\n        //     allquestions1.push({\n        //                 \"questionID\": questionData.questionID,\n        //                 \"questionText\": questionData.questionText,\n        //                 \"ansText\":''\n        //             });\n        // });\n        const tempAnswersData = {};\n        assessmentFormTemplateResponse.data.assessmentDetails.questions.forEach((questionData) => {\n            if (questionData.questionAnswer) {\n                tempAnswersData[questionData.questionID] = questionData.questionText;\n            }\n        });\n\n        // const apiResponse = this.state.dataSource\n        // console.log(apiResponse)\n        // for (let i = 0; i< this.state.dataSource.length; i ++) {\n        //     allquestions.push({\n        //         \"questionID\": this.state.dataSource[i].questionID,\n        //         \"questionText\": this.state.dataSource[i].questionText,\n        //         \"ansText\":''\n        //     });\n        //     console.log(\"all questions\")\n        //     console.log(allquestions)\n        // }\n\n        //this.setState({ mainSkillOptions: mainSkillOptionsTemp });\n        //this.setState({ templateData: assessmentFormTemplateResponse.data, answersData: tempAnswersData, comment: assessmentFormTemplateResponse.data.assessmentDetails.comment || '' })\n        this.setState({ templateData: assessmentFormTemplateResponse.data, answersData: '', comment:  '' })\n        this.setState({questionData:tempAnswersData})\n    }\n\n    changeAnswer = (event, questionData) => {\n        console.log(\"changeAns\")\n        let tempAns = this.state.ans;\n        tempAns.push({\n            \"question\":questionData.questionID,\"answer\":event.target.value,\"questionText\":questionData.questionText\n        });\n\n        // let userDetails = {\n        //     name: 'siddu',\n        //     age: 70,\n        // };\n\n        // let professionalDetails = {\n        //     name: 'gaiks',\n        //     designation: 'full time',\n        //     companyJoiningDate: '02/02/2020'\n        // }\n\n        //let tempUserDetails = userDetails;\n        //tempUserDetails.designation = 'full time';\n\n       // let completeUserDetails = { name: '-', ...userDetails, ...professionalDetails };\n        //let tempUserDetails = { name: '-'. name: 'siddu',age: 70,designation: 'full time', name: 'gaiks', companyJoiningDate: '02/02/2020' };\n\n        // completeUserDetails = {\n        //     name: 'gaiks',\n        //     age: 70,\n        //     designation: 'full time',\n        //     companyJoiningDate: '02/02/2020'\n        // }\n\n        // let answeredQuestions = [{questionId: 1, answerId: 1}, {questionId: 2, answerId: 2}, {questionId: 3, answerId: 3}];\n        // let unAsweredQuestions = [{questionId: 1, answerId: 2}, {questionId: 5}];\n\n        // let totalQuestions = [...answeredQuestions, ...unAsweredQuestions, {questionId: 6}]\n        // //let totalQuestions = [{questionId: 1, answerId: 1}, {questionId: 2, answerId: 2}, {questionId: 3, answerId: 3}, {questionId: 1, answerId: 2}, {questionId: 5}, {questionnId: 6}]\n\n        this.setState({\n            answersData: { ...this.state.answersData, [questionData.questionID]: event.target.value , \"question\":questionData.questionID,\"answer\":event.target.value},\n            //ans: tempAns,\n        })\n    }\n\n    commentChange = (event) => {\n        this.setState({ comment: event.target.value })\n    }\n\n    submitForm = (mode) => {\n        console.log('mode : ', mode); // submit or saveDraft\n        console.log('state : ', this.state.answersData);\n        console.log('state : ', this.state);\n        const result=[]\n\n        let res = this.state.ans\n        console.log(res)\n        console.log(res.length)\n\n        let all = this.state.allquestions\n        console.log(\"save as a draft\")\n        console.log(all)\n        let result1=[]\n\n        //  res = [{questionId: 2, answerId: 1}, {questionId: 4, answerId: 3}]\n        //  all = [{questionId: 1}, {questionId: 2}, {questionId: 3}, {questionId: 4}, {questionId: 5},]\n        let answerDataObject = {};\n        res.forEach((questionsData) => answerDataObject[questionsData.question] = questionsData.answer);\n        //  answerDataObject = {2: 1, 4: 3};\n        console.log(answerDataObject)\n        for (let i = 0; i< all.length ; i ++) {\n            console.log(all[i])\n            console.log(all[i].ansText)\n            const questionData = all[i];\n            console.log(answerDataObject[questionData.questionID])\n\n            result1.push(\n            {\n\n                    \"userID\": Number(this.state.userId),\n                    \"answerText\": answerDataObject[questionData.questionID] || questionData.ansText || '',\n                    \"questionID\": questionData.questionID,\n                    \"questionText\": questionData.questionText,\n                    \"mainSkillArea\": questionData.mainSkillArea,\n                    \"subSkillArea\": questionData.subSkillArea,\n                    \"questionLevel\": questionData.questionLevel,\n                    \"studentReferenceNumber\": this.state.templateData.studentDetails.studentReferenceNumber,\n                    \"comment\":this.state.comment,\n\n            }\n            );\n        }\n        //this.setState({ : mainSkillOptionsTemp });\n        // if (mode === 'submit') {\n        //     this.props.history.push('/assessment')\n        // }\n        console.log(result1)\n        if(mode === 'submit'){\n        const reply = axios.post('/assessment/submit',result1,{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}}).then(function (response) {\n            console.log(response);\n            console.log(\"updating Lists1\");\n\n        });\n        reply.then((response) => {\n            message.success(\"Submitted successfully\");\n           console.log(\"response=\"+response);\n            this.props.history.push('/assessment');\n        })\n        message.success(\"Submitted successfully\");\n           //console.log(\"response=\"+response);\n            this.props.history.push('/assessment');\n    }\n    if(mode === 'saveDraft'){\n        const reply = axios.post('/assessment/draft',result1,{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}}).then(function (response) {\n            console.log(response);\n            console.log(\"updating Lists1\");\n\n        });\n        reply.then((response) => {\n            message.success(\"Draft Saved successfully\");\n           console.log(\"response=\"+response);\n            this.props.history.push('/assessment');\n        })\n        message.success(\"Submitted successfully\");\n\n         this.props.history.push('/assessment');\n    }\n    }\n\n\n    render() {\n        console.log(\"hi inside assessmnet form 2\")\n        console.log(localStorage.getItem('payload123'));\n        console.log(this.props);\n        console.log(this.props.history);\n        console.log(this.state)\n        const { templateData, comment } = this.state;\n        if (!templateData) {\n            return null;\n        }\n\n        const filteredDataSource = [\n            {\n                title: 'Main Skill',\n                dataIndex: 'skill.mainSkillArea',\n                key: 'skill.mainSkillArea',\n            },\n            {\n                title: 'Sub Skill',\n                dataIndex: 'skill.subSkillArea',\n                key: 'skill.subSkillArea',\n            },\n            {\n                title: 'Question Level',\n                dataIndex: 'questionLevel',\n                key: 'questionLevel',\n            },\n            {\n                title: 'Question',\n                dataIndex: 'questionText',\n                key: 'questionText',\n            },\n            {\n                title: 'Answer',\n                dataIndex: 'questionID',\n                key: 'questionID',\n                render: (questionID, questionData) => {\n\n                    const { answersData } = this.state;\n                    return (\n                        <>\n                        <Radio.Group name=\"radiogroup\" value={(answersData && answersData[questionID]) || ''} onChange={(event) => this.changeAnswer(event, questionData)} style={{display: 'flex', flexDirection: 'row'}}>\n                        <Tooltip title=\"Not Independent\">\n                            <Radio value={1} >1</Radio>\n                        </Tooltip>\n                        <Tooltip title=\"Independent with Guidance\">\n                        <Radio value={2} >2</Radio>\n                      </Tooltip>\n                      <Tooltip title=\"Independent\">\n                        <Radio value={3} >3</Radio>\n                      </Tooltip>\n                        </Radio.Group>\n                        {/* <Tooltip title=\"1-Low 2-Medium 3-High\">\n                        <span>?</span>\n                      </Tooltip> */}\n                      </>\n                    );\n                }\n            },\n        ];\n\n        return (\n            <div>\n                <StudentNameContainer>\n                    {/* {templateData.studentDetails.studentName || ''} */}\n                    {localStorage.getItem('testName')}\n                    {localStorage.getItem('payload123')}\n\n                </StudentNameContainer>\n\n                <FieldContainer>\n                    <Table\n                        dataSource={this.state.dataSource}\n                        columns={filteredDataSource}\n                        pagination={false}\n\n                    />\n\n                </FieldContainer>\n                <CommentFieldContainer>\n                    <Input.TextArea\n                        rows={4}\n                        value={comment}\n                        placeholder=\"Enter your comment\"\n                        onChange={this.commentChange}\n                    />\n                </CommentFieldContainer>\n                <ButtonFieldContainer>\n                    <ButtonComponent\n                        type=\"default\"\n                        onClick={() => this.submitForm('saveDraft')}\n                    >\n                        Save Draft\n                    </ButtonComponent>\n                    <ButtonComponent\n                        type=\"primary\"\n                        onClick={() => this.submitForm('submit')}\n                    >\n                        Submit\n                    </ButtonComponent>\n                </ButtonFieldContainer>\n            </div>\n        )\n    }\n}\n\n\nexport default AssessmentFormPage2;\n","// /**\n//  *\n//  * AssessmentStudentSelectionPage\n//  *\n//  */\n\n// import React from 'react';\n\n// class AssessmentStudentSelectionPage extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//         }\n//     }\n\n\n//     render() {\n\n//         console.log('props : ', this.props.match.params);\n\n//         return (\n//             <div>\n//                 assessment listing page\n//             </div>\n//         )\n//     }\n// }\n\n\n// export default AssessmentStudentSelectionPage;\n\nimport React from 'react';\nimport { Table, Button, Icon, Popconfirm, message } from 'antd';\nimport axios from 'axios';\nimport styles from './styles'\nimport {\n    manageStudentsApiResponse,\n} from './ManageStudents.constants';\nimport {ACCESS_TOKEN_NAME} from \"../../constants/apiConstants\";\nimport ManageStudentsAddEditModal from './ManageStudentsAddEditModal';\n\nimport {\n    filterArray,\n} from '../../utils/utilityFunctions';\n\nimport {\n    InputFilterContainer,\n    InputField,\n    IconContainer,\n    ActionContainer,\n} from './ManageStudents.styled';\n\nclass AssessmentFormPagePast extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n    constructor(props) {\n        super(props);\n        this.state = {\n            filterValue: '',\n            dataSource: [],\n            addEditModalStatus: '',\n            addEditingStudentData: null,\n            deleteData:null,\n            studentID:props.match.params.studentId\n\n        }\n    }\n\n    componentDidMount() {\n      console.log('pick ur template')\n\n        this.getStudentListApiCAllFunction();\n    }\n\n    getStudentListApiCAllFunction = () => {\n\n\n       // http://localhost:8080/assessment/getPastAssessments?studentReferenceNumber=123\n        const apiCallPromise = axios.get(\"/assessment/get?studentReferenceNumber=123\",{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}})\n        .then(function (response) {\n            console.log(response)\n            console.log(response.status)\n            console.log(response.data.data)\n            //console.log(this.state.dataSource)\n            console.log(\"akash\")\n        if(response.status === 200){\n            //this.setState({ dataSource: response.data.data });\n            //this.state.dataSource = response.data.data;\n            return response.data.data;\n        } else{\n            console.log('error');\n        }\n    })\n    .catch(function (error) {\n        console.log(error);\n    });\n\n    // using .then, create a new apiCallPromise which extracts the data\n    apiCallPromise.then((response) => {\n\n      console.log('response.data.data : ', response);\n      // [{name: 'a', b: 'b'}, {name: 'c', d: 'd'}]\n\n      this.setState({ dataSource: response });\n    })\n\n    }\n\n    changeFilter = (event) => {\n        this.setState({ filterValue: event.target.value });\n    }\n\n    editStudentData = (data) => {\n        this.setState({\n            addEditModalStatus: 'edit',\n            addEditingStudentData: data\n        });\n    }\n\n    createNewStudent = (data) => {\n        this.setState({ addEditModalStatus: 'add' });\n    }\n\n    selectAssessment = (data) => {\n      this.setState({\n        addEditingStudentData: data\n    });\n    console.log(\"assessment from \",this.state)\n    console.log(data);\n    localStorage.setItem('assessmentID',data)\n    console.log('history props : ', this.props);\n    this.props.history.push(`/assessment/past/ans/${data}`);\n    //this.props.history.push(`/assessment/1/`+data);\n    }\n\n    selectAssessmentView = (data) => {\n        console.log(\"inside view\")\n        this.setState({\n          addEditingStudentData: data\n      });\n      console.log(\"assessment from \",this.state)\n      console.log(data);\n      localStorage.setItem('assessmentID',data)\n      console.log('history props : ', this.props);\n      this.props.history.push(`/assessment/past/ansview/${data}`);\n      //this.props.history.push(`/assessment/1/`+data);\n      }\n\n    cancelAddEdit = () => {\n        this.setState({\n            addEditModalStatus: '',\n            addEditingStudentData: null\n        });\n    }\n\n    deleteStudent = (data) => {\n\n        console.log(\"delete\"+data)\n        this.setState({\n            addEditModalStatus: 'edit',\n            deleteData: data\n        });\n        console.log(this.state.deleteData)\n        const apiCallPromise = axios.get(\"manageOrganization/delete/\",{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}})\n        .then(function (response) {\n            console.log(response)\n            console.log(response.status)\n            console.log(response.data.data)\n            //console.log(this.state.dataSource)\n            console.log(\"akash\")\n        if(response.status === 200){\n            //this.setState({ dataSource: response.data.data });\n            //this.state.dataSource = response.data.data;\n            return response.data.data;\n        } else{\n            console.log('error');\n        }\n    })\n    .catch(function (error) {\n        console.log(error);\n    });\n        message.success('Student successfully deleted');\n        this.getStudentListApiCAllFunction();\n    }\n\n    updateListingData = () => {\n        this.getStudentListApiCAllFunction();\n        this.cancelAddEdit();\n    }\n\n    render() {\n        console.log(\"hello\")\n       // console.log('history : ', this.props.history);\n       // console.log('studentId : ', this.state.studentId);\n        const manageStudentsColumns = [\n            {\n                title: 'Assessment',\n                dataIndex: 'assessmentID',\n                key: 'assessmentID',\n            },\n            {\n                title: 'Reported By',\n                dataIndex: 'coachName',\n                key: 'coachName',\n\n            },\n\n            {\n                title: 'Status',\n                dataIndex: 'status',\n                key: 'status',\n            },\n            {\n              title: '',\n              dataIndex: 'assessmentID',\n                key: 'assessmentID',\n            render: (assessmentID,record) => {\n                console.log(record.status)\n                if(record.status === 'Pending'){\n                return <Button onClick={() => this.selectAssessment(assessmentID)}>Start</Button>\n                }\n\n                return <Button onClick={() => this.selectAssessmentView(assessmentID)}>view</Button>\n            }\n          },\n            // {\n            //     title: 'Address',\n            //     dataIndex: 'studentContactNo',\n            //     key: 'studentContactNo',\n            // },\n            // {\n            //     title: 'Organization Name',\n            //     dataIndex: 'organization.orgName',\n            //     key: 'organization',\n            // },\n            // {\n            //     title: 'Coach Name',\n            //     dataIndex: 'userID',\n            //     key: 'userID',\n            // },\n\n        ];\n\n        const { filterValue, dataSource, addEditModalStatus = '', addEditingStudentData } = this.state;\n\n        let filteredDataSource = dataSource;\n\n        if (filterValue && filterValue.length) {\n            filteredDataSource = filterArray(dataSource, filterValue, ['studentName', 'studentReferenceNumber', 'studentContactNo', 'organization.orgName', 'userID']);\n        }\n\n        return (\n            <div>\n                <InputFilterContainer>\n                    <InputField\n                        onChange={this.changeFilter}\n                        value={filterValue}\n                        placeholder=\"Enter Filter\"\n                    />\n\n                </InputFilterContainer>\n                <Table\n                    dataSource={filteredDataSource}\n                    columns={manageStudentsColumns}\n                />\n                {/* {addEditModalStatus === 'add' ? '' : 'Enter Reference Number'}\n                 {status ==='completed' ? (\n                    <ManageStudentsAddEditModal\n                        addEditModalStatus={addEditModalStatus}\n                        addEditingStudentData={addEditingStudentData}\n                        cancelAddEdit={this.cancelAddEdit}\n                        updateListingData={this.updateListingData}\n                    />\n                ) : null}  */}\n            </div>\n        )\n    }\n}\n\n\nexport default AssessmentFormPagePast;\n\n","/**\n *\n * AssessmentFormPage\n *\n */\n\nimport React from 'react';\nimport {ACCESS_TOKEN_NAME} from \"../../constants/apiConstants\";\nimport { Table, Radio, Input,message,Tooltip } from 'antd';\nimport axios from 'axios';\nimport {\n    assessmentFormTemplateResponse,\n} from './Assessment.constant';\n\nimport {\n    StudentNameContainer,\n    FieldContainer,\n    CommentFieldContainer,\n    ButtonFieldContainer,\n    ButtonComponent,\n} from './Assessment.style';\n\nclass AssessmentFormPage extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n    constructor(props) {\n        super(props);\n        this.state = {\n            templateData: null,\n            answersData: {},\n            comment: '',\n            ans:[],\n            userId:localStorage.getItem('userID')\n\n        }\n    }\n\n    componentDidMount() {\n        //get all api\n        const apiCallPromise = axios.get(\"/assessment/getAssessment?assessmentID=\"+localStorage.getItem('assessmentID'),{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}})\n\n        .then(function (response) {\n            console.log(response)\n            console.log(response.data.data.answers)\n            //console.log(\"response\",response.data.questionsList)\n            //console.log(this.state.dataSource)\n\n            if (response.status === 200) {\n                //this.setState({ dataSource: response.data.data });\n                //this.state.dataSource = response.data.data;\n                return response.data.data.answers;\n            } else {\n                console.log('error');\n            }\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n\n    // using .then, create a new apiCallPromise which extracts the data\n    apiCallPromise.then((response) => {\n\n        console.log('response.data.data : ', response);\n        // [{name: 'a', b: 'b'}, {name: 'c', d: 'd'}]\n\n        this.setState({ dataSource: response });\n        assessmentFormTemplateResponse.data.assessmentDetails.questions = response\n        console.log(this.state.dataSource)\n        console.log(assessmentFormTemplateResponse.data.assessmentDetails.questions)\n    })\n\n    console.log(\"old ans\");\n        const tempAnswersData = {};\n        assessmentFormTemplateResponse.data.assessmentDetails.questions.forEach((questionData) => {\n            console.log(questionData)\n            if (questionData.answerText) {\n                tempAnswersData[questionData.questionID] = questionData.answerText;\n            }\n        });\n        this.setState({ templateData: assessmentFormTemplateResponse.data, answersData: tempAnswersData, comment: assessmentFormTemplateResponse.data.assessmentDetails.comment || '' })\n       // this.setState({ templateData: assessmentFormTemplateResponse.data, answersData: '', comment:  '' })\n       console.log(tempAnswersData)\n    }\n\n    changeAnswer = (event, questionData) => {\n        console.log(\"changeAns\")\n\n        this.setState({ answersData: { ...this.state.answersData, [questionData.questionID]: event.target.value , \"question\":questionData.questionID,\"answer\":event.target.value} })\n\n        console.log(questionData)\n        this.state.ans.push({\n            \"question\":questionData.questionID,\"answer\":event.target.value\n        })\n    }\n\n    commentChange = (event) => {\n        this.setState({ comment: event.target.value })\n    }\n\n    submitForm = (mode) => {\n        console.log('mode : ', mode); // submit or saveDraft\n        console.log('state : ', this.state.answersData);\n        console.log('state : ', this.state);\n        const result=[]\n\n        const res = this.state.ans\n        console.log(res)\n        console.log(this.state.ans.length)\n        console.log(res.length)\n\n        const result1 =[]\n        for (let i = 0; i< res.length; i ++) {\n\n            console.log(this.state.userId)\n        console.log(this.state.ans.answer)\n        console.log(this.state.ans.question)\n        console.log(this.state.templateData.studentDetails.studentID)\n\n            result1.push(\n            {\n\n                    \"userID\": Number(this.state.userId),\n                    \"answerText\":res[i].answer,\n                    \"questionID\": res[i].question,\n                    \"studentReferenceNumber\": this.state.templateData.studentDetails.studentReferenceNumber,\n                    \"comment\":this.state.comment,\n\n            }\n            );\n        }\n        //this.setState({ : mainSkillOptionsTemp });\n        // if (mode === 'submit') {\n        //     this.props.history.push('/assessment')\n        // }\n        console.log(result1)\n        if(mode === 'submit'){\n        const reply = axios.post('/assessment/submit',result1,{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}}).then(function (response) {\n            console.log(response);\n            console.log(\"updating Lists1\");\n\n        });\n        reply.then((response) => {\n            message.success(\"Submitted successfully\");\n           console.log(\"response=\"+response);\n            this.props.history.push('/assessment');\n        })\n    }\n    if(mode === 'saveDraft'){\n        const reply = axios.post('/assessment/draft',result1,{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}}).then(function (response) {\n            console.log(response);\n            console.log(\"updating Lists1\");\n\n        });\n        reply.then((response) => {\n            message.success(\"Draft Saved successfully\");\n           console.log(\"response=\"+response);\n            this.props.history.push('/assessment');\n        })\n\n    }\n    }\n\n\n    render() {\n\n        const { templateData, comment } = this.state;\n        if (!templateData) {\n            return null;\n        }\n\n        const filteredDataSource = [\n            {\n                title: 'Question',\n                dataIndex: 'questionText',\n                key: 'questionText',\n            },\n            {\n                title: 'Answer',\n                dataIndex: 'questionID',\n                key: 'questionID',\n                render: (questionID, questionData) => {\n                    const { answersData } = this.state;\n                    return (\n                        <Radio.Group name=\"radiogroup\" value={(answersData && answersData[questionID]) || ''} onChange={(event) => this.changeAnswer(event, questionData)} style={{display: 'flex', flexDirection: 'row'}}>\n                                <Tooltip title=\"Not Independent\">\n                                    <Radio value={1} >1</Radio>\n                                </Tooltip>\n                                <Tooltip title=\"Independent with Guidance\">\n                                    <Radio value={2} >2</Radio>\n                                </Tooltip>\n                                <Tooltip title=\"Independent\">\n                                    <Radio value={3} >3</Radio>\n                                </Tooltip>\n                        </Radio.Group>\n                    );\n                }\n            },\n        ];\n\n        return (\n            <div>\n                <StudentNameContainer>\n                    {/* {templateData.studentDetails.studentName || ''} */}\n                    {localStorage.getItem('testName')}\n                </StudentNameContainer>\n                <FieldContainer>\n                    <Table\n                        dataSource={this.state.dataSource}\n                        columns={filteredDataSource}\n                        pagination={false}\n                    />\n                </FieldContainer>\n                <CommentFieldContainer>\n                    <Input.TextArea\n                        rows={4}\n                        value={comment}\n                        placeholder=\"Enter your comment\"\n                        onChange={this.commentChange}\n                    />\n                </CommentFieldContainer>\n                <ButtonFieldContainer>\n                    <ButtonComponent\n                        type=\"default\"\n                        onClick={() => this.submitForm('saveDraft')}\n                    >\n                        Save Draft\n                    </ButtonComponent>\n                    <ButtonComponent\n                        type=\"primary\"\n                        onClick={() => this.submitForm('submit')}\n                    >\n                        Submit\n                    </ButtonComponent>\n                </ButtonFieldContainer>\n            </div>\n        )\n    }\n}\n\n\nexport default AssessmentFormPage;\n","/**\n *\n * AssessmentFormPage\n *\n */\n\nimport React from 'react';\nimport {ACCESS_TOKEN_NAME} from \"../../constants/apiConstants\";\nimport { Table, Radio, Input,message,Tooltip } from 'antd';\nimport axios from 'axios';\nimport {\n    assessmentFormTemplateResponse,\n} from './Assessment.constant';\n\nimport {\n    StudentNameContainer,\n    FieldContainer,\n    CommentFieldContainer,\n    ButtonFieldContainer,\n    ButtonComponent,\n} from './Assessment.style';\n\nclass AssessmentFormPage extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n    constructor(props) {\n        super(props);\n        this.state = {\n            templateData: null,\n            answersData: {},\n            comment: '',\n            ans:[],\n            userId:localStorage.getItem('userID'),\n            disabled: true\n\n        }\n    }\n\n    componentDidMount() {\n        //get all api\n        const apiCallPromise = axios.get(\"/assessment/getAssessment?assessmentID=\"+localStorage.getItem('assessmentID'),{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}})\n\n        .then(function (response) {\n            console.log(response)\n            console.log(response.data.data.answers)\n            //console.log(\"response\",response.data.questionsList)\n            //console.log(this.state.dataSource)\n\n            if (response.status === 200) {\n                //this.setState({ dataSource: response.data.data });\n                //this.state.dataSource = response.data.data;\n                return response.data.data.answers;\n            } else {\n                console.log('error');\n            }\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n\n    // using .then, create a new apiCallPromise which extracts the data\n    apiCallPromise.then((response) => {\n\n        console.log('response.data.data : ', response);\n        // [{name: 'a', b: 'b'}, {name: 'c', d: 'd'}]\n\n        this.setState({ dataSource: response });\n        assessmentFormTemplateResponse.data.assessmentDetails.questions = response\n        console.log(this.state.dataSource)\n        console.log(assessmentFormTemplateResponse.data.assessmentDetails.questions)\n\n        console.log(\"old ans\");\n        const tempAnswersData = {};\n        assessmentFormTemplateResponse.data.assessmentDetails.questions.forEach((questionData) => {\n            console.log(questionData)\n            if (questionData.answerText) {\n                tempAnswersData[questionData.questionID] = questionData.answerText;\n            }\n        });\n        this.setState({ templateData: assessmentFormTemplateResponse.data, answersData: tempAnswersData, comment: assessmentFormTemplateResponse.data.assessmentDetails.comment || '' })\n       // this.setState({ templateData: assessmentFormTemplateResponse.data, answersData: '', comment:  '' })\n       console.log(tempAnswersData)\n    })\n\n\n    }\n\n    changeAnswer = (event, questionData) => {\n        console.log(\"changeAns\")\n\n        this.setState({ answersData: { ...this.state.answersData, [questionData.questionID]: event.target.value , \"question\":questionData.questionID,\"answer\":event.target.value} })\n\n        console.log(questionData)\n        this.state.ans.push({\n            \"question\":questionData.questionID,\"answer\":event.target.value\n        })\n    }\n\n    commentChange = (event) => {\n        this.setState({ comment: event.target.value })\n    }\n\n    submitForm = (mode) => {\n        console.log('mode : ', mode); // submit or saveDraft\n        console.log('state : ', this.state.answersData);\n        console.log('state : ', this.state);\n        const result=[]\n\n        const res = this.state.ans\n        console.log(res)\n        console.log(this.state.ans.length)\n        console.log(res.length)\n\n        const result1 =[]\n        for (let i = 0; i< res.length; i ++) {\n\n            console.log(this.state.userId)\n        console.log(this.state.ans.answer)\n        console.log(this.state.ans.question)\n        console.log(this.state.templateData.studentDetails.studentID)\n\n            result1.push(\n            {\n\n                    \"userID\": Number(this.state.userId),\n                    \"answerText\":res[i].answer,\n                    \"questionID\": res[i].question,\n                    \"studentReferenceNumber\": this.state.templateData.studentDetails.studentReferenceNumber,\n                    \"comment\":this.state.comment,\n\n            }\n            );\n        }\n        //this.setState({ : mainSkillOptionsTemp });\n        // if (mode === 'submit') {\n        //     this.props.history.push('/assessment')\n        // }\n        console.log(result1)\n        if(mode === 'submit'){\n        const reply = axios.post('/assessment/submit',result1,{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}}).then(function (response) {\n            console.log(response);\n            console.log(\"updating Lists1\");\n\n        });\n        reply.then((response) => {\n            message.success(\"Submitted successfully\");\n           console.log(\"response=\"+response);\n            this.props.history.push('/assessment');\n        })\n    }\n    if(mode === 'saveDraft'){\n        const reply = axios.post('/assessment/draft',result1,{headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}}).then(function (response) {\n            console.log(response);\n            console.log(\"updating Lists1\");\n\n        });\n        reply.then((response) => {\n            message.success(\"Draft Saved successfully\");\n           console.log(\"response=\"+response);\n            this.props.history.push('/assessment');\n        })\n\n    }\n    }\n\n\n    render() {\n\n        const { templateData, comment } = this.state;\n        if (!templateData) {\n            return null;\n        }\n\n        const filteredDataSource = [\n            {\n                title: 'Main Skill',\n                dataIndex: 'mainSkillArea',\n                key: 'mainSkillArea',\n            },\n            {\n                title: 'Sub Skill',\n                dataIndex: 'subSkillArea',\n                key: 'subSkillArea',\n            },\n            {\n                title: 'Question Level',\n                dataIndex: 'questionLevel',\n                key: 'questionLevel',\n            },\n            {\n                title: 'Question',\n                dataIndex: 'questionText',\n                key: 'questionText',\n            },\n            {\n                title: 'Answer',\n                dataIndex: 'questionID',\n                key: 'questionID',\n                render: (questionID, questionData) => {\n                    const { answersData } = this.state;\n                    return (\n                        <Radio.Group name=\"radiogroup\" value={(answersData && answersData[questionID]) || ''} onChange={(event) => this.changeAnswer(event, questionData)} style={{display: 'flex', flexDirection: 'row'}} disabled={this.state.disabled}>\n\n                        <Tooltip title=\"Not Independent\">\n                            <Radio value={1} >1</Radio>\n                        </Tooltip>\n                        <Tooltip title=\"Independent with Guidance\">\n                        <Radio value={2} >2</Radio>\n                      </Tooltip>\n                      <Tooltip title=\"Independent\">\n                        <Radio value={3} >3</Radio>\n                      </Tooltip>\n                        </Radio.Group>\n                    );\n                }\n            },\n        ];\n\n        return (\n            <div>\n                <StudentNameContainer>\n                    {/* {templateData.studentDetails.studentName || ''} */}\n                    {localStorage.getItem('testName')}\n                </StudentNameContainer>\n                <FieldContainer>\n                    <Table\n                        dataSource={this.state.dataSource}\n                        columns={filteredDataSource}\n                        pagination={false}\n                    />\n                </FieldContainer>\n                <CommentFieldContainer>\n                    <Input.TextArea\n                        rows={4}\n                        value={comment}\n                        placeholder=\"Enter your comment\"\n                        onChange={this.commentChange}\n                    />\n                </CommentFieldContainer>\n                {/* <ButtonFieldContainer>\n                    <ButtonComponent\n                        type=\"default\"\n                        onClick={() => this.submitForm('saveDraft')}\n                    >\n                        Save Draft\n                    </ButtonComponent>\n                    <ButtonComponent\n                        type=\"primary\"\n                        onClick={() => this.submitForm('submit')}\n                    >\n                        Submit\n                    </ButtonComponent>\n                </ButtonFieldContainer> */}\n            </div>\n        )\n    }\n}\n\n\nexport default AssessmentFormPage;\n","/**\n *\n * Assessment\n *\n */\n\nimport React from 'react';\nimport {\n    Switch,\n    Route,\n} from \"react-router-dom\";\n\nimport AssessmentStudentSelectionPage from './AssessmentStudentSelectionPage';\nimport AssessmentTemplateSelectionPage from './AssessmentTemplateSelectionPage';\nimport AssessmentFormPage from './AssessmentFormPage';\nimport AssessmentFormPage2 from './AssessmentFormPage2';\nimport AssessmentFormPagePast from './AssessmentFormPagePast';\nimport AssessmentFormPagePastAns from './AssessmentFormPagePastAns';\nimport AssessmentFormPagePastAnsView from './AssessmentFormPagePastAnsView';\n\nclass Assessment extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n\n    render() {\n\n        \n        return (\n            <Switch>\n                <Route exact path=\"/assessment/create\" component={AssessmentFormPage2} />\n                <Route exact path=\"/assessment/past/ansview/:studentId\" component={AssessmentFormPagePastAnsView} />\n                <Route exact path=\"/assessment/past/ans/:studentId\" component={AssessmentFormPagePastAns} />\n                <Route exact path=\"/assessment/pastassessment/:studentId\" component={AssessmentFormPagePast} />\n                <Route exact path=\"/assessment/:studentId/:templateId\" component={AssessmentFormPage} />\n                <Route exact path=\"/assessment/:studentId\" component={AssessmentTemplateSelectionPage} />\n                <Route exact path=\"/assessment\" component={AssessmentStudentSelectionPage} />\n                \n                \n            </Switch>\n        )\n    }\n}\n\n\nexport default Assessment;\n","// import styled from 'styled-components';\n// import SelectDropDownComponent from '../SelectDropDownComponent';\n// import { Input } from 'antd';\n\n// export const QuestionHeaderContainer = styled.div`\n//     margin-bottom: 35px;\n//     display: flex;\n//     justify-content: space-between;\n// `;\n\n// export const TableHeaderContainer = styled.div`\n//     margin-bottom: 15px;\n//     display: flex;\n//     justify-content: space-between;\n// `;\n\n// export const InputField = styled(Input)`\n//     max-width: 350px;\n// `;\n\n// export const SkillSelectionContainer = styled.div`\n//     display: flex;\n//     width: 600px;\n// `;\n\n// export const SelectDropDownComponentWrapper = styled(SelectDropDownComponent)`\n//     margin-right: 15px;\n// `;\n\n// export const FieldContainer = styled.div`\n//     margin: 15px 0;\n// `;\n\n// export const IconContainer = styled.div`\n//     padding: 5px 10px;\n// `;\n\n// export const ActionContainer = styled.div`\n//     display: flex;\n// `;\n\n\nimport styled from 'styled-components';\nimport SelectDropDownComponent from '../SelectDropDownComponent';\nimport { Input } from 'antd';\n\nexport const QuestionHeaderContainer = styled.div`\n    margin-bottom: 35px;\n    display: flex;\n    justify-content: space-between;\n`;\n\nexport const TableHeaderContainer = styled.div`\n    margin-bottom: 15px;\n    display: flex;\n    justify-content: space-between;\n`;\n\nexport const InputField = styled(Input)`\n    max-width: 350px;\n`;\n\nexport const SkillSelectionContainer = styled.div`\n    display: flex;\n    width: 600px;\n`;\n\nexport const SelectDropDownComponentWrapper = styled(SelectDropDownComponent)`\n    margin-right: 150px;\n`;\n\nexport const FieldContainer = styled.div`\n    margin: 15px 0;\n`;\n\nexport const IconContainer = styled.div`\n    padding: 5px 10px;\n`;\n\nexport const ActionContainer = styled.div`\n    display: flex;\n`;","/**\n *\n * ManageQuestionAddEditModal\n *\n */\n\nimport React from 'react';\nimport { Button, Modal, Input, message } from 'antd';\nimport axios from 'axios';\nimport SelectDropDownComponent from '../SelectDropDownComponent';\nimport {ACCESS_TOKEN_NAME} from \"../../constants/apiConstants\";\nimport {\n    FieldContainer,\n} from './ManageQuestions.styled';\n\nimport {\n    manageStudentsOrganizationResponse,\n    manageStudentsCoachListResponse,\n} from './ManageQuestions.constants';\n\n//const questionLevelList = ['Bronze', 'Gold', 'Silver']\n\nclass ManageQuestionAddEditModal extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n    constructor(props) {\n        super(props);\n        this.state = {\n            addEditingQuestionData: {\n                question: '',\n                //\n                questionID: '',\n                questionLevel: '',\n\n            },\n            //\n            questionLevelList: [{id: \"Bronze\",\n            label: \"Bronze\"},{id: \"Silver\",\n            label: \"Silver\"},{id: \"Gold\",\n            label: \"Gold\"} ],\n\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"in component \", this.props.addEditingQuestionData)\n\n        const { addEditingQuestionData } = this.props;\n\n        if (addEditingQuestionData) {\n            this.setState({ addEditingQuestionData: {\n                ...addEditingQuestionData,\n                question: addEditingQuestionData.questionLabel,\n                //\n                questionID: addEditingQuestionData.questionID,\n            }});\n        }\n    }\n\n    submit = () => {\n        console.log('Update State method', this.state)\n        console.log(\"hi im in update button click\")\n        console.log('addEditingQuestionData : ', this.state.addEditingQuestionData);\n        console.log('addEditModalStatus : ', this.props.addEditModalStatus);\n        console.log('mainSkillValue : ', this.props.mainSkillValue);\n        console.log('subSkillValue : ', this.props.subSkillValue);\n        //  ToDo: make the add / edit api call depending on the value of this.props.addEditModalStatus.\n        //update api start\n        //http://localhost:8080/manageQuestion/updateQuestion?questionID=2&questionText=question-2564566666\n        // console.log(payload)\n\n\n//////////////\n        const payload={\n            \"questionID\" : this.state.addEditingQuestionData.questionID,\n            \"questionLabel\" : this.state.addEditingQuestionData.question,\n            \"questionLevel\" : this.state.addEditingQuestionData.questionLevel,\n\n        }\n\n        console.log(\"manasa \",payload)\n        //console.log(payload)\n        //http://localhost:8080/manageQuestion/updateQuestion?questionID=2&questionText=question-2564566666\n       if(this.props.addEditModalStatus === 'add'){\n                //addquestion API\n\n                //http://localhost:8080/manageQuestion/addQuestion?mainSkillArea=Academic&subSkillArea=Academic Insight&questionText=question444&questionLevel=Bronze\n                console.log(\"inside add the student\");\n                console.log(payload);\n\n                const reply = axios.post('manageQuestion/addQuestion?questionText='+payload.questionLabel+\"&mainSkillArea=\"+this.props.mainSkillValue+\"&subSkillArea=\"+this.props.subSkillValue+\"&questionLevel=\"+payload.questionLevel, {}, {headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}})\n                .then(function (response) {\n                    console.log(response);\n                    console.log(\"add Question list1\");\n                    return response;\n                    //////\n\n                });\n                reply.then((response) => {\n                    console.log(\"in reply\", response)\n                    if (response.status === 200) {\n                        if (response.data.status === \"error\") {\n                            message.error(response.data.message);\n                        } else if (response.data.status === \"success\") {\n                            this.props.updateListingData();\n                            if (response.data.message !== \"\") {\n                                message.success(response.data.message);\n                            }\n                        }\n                    } else {\n                        message.error(\"Something went wrong\");\n                    }\n                }).catch(function (error) {\n                    console.log(error.response);\n                    if(error.response.status === 403) {\n                        message.error(\"You were logged out!\");\n                    } else {\n                        message.error(\"Unable to contact server\");\n                    }\n                });\n\n                console.log(this.props.mainSkillValue);\n                console.log(this.props.subSkillValue);\n                const reply2 = axios.post('/manageQuestion/addQuestion?questionText='+payload.questionLabel+\"&mainSkillArea=\"+this.props.mainSkillValue+\"&subSkillArea=\"+this.props.subSkillValue+\"&questionLevel=\"+payload.questionLevel, {headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}}).then(function (response) {\n                    console.log(response);\n                    console.log(\"add Question list1\");\n\n                });\n                reply2.then((response) => {\n                    message.success(\"Question successfully added..!\");\n                    this.props.updateListingData();\n                })\n            }else{\n            //axios.get(\"/login/changePassword?email_id=\"+payload.email+\"&password=\"+payload.password, payload)\n            //updateapi\n         const reply1 =   axios.patch('/manageQuestion/updateQuestion?questionID='+payload.questionID+\"&questionText=\"+payload.questionLabel+\"&questionLevel=\"+payload.questionLevel,payload, {headers: {'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME)}})\n           .then(function (response) {\n            });\n            reply1.then((response) => {\n                // success message popup\n                 message.success(\"Question successfully updated!\");\n                this.props.updateListingData();\n            })\n        }\n       //end by me\n        //   use this.state.addEditingQuestionData to get the student data\n        // message.success(`Question ${this.props.addEditModalStatus === 'add' ? 'created' : 'updated'} successfully`);\n        // this.props.updateListingData();\n    }\n\n    changeFilter = (value) => {\n        console.log(\"value----\",value)\n        console.log('aa', this.state.addEditingQuestionData)\n        this.setState({ addEditingQuestionData: {\n            ...this.state.addEditingQuestionData,\n            question: value,\n            //\n\n        }\n    });\n\n    }\n\n    changeQuestionLevel = (value) => {\n        console.log(\"Chnage question lelvel new value---------->>>>>>>>>>>>>>>>>>>>>>>>>>>\",value)\n       // console.log('aa', this.state.addEditingQuestionData)\n        this.setState({ addEditingQuestionData: {\n            ...this.state.addEditingQuestionData,\n            questionLevel: value\n        }\n    });\n    }\n\n\n    render() {\n        //console.log('new data', addEditingQuestionData);\n        const { addEditingQuestionData } = this.state;\n        const { cancelAddEdit, addEditModalStatus, mainSkillValue, mainSkillOptions, subSkillValue, subSkillOptions, questionLevelList = [] } = this.props;\n        console.log('Select struc uture',mainSkillOptions)\n\n        console.log('state : ', this.state);\n\n        return (\n            <Modal\n                title={addEditModalStatus === 'edit' ? 'Edit Student Data' : 'Add New Student'}\n                visible={addEditModalStatus.length}\n                onOk={addEditModalStatus === 'edit' ? this.editStudentData : this.createNewStudent}\n                onCancel={cancelAddEdit}\n                footer={[\n                    <Button key=\"back\" onClick={cancelAddEdit}>\n                        Cancel\n                    </Button>,\n                    <Button key=\"submit\" type=\"primary\" onClick={this.submit}>\n                        {addEditModalStatus === 'edit' ? 'Update' : 'Create'}\n                    </Button>,\n                ]}\n            >\n                <FieldContainer>\n                    <SelectDropDownComponent\n                        disabled\n                        onChange={(event) => this.changeFilter(event.target.value)}\n                        value={mainSkillValue}\n                        placeholder=\"Main skill\"\n                        options={mainSkillOptions}\n                    />\n                </FieldContainer>\n\n                <FieldContainer>\n                    <SelectDropDownComponent\n                        disabled\n                        onChange={(event) => this.changeFilter(event.target.value)}\n                        value={subSkillValue}\n                        placeholder=\"Sub skill\"\n                        options={subSkillOptions}\n                    />\n                </FieldContainer>\n                <FieldContainer>\n                    <Input\n                        onChange={(event) => this.changeFilter(event.target.value)}\n                        value={addEditingQuestionData.question}\n                        placeholder=\"Enter Question\"\n                    />\n                </FieldContainer>\n                {/* newly */}\n                <FieldContainer>\n                    <SelectDropDownComponent\n\n                        onChangeHandler={(value) => this.changeQuestionLevel(value)}\n                        value={addEditingQuestionData.questionLevel}\n                        placeholder=\"Bronze or silver or gold\"\n                        options={this.state.questionLevelList}\n\n                    />\n                </FieldContainer>\n            </Modal>\n        )\n    }\n\n}\n\n\nexport default ManageQuestionAddEditModal;","/**\n *\n * ManageQuestions new\n *\n */\n\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button, Divider, Icon, Input, message, Popconfirm, Table } from 'antd';\nimport axios from 'axios';\nimport React from 'react';\nimport {\n    filterArray\n} from '../../utils/utilityFunctions';\nimport ManageQuestionAddEditModal from './ManageQuestionAddEditModal';\nimport {\n    ActionContainer, FieldContainer,\n    IconContainer,\n\n    InputField, QuestionHeaderContainer,\n\n    SelectDropDownComponentWrapper, SkillSelectionContainer,\n\n    TableHeaderContainer\n} from './ManageQuestions.styled';\n\n\n\n\n\nclass ManageQuestions extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n    constructor(props) {\n        super(props);\n        this.state = {\n            mainSkillOptions: [],\n            mainSkillValue: '',\n            subSkillOptions: [],\n            subSkillValue: '',\n            questionsData: [],\n            addEditModalStatus: '',\n            addEditingQuestionData: null,\n            questionFilterValue: '',\n            newMainSkillValue: '',\n            newSubSkillValue: ''\n        }\n    }\n\n    componentDidMount() {\n        // ToDo: api call to get the list of main skills options\n        // const mainSkillOptions = mainSkillsApiResponse.data.map((mainSkill) => {\n        //     return {\n        //         id: mainSkill.mainSkillId,\n        //         label: mainSkill.mainSkillName\n        //     }\n        // });\n\n        ///manageQuestion/getMainSkills\n        //API to get sub skill areas: /manageQuestion/getSubSkills\n        const apiCallPromise = axios.get('/manageQuestion/getMainSkills', { headers: { 'Authorization': 'Bearer ' + localStorage.getItem('jwtToken') } })\n            .then(function (response) {\n                //console.log(response)\n                if (response.status === 200) {\n                    return response.data.data;\n                } else {\n                    console.log('error');\n                }\n            })\n            .catch(function (error) {\n                console.log(error.response);\n                if (error.response.status === 403) {\n                    message.error(\"You were logged out!\");\n                } else {\n                    message.error(\"Unable to contact server\");\n                }\n            });\n\n\n        apiCallPromise.then((apiResponse) => {\n            console.log('apiResponse in get main skills: ', apiResponse);\n\n            const mainSkillOptionsTemp = []\n\n            for (let i = 0; i < apiResponse.length; i++) {\n                mainSkillOptionsTemp.push({\n                    id: apiResponse[i],\n                    label: apiResponse[i],\n                });\n            }\n\n            this.setState({ mainSkillOptions: mainSkillOptionsTemp });\n\n        })\n\n        // const mainSkillOptionsTemp = []\n\n        // for (let i = 0; i< mainSkillsApiResponse.data.length; i ++) {\n        //     mainSkillOptionsTemp.push({\n        //         id: mainSkillsApiResponse.data[i].mainSkillId,\n        //         label: mainSkillsApiResponse.data[i].mainSkillName,\n        //     });\n        // }\n\n        // this.setState({ mainSkillOptions: mainSkillOptionsTemp });\n    }\n\n    changeFilter = (value, fieldId) => {\n        console.log(value)\n        if (fieldId === 'mainSkillValue') {\n            this.setState({ [fieldId]: value, subSkillOptions: [], subSkillValue: '', questionsData: [] });\n\n            // ToDo: api call to get this list of sub skill options\n            const apiCallPromise = axios.get(\"/manageQuestion/getSubSkills?mainSkillArea=\" + value, { headers: { 'Authorization': 'Bearer ' + localStorage.getItem('jwtToken') } })\n                .then(function (response) {\n                    //console.log(response)\n                    if (response.status === 200) {\n                        return response.data.data;\n                    } else {\n                        console.log('error');\n                    }\n                })\n                .catch(function (error) {\n                    console.log(error.response);\n                    if (error.response.status === 403) {\n                        message.error(\"You were logged out!\");\n                    } else {\n                        message.error(\"Unable to contact server\");\n                    }\n                });\n\n            apiCallPromise.then((apiResponse) => {\n                console.log('apiResponse: ', apiResponse);\n\n                const subSkillOptionsTmp = []\n\n                for (let i = 0; i < apiResponse.length; i++) {\n                    subSkillOptionsTmp.push({\n                        id: apiResponse[i],\n                        label: apiResponse[i],\n                    });\n                }\n\n                //this.setState({ mainSkillOptions: mainSkillOptionsTemp });\n                this.setState({ subSkillOptions: subSkillOptionsTmp });\n            })\n\n        } else {\n\n\n            //this.setState({ mainSkillOptions: mainSkillOptionsTemp });\n            console.log(\"else part\")\n            this.setState({ [fieldId]: value });\n            this.setState({ [fieldId]: value }, function () {\n                this.getQuestions();\n            });\n            // console.log('Main Skill area', this.state.mainSkillValue, 'sub skill Area : ', this.state.subSkillValue);\n\n\n            // })\n\n            // const subSkillOptions = subSkillsApiResponse.data.map((subSkill) => {\n            //     return {\n            //         id: subSkill.subSkillId,\n            //         label: subSkill.subSkillName,\n            //     }\n            // });\n            // this.setState({ subSkillOptions })\n\n            // this.setState({ [fieldId]: value });\n\n            // this.getQuestions();\n        }\n    }\n\n    getQuestions = () => {\n        //  ToDo: api call to get the list of questions\n        //http://localhost:8080/manageQuestion/bySkill?mainSkillArea=Academic&subSkillArea=Transportation\n        //starttt\n        console.log(\"hi in questions!!!\")\n        console.log('API is', `/manageQuestion/bySkill?mainSkillArea=${this.state.mainSkillValue}&subSkillArea=${this.state.subSkillValue}`);\n        const apiCallPromise = axios.get(`/manageQuestion/bySkill?mainSkillArea=${this.state.mainSkillValue}&subSkillArea=${this.state.subSkillValue}`, { headers: { 'Authorization': 'Bearer ' + localStorage.getItem('jwtToken') } })\n            .then(function (response) {\n                //console.log(response)\n                if (response.status === 200) {\n                    return response.data.data;\n                } else {\n                    console.log('error');\n                }\n            })\n            .catch(function (error) {\n                console.log(error.response);\n                if (error.response.status === 403) {\n                    message.error(\"You were logged out!\");\n                } else {\n                    message.error(\"Unable to contact server\");\n                }\n            });\n\n        let questionsTemp = []\n        apiCallPromise.then((apiResponse) => {\n            console.log('apiResponse in questions: ', apiResponse);\n\n\n\n            for (let i = 0; i < apiResponse.length; i++) {\n                questionsTemp.push({\n                    questionID: apiResponse[i].questionID,\n                    questionLabel: apiResponse[i].questionText,\n                    ///newly\n                    questionLevel: apiResponse[i].questionLevel,\n                });\n            }\n            console.log(\"hi 223\", questionsTemp)\n            //this.setState({ mainSkillOptions: mainSkillOptionsTemp });\n            //this.setState({ subSkillOptions: subSkillOptionsTmp });\n            const questionsData = questionsTemp.map((question) => {\n                return {\n                    ...question,\n                    key: question.questionID,\n                }\n            });\n            // console.log(\"display quesrtion data\")\n            console.log('Question Data is====', questionsData)\n            this.setState({ questionsData });\n        })\n\n        //byme\n\n\n    }\n\n    editQuestion = (data) => {\n        console.log(\"null data\", data)\n        this.setState({\n            addEditModalStatus: 'edit',\n            addEditingQuestionData: data\n        });\n    }\n\n    deleteQuestion = (questionID) => {\n        //  ToDo: api call to delete the questionId question\n        ////\n        //http://localhost:8080/manageQuestion/deleteQuestion?questionID=17\n        console.log('Inside delete question function: ', questionID);\n        console.log(`delete API http://localhost:8080/manageQuestion/deleteQuestion?questionID=${questionID}`)\n        const apiCallPromise = axios.delete(`/manageQuestion/deleteQuestion?questionID=${questionID}`, { data: this.deleteQuestion, headers: { 'Authorization': 'Bearer ' + localStorage.getItem('jwtToken') } })\n            .then(response => {\n\n                console.log(response)\n\n                if (response.status === 200) {\n                    if (response.data.status === \"error\") {\n                        message.error(response.data.message);\n                    } else if (response.data.status === \"success\") {\n                        if (response.data.message !== \"\") {\n                            message.success(response.data.message);\n                        }\n                    }\n                    // message.success('Question deleted successfully');\n                    //this.state.dataSource = response.data.data;\n                    // return response.data.data;\n                } else {\n                    console.log('error');\n                }\n            })\n            .catch(function (error) {\n                console.log(error.response);\n                if (error.response.status === 403) {\n                    message.error(\"You were logged out!\");\n                } else {\n                    message.error(\"Unable to contact server\");\n                }\n            });\n        apiCallPromise.then((response) => {\n            // message.success(\"Question deleted successfully\");\n            this.updateListingData();\n        })\n        ///me\n\n        console.log('delete question : ', questionID);\n        this.getQuestions();\n    }\n\n    cancelAddEdit = () => {\n        this.setState({\n            addEditModalStatus: '',\n            addEditingQuestionData: null\n        });\n    }\n\n    updateListingData = () => {\n        this.getQuestions();\n        this.cancelAddEdit();\n    }\n\n    createNewQuestion = () => {\n        this.setState({ addEditModalStatus: 'add' });\n    }\n    addNewMainSkill = () => {\n        console.log('addItem');\n        const { mainSkillOptions, newMainSkillValue } = this.state;\n        console.log(mainSkillOptions, newMainSkillValue);\n        axios.post(`/manageQuestion/addMainSkill?mainSkillArea=${newMainSkillValue}`, {}, { headers: { 'Authorization': 'Bearer ' + localStorage.getItem('jwtToken') } })\n            .then(response => {\n                console.log(\"suceess added db\")\n                message.success(response.data.message);\n                if (response.data.status === 'success') {\n                    this.setState({\n                        mainSkillOptions: [...mainSkillOptions, {\n                            id: newMainSkillValue,\n                            label: newMainSkillValue\n                        }],\n                        newMainSkillValue: '',\n                    });\n                }\n\n            })\n            .catch(error => {\n                message.success(\"main skill api  error\");\n            })\n        this.setState({\n            mainSkillOptions: [...mainSkillOptions, {\n                id: newMainSkillValue,\n                label: newMainSkillValue\n            }],\n            newMainSkillValue: '',\n        });\n\n\n    };\n    addNewSubSkill = () => {\n        console.log('addItem');\n        const { subSkillOptions, newSubSkillValue, mainSkillValue } = this.state;\n        axios.post(`/manageQuestion/addSubSkill?mainSkillArea=${mainSkillValue}&subSkillArea=${newSubSkillValue}`, {}, { headers: { 'Authorization': 'Bearer ' + localStorage.getItem('jwtToken') } })\n            .then(response => {\n                console.log(response)\n                message.success(response.data.message);\n                if (response.data.status === 'success') {\n                    this.setState({\n                        subSkillOptions: [...subSkillOptions, {\n                            id: newSubSkillValue,\n                            label: newSubSkillValue\n                        }],\n                        newSubSkillValue: '',\n                    });\n                }\n\n            })\n            .catch(error => {\n                console.log(error)\n                message.success(\"Subskill  error\");\n            })\n\n        console.log(subSkillOptions, newSubSkillValue);\n\n    };\n\n    render() {\n        const {\n            mainSkillOptions,\n            mainSkillValue,\n            subSkillOptions,\n            subSkillValue,\n            questionsData,\n            addEditModalStatus,\n            addEditingQuestionData,\n            questionFilterValue,\n            newMainSkillValue,\n            newSubSkillValue\n        } = this.state;\n\n        const questionsColumns = [\n            {\n                title: 'Question',\n                dataIndex: 'questionLabel',\n                key: 'questionLabel',\n            },\n            // newly\n            {\n                title: 'Question Level',\n                dataIndex: 'questionLevel',\n                key: 'questionLevel',\n            },\n            //newly\n            {\n                title: 'Action',\n                dataIndex: 'questionID',\n                key: 'questionID',\n                render: (questionID, questionData) => {\n                    return (\n                        <ActionContainer>\n                            <IconContainer>\n                                <Popconfirm\n                                    title={'Are you sure ?'}\n                                    onConfirm={() => this.deleteQuestion(questionID)}\n                                    okText=\"Yes\"\n                                    cancelText=\"No\"\n                                >\n                                    <Icon type={'delete'} />\n                                </Popconfirm>\n                            </IconContainer>\n                            <IconContainer>\n                                <Icon type={'edit'} onClick={() => this.editQuestion(questionData)} />\n                            </IconContainer>\n                        </ActionContainer>\n                    );\n                }\n            },\n        ];\n\n        // questionsData\n\n\n\n        let updatedQuestionsData = questionsData;\n        // update\n        //console.log('Question Data  --->>>>>>>>>', updatedQuestionsData)\n        if (questionFilterValue && questionFilterValue.length) {\n            updatedQuestionsData = filterArray(questionsData, questionFilterValue, ['questionLabel']);\n        }\n\n        return (\n            <div>\n                <QuestionHeaderContainer>\n                    <SkillSelectionContainer>\n                        <SelectDropDownComponentWrapper\n                            options={mainSkillOptions || []}\n                            value={mainSkillValue}\n                            showSearch\n                            allowClear\n                            showArrow\n                            onChangeHandler={(value) => this.changeFilter(value, 'mainSkillValue')}\n\n                            onSearch={(e) => {\n                                this.setState({ newMainSkillValue: e });\n                            }}\n                            placeholder=\"Select Main Skill\"\n                            dropdownRender={menu => (\n                                <div>\n                                    {menu}\n                                    <Divider style={{ margin: '4px 0' }} />\n                                    <div\n                                        onMouseDown={e => e.preventDefault()}\n                                        style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                                        <Input style={{ flex: 'auto' }} value={newMainSkillValue}\n                                            onChange={(e) => {\n                                                alert(\"enter\")\n                                                this.setState({ newMainSkillValue: e.target.value });\n                                            }}\n                                        />\n                                        <a\n                                            style={{ flex: 'none', padding: '8px', display: 'block', cursor: 'pointer' }}\n                                            onClick={this.addNewMainSkill}\n                                        >\n                                            <PlusOutlined /> Add MainSkill\n                                    </a>\n                                    </div>\n                                </div>\n                            )}\n\n                        />\n\n\n                        <SelectDropDownComponentWrapper\n                            options={subSkillOptions || []}\n                            value={subSkillValue}\n                            showSearch\n                            allowClear\n                            showArrow\n                            onChangeHandler={(value) => this.changeFilter(value, 'subSkillValue')}\n                            placeholder=\"Select Sub Skill\"\n                            onSearch={(e) => {\n                                this.setState({ newSubSkillValue: e });\n                            }}\n                            dropdownRender={menu => (\n                                <div>\n                                    {menu}\n                                    <Divider style={{ margin: '4px 0' }} />\n                                    <div\n                                        onMouseDown={e => e.preventDefault()}\n                                        style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                                        <Input style={{ flex: 'auto' }} value={newSubSkillValue}\n                                            onChange={(e) => {\n                                                alert(\"enter\")\n                                                this.setState({ newSubSkillValue: e.target.value });\n                                            }}\n                                        />\n                                        <a\n                                            style={{ flex: 'none', padding: '8px', display: 'block', cursor: 'pointer' }}\n                                            onClick={this.addNewSubSkill}\n                                        >\n                                            <PlusOutlined /> Add SubSkill\n                                    </a>\n                                    </div>\n                                </div>\n                            )}\n                        />\n                    </SkillSelectionContainer>\n                </QuestionHeaderContainer>\n                {(mainSkillValue && subSkillValue) ? (\n                    <>\n                        <TableHeaderContainer>\n                            <InputField\n                                value={questionFilterValue}\n                                onChange={(event) => this.changeFilter(event.target.value, 'questionFilterValue')}\n                                placeholder=\"Filter question\"\n                            />\n                            <Button onClick={this.createNewQuestion}>\n                                Create New Question\n                            </Button>\n                        </TableHeaderContainer>\n                        <FieldContainer>\n                            <Table\n                                dataSource={updatedQuestionsData}\n                                columns={questionsColumns}\n                                pagination={false}  //  Remove this line if you need pagination in questions\n                            />\n                        </FieldContainer>\n                    </>\n                ) : null}\n                {addEditModalStatus && addEditModalStatus.length ? (\n                    <ManageQuestionAddEditModal\n                        addEditModalStatus={addEditModalStatus}\n                        addEditingQuestionData={addEditingQuestionData}\n                        cancelAddEdit={this.cancelAddEdit}\n                        updateListingData={this.updateListingData}\n                        mainSkillValue={mainSkillValue}\n                        mainSkillOptions={mainSkillOptions}\n                        subSkillValue={subSkillValue}\n                        subSkillOptions={subSkillOptions}\n                    />\n                ) : null}\n            </div>\n        )\n    }\n}\n\n\nexport default ManageQuestions;","import styled from 'styled-components';\nimport { Input, Icon , Modal } from 'antd';\n\nexport const InputFilterContainer = styled.div`\n    margin-bottom: 15px;\n    display: flex;\n    justify-content: space-between;\n`;\n    \nexport const InputField = styled(Input)`\n    max-width: 350px;\n`;\n\nexport const FieldContainer = styled.div`\n    margin: 15px 0;\n`;\n\nexport const IconContainer = styled.div`\n    padding: 5px 10px;\n`;\n\nexport const ActionContainer = styled.div`\n    display: flex;\n`;\n\n","import Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useEffect } from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 'auto',\n  },\n  cardHeader: {\n    padding: theme.spacing(1, 2),\n  },\n  list: {\n    width: 350,\n    height: 350,\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5, 0),\n    fontSize: 14,\n    height: 32,\n    fontWeight: 400,\n    whiteSpace: \"nowrap\",\n    color: 'rgba(0, 0, 0, 0.65)',\n    textTransform: \"none\"\n  },\n  button1: {\n    margin: theme.spacing(0.5, 0),\n    fontSize: 14,\n    height: 32,\n    fontWeight: 400,\n    whiteSpace: \"nowrap\",\n    marginRight: 20,\n    marginLeft: 90,\n    color: 'rgba(0, 0, 0, 0.65)',\n    textTransform: \"none\"\n  },\n}));\n\nfunction not(a, b) {\n  return a.filter((aVal) => !b.find((bVal) => bVal.key === aVal.key));\n}\n\nfunction intersection(a, b) {\n  return a.filter((aVal) => b.find((bVal) => bVal.key === aVal.key));\n}\n\nfunction union(a, b) {\n  return [...a, ...not(b, a)];\n}\n\nexport default function TransferList({ defaultList, defaultSelectedList, onSelectListChange }) {\n  const classes = useStyles();\n  const [leftChecked, setLeftChecked] = React.useState([]);\n  const [rightChecked, setRightChecked] = React.useState([]);\n  const [left, setLeft] = React.useState(defaultList || []);\n  const [right, setRight] = React.useState(defaultSelectedList || []);\n\n  useEffect(() => {\n    setLeft(defaultList);\n  }, [defaultList]);\n\n  // useEffect(() => {\n  //    setRight(selectedList);\n  // }, [selectedList]);\n\n\n\n  const handleToggle = (value, context) => () => {\n    if (context === 'left') {\n      const currentIndex = leftChecked.findIndex(cVal => cVal.key === value.key);\n      const newChecked = [...leftChecked];\n\n      if (currentIndex === -1) {\n        newChecked.push(value);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n\n      setLeftChecked(newChecked);\n    } else {\n      const currentIndex = rightChecked.findIndex(cVal => cVal.key === value.key);\n      const newChecked = [...rightChecked];\n\n      if (currentIndex === -1) {\n        newChecked.push(value);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n\n      setRightChecked(newChecked);\n    }\n\n  };\n\n  //  const numberOfChecked = (items) => intersection(checked, items).length;\n\n\n  const moveAll = () => {\n    const rem = not(left, right);\n    const rightList = [...new Set(right.concat(rem))];\n    setRight(rightList);\n    // setRight(right.concat(leftChecked));\n    // setLeft(not(left, []));\n    setLeftChecked([]);\n    onSelectListChange && onSelectListChange(rightList);\n  }\n\n  const deletAll = () => {\n    const rightList = [...new Set(right.concat(left))];\n    setRight([]);\n    // setRight(right.concat(leftChecked));\n    // setLeft(not(left, []));\n    setRightChecked([]);\n    onSelectListChange && onSelectListChange([]);\n  }\n\n  const handleCheckedRight = () => {\n    // elemnets present in checked only bt not in rightlist A-B operation\n    const rem = not(leftChecked, right);\n    console.log(\"rem\", rem, \"right\", right)\n    const rightList = [...new Set(right.concat(rem))];\n    setRight(rightList);\n    // setRight(right.concat(leftChecked));\n    setLeft(not(left, []));\n    setLeftChecked([]);\n    onSelectListChange && onSelectListChange(rightList);\n  };\n\n  const handleCheckedLeft = () => {\n    setLeft(left)\n    // setLeft(left.concat(rightChecked));\n    const rightList = not(right, rightChecked);\n    setRight(rightList);\n    setRightChecked([]);\n    onSelectListChange && onSelectListChange(rightList);\n  };\n\n  const customList = (context, items, extra) => (\n    <Card>\n      {/* <CardHeader\n        className={classes.cardHeader}\n        avatar={\n          <Checkbox\n            onClick={handleToggleAll(items)}\n            checked={numberOfChecked(items) === items.length && items.length !== 0}\n            indeterminate={numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0}\n            disabled={items.length === 0}\n            inputProps={{ 'aria-label': 'all items selected' }}\n          />\n        }\n        title={title}\n        subheader={`${numberOfChecked(items)}/${items.length} selected`}\n      /> */}\n\n      <List className={classes.list} dense component=\"div\" role=\"list\">\n        {items.map((value) => {\n          const labelId = `transfer-list-all-item-${value.key}-label`;\n\n          return (\n\n            <ListItem key={value.key} role=\"listitem\" button onClick={handleToggle(value, context)}>\n              <ListItemIcon>\n\n                <Checkbox\n                  checked={!!(context === 'left' ? leftChecked : rightChecked).find(cVal => cVal.key === value.key)}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ 'aria-labelledby': labelId }}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={`${value.title}`} />\n            </ListItem>\n          );\n        })}\n        <ListItem />\n      </List>\n      <Divider />\n      {extra}\n    </Card>\n  );\n\n  return (\n    <Grid container spacing={2} justify=\"center\" alignItems=\"center\" className={classes.root}>\n      <Grid item>{customList('left', left, <> <Button\n        variant=\"outlined\"\n        size=\"small\"\n        className={classes.button, classes.button1}\n        onClick={handleCheckedRight}\n        // disabled={leftChecked.length === 0}\n        aria-label=\"move selected right\"\n      >\n        Add\n          </Button>\n        <Button\n          variant=\"outlined\"\n          size=\"small\"\n          className={classes.button}\n          onClick={moveAll}\n          // disabled={leftChecked.length === 0}\n          aria-label=\"move selected right\"\n          style={{ marginRight: 30 }}\n        >\n          Add all\n          </Button>\n      </>)}</Grid>\n\n      <Grid item>{customList('right', right, <> <Button\n        variant=\"outlined\"\n        size=\"small\"\n        className={classes.button, classes.button1}\n        onClick={handleCheckedLeft}\n        // disabled={rightChecked.length === 0}\n        aria-label=\"move selected left\"\n      >\n        Delete\n          </Button>\n        <Button\n          variant=\"outlined\"\n          size=\"small\"\n          className={classes.button}\n          onClick={deletAll}\n          // disabled={rightChecked.length === 0}\n          aria-label=\"move selected left\"\n        >\n          Delete all\n          </Button>\n      </>)}</Grid>\n    </Grid>\n  );\n}\n","/**\n *\n *  ManageTemplatesCreateEdit\n *\n */\n\n\nimport { Button, Input, message, Modal, Select } from 'antd';\nimport axios from 'axios';\nimport React from 'react';\nimport './manageTemplate.css';\nimport {ACCESS_TOKEN_NAME} from \"../../constants/apiConstants\";\nimport {\n    FieldContainer\n} from './ManageTemplates.styled';\nimport Transfer from './transferque';\n\nconst ApiUtils = {\n    MAIN_SKILLS: '/manageQuestion/getMainSkills',\n    SUB_SKILLS: '/manageQuestion/getSubSkills',\n    QUESTIONS: '/manageQuestion/bySkill',\n    USERS: `/manageStudents/getCoaches/?orgID=${localStorage.getItem('orgID')}`,\n    SET_TEMPLATE: 'manageTemplate/',\n    UPDATE_TEMPLATE: '/manageTemplate/',\n\n}\nconst DataUtils = {\n    getMainSkills: async () => {\n        return await axios.get(ApiUtils.MAIN_SKILLS, { headers: { 'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME) } });\n    },\n    getSubSkills: async (mainSkill) => {\n        return await axios.get(ApiUtils.SUB_SKILLS, {\n            params: { mainSkillArea: mainSkill, },\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME) }\n        });\n    },\n    getQuestions: async (mainSkill, subSkill) => {\n        return await axios.get(ApiUtils.QUESTIONS, {\n            params: { mainSkillArea: mainSkill, subSkillArea: subSkill },\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME) }\n        }\n        );\n    },\n    getAllUsers: async () => {\n        return await axios.get('/manageStudents/getCoaches/?orgID='+localStorage.getItem('orgID'), { headers: { 'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME) } });\n    },\n    setTemplate: async (payload) => {\n        return await axios.post(ApiUtils.SET_TEMPLATE, payload, { headers: { 'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME) } })\n    },\n    updateTemplate: async (payload) => {\n        return await axios.put(ApiUtils.UPDATE_TEMPLATE, payload, { headers: { 'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN_NAME) } })\n    }\n};\n\nclass ManageTemplatesAddEdit extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n    constructor(props) {\n        super(props);\n        this.state = {\n            templateName: props.templateName || '',\n\n            selectedMainSkillArea: '',\n            mainSkillList: [],\n\n            selectedSubSkillArea: '',\n            subSkillList: [],\n\n            selectedQuestionList: (props.questionsList || []).map(ob => ({ key: ob.questionID, title: ob.questionText })),\n            questionsList: [],\n\n\n            //asigned by users\n            assignedList: (props.assignedTo || []).map(ob => ob.userID),\n            // all users to populate dropdown\n            masterUserList: [],\n        }\n    }\n\n    componentDidMount() {\n\n        DataUtils.getMainSkills().then((response) => {\n            if (!(response.data && response.data.data)) throw new Error('data not found in response');\n            this.setState({ mainSkillList: response.data.data });\n        }).catch((e) => {\n            alert('error did mount');\n        });\n\n        DataUtils.getAllUsers().then((response) => {\n            if (!(response.data && response.data.data)) throw new Error('data not found in response');\n            this.setState({ masterUserList: response.data.data });\n        }).catch((e) => {\n            alert('error all select');\n        });\n        const { addEditingTemplateData } = this.props;\n        if (addEditingTemplateData) {\n            this.setState({\n                ...addEditingTemplateData,\n                templateName: addEditingTemplateData.templateName,\n                selectedQuestionList: (addEditingTemplateData.questionsList || []).map(ob => ({ key: ob.questionID, title: ob.questionText })),\n                assignedList: (addEditingTemplateData.assignedTo || []).map(ob => ob.userID),\n                questionsList: []\n            });\n        }\n    }\n\n    handelMainSkillChange = (value) => {\n        DataUtils.getSubSkills(value).then((response) => {\n            if (!(response.data && response.data.data)) throw new Error('data not found in response');\n            this.setState({ subSkillList: response.data.data, selectedMainSkillArea: value });\n            this.setState({ selectedSubSkillArea: null, questionsList: [] });\n        }).catch((e) => {\n            alert('error  main skill handle change');\n        })\n        //  remove this.setState({ selectedMainSkillArea: value });\n    }\n\n    handelSubSkillChange = (value) => {\n        DataUtils.getQuestions(this.state.selectedMainSkillArea, value).then((response) => {\n            if (!(response.data && response.data.data)) throw new Error('data not found in response');\n            this.setState({ questionsList: response.data.data, selectedSubSkillArea: value });\n        }).catch((e) => {\n            alert('error subskill');\n        })\n        //  this.setState({ selectedMainSkillArea: value });\n    }\n\n\n\n\n    cancelAddEdit = () => {\n        this.setState({\n            addEditModalStatus: '',\n            addEditingTemplateData: null\n        });\n    }\n\n\n\n    submit = () => {\n\n        // {studentID: 1, studentReferenceNumber: 123, studentName: \"sid1\", studentContactNo: \"123\", orgID: 1, …}\n        const { templateName, assignedList, selectedQuestionList } = this.state;\n        const { onSave } = this.props;\n        let obj = this.props.templateID ? { templateID: this.props.templateID } : {};\n\n        if (this.props.addEditModalStatus === 'add') {\n            DataUtils.setTemplate({\n\n                \"templateName\": templateName,\n                \"createdBY\": {\n                    \"userID\": localStorage.getItem('userID')\n                },\n                \"assignedTo\": assignedList.map((id) => ({\n                    userID: id\n                })),\n                \"questionsList\": selectedQuestionList.map((question) => ({\n                    questionID: question.key\n                }))\n            }).then((response) => {\n                message.success(\"Template successfully added\");\n                this.props.updateListingData();\n            }).catch((e) => {\n                alert('error while saving');\n            })\n\n        } else {\n            console.log(\"inside update\")\n            console.log(\"templateID  is\", this.props.addEditingTemplateData.templateID)\n            const payload = {\n                \"templateID\": this.props.addEditingTemplateData.templateID,\n                \"templateName\": templateName,\n                \"createdBY\": {\n                    \"userID\": localStorage.getItem('userID')\n                },\n                \"assignedTo\": assignedList.map((id) => ({\n                    userID: id\n                })),\n                \"questionsList\": selectedQuestionList.map((question) => ({\n                    questionID: question.key\n                }))\n            }\n            console.log(\"payload is\", payload)\n            DataUtils.updateTemplate(payload).then((response) => {\n                message.success(\"Template successfully updated\");\n                this.props.updateListingData();\n            }).catch((e) => {\n                alert('error while update');\n            })\n        }\n\n        //this.updateListingData()\n\n    }\n\n    render() {\n\n        const { questionsList, mainSkillList, assignedList, masterUserList, selectedMainSkillArea,\n            selectedSubSkillArea,\n            selectedQuestionList, subSkillList, templateName } = this.state;\n        const { cancelAddEdit, addEditModalStatus } = this.props;\n\n        return (\n            <Modal\n                title={addEditModalStatus === 'edit' ? 'Edit Template' : 'Create Template'}\n                visible={addEditModalStatus.length}\n                onOk={addEditModalStatus === 'edit' ? this.editTemplateData : this.createNewTemplate}\n                onCancel={cancelAddEdit}\n                footer={[\n                    <Button key=\"back\" onClick={cancelAddEdit}>\n                        Cancel\n                    </Button>,\n                    <Button key=\"submit\" type=\"primary\" onClick={this.submit}>\n                        {addEditModalStatus === 'edit' ? 'Update' : 'Create'}\n                    </Button>,\n                ]}\n            >\n\n                <FieldContainer style={{\n                    width: 700,\n                }}>  <p style={{ color: 'rgba(0, 0, 0, 0.65)' }}>Template Name</p>\n                    <Input value={templateName} placeholder='Enter Template Name' onChange={(e) => {\n                        this.setState({ templateName: e.target.value });\n                    }} />\n                </FieldContainer>\n                <FieldContainer style={{ display: \"flex\" }}>\n                    <div><p style={{ color: 'rgba(0, 0, 0, 0.65)' }}>Main-skill Area</p>\n                        <Select defaultValue=\"\" value={selectedMainSkillArea} style={{ width: 400 }} onChange={this.handelMainSkillChange}>\n                            <option value='' hidden>Select main-skill area</option>\n                            {mainSkillList.map((skill, skillIndex) => {\n                                return <Select.Option key={skillIndex} value={skill}>{skill}</Select.Option>\n                            })}\n                        </Select>\n                    </div>\n                    <div>\n                        <p style={{ color: 'rgba(0, 0, 0, 0.65)' }}> Sub-skill Area</p>\n                        <Select defaultValue=\"\" value={selectedSubSkillArea} style={{ width: 400 }} onChange={this.handelSubSkillChange}>\n                            <option value='' hidden>Select sub-skill area</option>\n                            {subSkillList.map((skill, skillIndex) => {\n                                return <Select.Option key={skillIndex} value={skill}>{skill}</Select.Option>\n                            })}\n                        </Select>\n                    </div>\n                </FieldContainer>\n                <p style={{ color: 'rgba(0, 0, 0, 0.65)' }}>&nbsp;&nbsp;&nbsp;&nbsp;Select Questions&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Selected Questions</p>\n                <Transfer\n                    // this gets updated everytime it changes\n                    defaultList={questionsList.map((question) => {\n                        return {\n                            key: question.questionID,\n                            title: question.questionText\n                        }\n                    })}\n                    //this wont get updated on change, acts like initial value\n                    defaultSelectedList={selectedQuestionList}\n                    //this is always the left side of tranfer list callback\n                    onSelectListChange={(value) => this.setState({ selectedQuestionList: value })} />\n\n                <FieldContainer style={{\n                    width: 700,\n                }}>\n                    <p style={{ color: 'rgba(0, 0, 0, 0.65)' }}>Assigned Coaches</p>\n\n                    <Select mode='multiple' value={assignedList} placeholder=\"Select coaches\" style={{ width: 400 }} onChange={(value) => {\n                        this.setState({ assignedList: value });\n                    }}>\n                        {masterUserList.map((user, userIndex) => {\n                            return <Select.Option key={userIndex} value={user.userID}>{user.userName}</Select.Option>\n                        })}\n                    </Select>\n                </FieldContainer>\n\n            </Modal >\n        )\n    }\n}\n\n\nexport default ManageTemplatesAddEdit;\n","/**\n *\n * ManageTemplates \n *\n */\n\nimport { Button, Icon, message, Popconfirm, Table, Tooltip } from 'antd';\nimport axios from 'axios';\nimport React from 'react';\nimport {\n    filterArray\n} from '../../utils/utilityFunctions';\nimport './manageTemplate.css';\nimport {\n    ActionContainer, IconContainer, InputField, InputFilterContainer\n} from './ManageTemplates.styled';\nimport ManageTemplatesCreateEditModal from './ManageTemplatesCreateEditModal';\n\n\n\nconst MAX_CHAR_TO_ELIPSE = 10;\n\nclass ManageTemplates extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n    constructor(props) {\n        super(props);\n        this.state = {\n            filterValue: '',\n            dataSource: [],\n            addEditModalStatus: '',\n            addEditingTemplateData: null,\n            deleteData: null,\n\n        }\n    }\n\n    componentDidMount() {\n        this.getTemplateListApiCAllFunction();\n    }\n\n    getTemplateListApiCAllFunction = () => {\n        //  ToDo: api call for the list of templates data and save the data in this.state.dataSource\n\n        console.log(\"inside getTemplateApi Call function 2\")\n        // http://localhost:8080/manageTemplate\n        const apiCallPromise = axios.get(\"/manageTemplate\", { headers: { 'Authorization': 'Bearer ' + localStorage.getItem('jwtToken') } })\n            .then(function (response) {\n                console.log(response)\n                console.log(response.status)\n                console.log(\"response\", response.data)\n                //console.log(this.state.dataSource)\n                console.log(\"pran\")\n                if (response.status === 200) {\n                    //this.setState({ dataSource: response.data.data });\n                    //this.state.dataSource = response.data.data;\n                    return response.data;\n                } else {\n                    console.log('error');\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n        // using .then, create a new apiCallPromise which extracts the data\n        apiCallPromise.then((response) => {\n\n            console.log('response.data.data : ', response);\n            // [{name: 'a', b: 'b'}, {name: 'c', d: 'd'}]\n\n            this.setState({ dataSource: response });\n        })\n\n    }\n\n    changeFilter = (event) => {\n        this.setState({ filterValue: event.target.value });\n    }\n\n    editTemplatetData = (data) => {\n        // alert(data.templateName)\n        this.setState({\n            addEditModalStatus: 'edit',\n            addEditingTemplateData: data,\n\n        });\n    }\n\n    createNewTemplate = () => {\n        this.setState({ addEditModalStatus: 'add' });\n    }\n    cancelAddEdit = () => {\n        this.setState({\n            addEditModalStatus: '',\n            addEditingTemplateData: null\n        });\n    }\n\n\n    deleteTemplate = (data) => {\n        //  ToDo: delete api call\n        console.log(\"delete\" + data)\n        this.setState({\n            addEditModalStatus: '',\n            deleteData: data\n        });\n        console.log(this.state.deleteData)\n        console.log(data)\n        //?email_id=\"+payload.email\n        const apiCallPromise = axios.delete(\"manageTemplate/\" + data, { headers: { 'Authorization': 'Bearer ' + localStorage.getItem('jwtToken') } })\n            .then(function (response) {\n                console.log(\"inside delete function\")\n                console.log(response)\n                console.log(response.status)\n                console.log(response.data.data)\n                //console.log(this.state.dataSource)\n                console.log(\"akash\")\n                if (response.status === 200) {\n                    //this.setState({ dataSource: response.data.data });\n                    //this.state.dataSource = response.data.data;\n                    return response.data.data;\n                } else {\n                    console.log('error');\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n        apiCallPromise.then((response) => {\n            message.success(\"Template successfully deleted\");\n            this.getTemplateListApiCAllFunction();\n        })\n\n\n    }\n\n    updateListingData = () => {\n        console.log(\"inside the index page\");\n        this.getTemplateListApiCAllFunction();\n        this.cancelAddEdit();\n    }\n\n    render() {\n\n        const manageTemplatesColumns = [\n            {\n                title: 'Template Name',\n                dataIndex: 'templateName',\n                key: 'templateName',\n            },\n            {\n                title: 'Created By',\n                dataIndex: 'createdBY.userName',\n                key: 'createdBY',\n            },\n            {\n                title: 'Assigned To',\n                dataIndex: 'assignedTo',\n                key: 'assignedTo',\n                render: (assignedTo) => {\n                    const fullText = assignedTo.map(ob => ob.userName).toString();\n                    return <Tooltip placement='bottomLeft' title={<div>{assignedTo.map(ob => {\n                        return <React.Fragment>{ob.userName} <br /></React.Fragment>\n                    })}</div>}>\n                        <span style={{ cursor: 'default' }}>{fullText.substr(0, MAX_CHAR_TO_ELIPSE) + '...'}</span>\n                    </Tooltip>\n                }\n            },\n            {\n                title: 'Total Questions',\n                dataIndex: 'questionsList.length',\n                key: 'questionsList.length',\n            },\n\n            {\n                title: 'Actions',\n                dataIndex: 'templateID',\n                key: 'templateID',\n                render: (templateID, templateData) => {\n                    return (\n                        <ActionContainer>\n                            <IconContainer>\n                                <Popconfirm\n                                    title={'Are you sure you want to delete template ?'}\n                                    onConfirm={() => this.deleteTemplate(templateID)}\n                                    okText=\"Yes\"\n                                    cancelText=\"No\"\n                                >\n                                    <Icon type={'delete'} />\n                                </Popconfirm>\n                            </IconContainer>\n                            <IconContainer>\n                                <Icon type={'edit'} onClick={() => this.editTemplatetData(templateData)} />\n                            </IconContainer>\n                        </ActionContainer>\n                    );\n                }\n            },\n        ];\n\n        const { filterValue, dataSource, addEditModalStatus = '', addEditingTemplateData } = this.state;\n\n        let filteredDataSource = dataSource;\n\n        if (filterValue && filterValue.length) {\n            filteredDataSource = filterArray(dataSource, filterValue, ['templateName', 'createdBY.userName']);\n        }\n\n        return (\n            <div>\n                <InputFilterContainer>\n                    <InputField\n                        onChange={this.changeFilter}\n                        value={filterValue}\n                        placeholder=\"Enter Filter\"\n                    />\n                    <Button\n                        type=\"primary\"\n                        onClick={this.createNewTemplate}\n                    >\n                        Create Template\n                    </Button>\n                </InputFilterContainer>\n                <Table\n                    dataSource={filteredDataSource}\n                    columns={manageTemplatesColumns}\n                />\n                {addEditModalStatus && addEditModalStatus.length ? (\n                    <ManageTemplatesCreateEditModal\n                        addEditModalStatus={addEditModalStatus}\n                        addEditingTemplateData={addEditingTemplateData}\n                        cancelAddEdit={this.cancelAddEdit}\n                        updateListingData={this.updateListingData}\n                    />\n                ) : null}\n\n\n\n\n            </div>\n        )\n    }\n}\n\n\nexport default ManageTemplates;","/**\n *\n * AppLayout\n *\n */\n\nimport React from 'react';\nimport { Route, Switch, Link, Redirect } from 'react-router-dom';\nimport { Layout, Menu, Icon , Dropdown, Button} from 'antd';\n\nimport {\n    AppLayoutContainer,\n} from './AppLayout.styled';\n\nimport Landing from '../Landing/Landing';\nimport Account from '../Account/Account';\nimport ManageOrg from '../ManageOrg';\nimport ManageUser from '../ManageUser/ListUsers';\nimport ManageStudents from '../ManageStudents';\nimport Assessment from '../Assessment';\nimport ManageQuestions from '../ManageQuestions';\nimport ManageTemplates from '../ManageTemplates';\n\nimport {\n    AppLayoutSider,\n    PageContainer,\n} from './AppLayout.styled';\n\nimport { DownOutlined } from '@ant-design/icons';\nimport { ACCESS_TOKEN_NAME } from '../../constants/apiConstants';\n\n\nconst { Header, Content, Footer, Sider } = Layout;\nclass AppLayout extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSliderCollapsed: false,\n        }\n    }\n\n\n    handleSignoutClick = () => {\n        console.log(\"sign out clicked\");\n        localStorage.clear();\n        this.props.history.push(`/login`);\n    }\n\n    handleAccountClick = () => {\n        console.log(\"account click\");\n        this.props.history.push(`/account`);\n    }\n\n    handleCollapse = () => {\n        this.setState({ isSliderCollapsed: !this.state.isSliderCollapsed });\n    }\n\n    render() {\n\n\n        const userType = localStorage.getItem('roleName');\n        //const userType = 'superAdmin';\n        const routes = [\n            {\n                path: '/dashboard',\n                name: 'Dashboard',\n                icon: 'dashboard',\n                component: Landing,\n                validUsers: ['ceo', 'superadmin', 'admin', 'coach']\n            },\n            // {\n            //     path: '/account',\n            //     name: 'Profile',\n            //     icon: 'user',\n            //     component: Account,\n            //     validUsers: ['ceo', 'superadmin', 'admin', 'coach']\n            // },\n            {\n                path: '/manageUser',\n                name: 'Manage Users',\n                icon: 'team',\n                component: ManageUser,\n                validUsers: ['ceo', 'superadmin', 'admin']\n            },\n            {\n                path: '/manageOrganizations',\n                name: 'Manage Organizations',\n                icon: 'global',\n                component: ManageOrg,\n                validUsers: ['ceo', 'superadmin']\n            },\n            {\n                path: '/manageTemplates',\n                name: 'Manage Templates',\n                icon: 'book',\n                component: ManageTemplates,\n                validUsers: ['ceo', 'superadmin', 'admin','coach']\n            }, {\n                path: '/manageStudents',\n                name: 'Manage Students',\n                icon: 'user',\n                component: ManageStudents,\n                validUsers: ['ceo', 'superadmin', 'admin', 'coach']\n            }, {\n                path: '/assessment',\n                name: 'Manage Assessment',\n                icon: 'book',\n                component: Assessment,\n                validUsers: ['ceo', 'superadmin', 'admin', 'coach'],\n                hasChildren: true,\n            }, {\n                path: '/manageQuestions',\n                name: 'Manage Questions',\n                icon: 'question-circle',\n                component: ManageQuestions,\n                validUsers: ['ceo', 'superadmin', 'admin', 'coach'],\n            }\n        ];\n\n        const filteredRoutes = routes.filter((routeData) => routeData.validUsers.indexOf(userType) >= 0);\n\n        const splitArray = this.props.location.pathname.split('/');\n\n        let displayUrl = splitArray[splitArray.length - 1];\n\n        displayUrl = displayUrl.replace(/([A-Z])/g, (x, y) => \" \" + y.toUpperCase()).replace(/\\s/, \" \").trim();\n        displayUrl = displayUrl.charAt(0).toUpperCase() + displayUrl.slice(1);\n\n        const NotFoundPage = props => {\n\n            return (\n                <div>\n                    page nor found\n                </div>\n            );\n        };\n\n        const menu = (\n            <Menu>\n              <Menu.Item>\n                <a target=\"_blank\" rel=\"noopener noreferrer\" onClick={this.handleAccountClick} >\n                  Profile\n                </a>\n              </Menu.Item>\n              <Menu.Item>\n                <a target=\"_blank\" rel=\"noopener noreferrer\" onClick={this.handleSignoutClick} >\n                  Sign out\n                </a>\n              </Menu.Item>\n\n            </Menu>\n          );\n\n        return (\n            <AppLayoutContainer>\n                <AppLayoutSider\n                    breakpoint=\"sm\"\n                    collapsible\n                    collapsed={this.state.isSliderCollapsed}\n                    onCollapse={this.handleCollapse}\n                    width='230px'\n                >\n                    <Header style={{ padding: '0', height: '55px', color: 'white' }}>\n                        {/* we can have img here */}\n                        <div>\n                            ISA\n                        </div>\n                    </Header>\n                    <Menu\n                        theme=\"dark\"\n                        mode=\"inline\"\n                        // selectedKeys={currentPath.match(/\\//g).length === 1 ? [getRoute('dashboard').url] : [this.getKey(currentPath, '/', 3)]}\n                        // defaultOpenKeys={['/app']}\n                    >\n                        {filteredRoutes.map((route) => (\n                            <Menu.Item key={route.path}>\n                                <Link to={route.path} style={{ display: 'flex', alignItems: 'center' }}>\n                                    <Icon type={route.icon} />\n                                    <span>{route.name}</span>\n\n                                </Link>\n\n                            </Menu.Item>\n                        ))}\n\n                    </Menu>\n\n                </AppLayoutSider>\n                <Layout>\n                    <Header style={{ color: 'white' }}>\n                        {displayUrl}\n\n                        {/*<Dropdown overlay={menu} placement=\"topRight\" style={{marginLeft:200}}  >*/}\n                        {/*    <Button style={{marginRight:-480, marginLeft:480}}>Account</Button>*/}\n                        {/*</Dropdown>*/}\n                        <Button target=\"_blank\" rel=\"noopener noreferrer\" onClick={this.handleAccountClick} style={{position: \"absolute\", right: \"120px\", top: \"16px\"}}>\n                            Profile\n                        </Button>\n                        <Button target=\"_blank\" rel=\"noopener noreferrer\" onClick={this.handleSignoutClick} style={{position: \"absolute\", right: \"20px\", top: \"16px\"}}>\n                            Log out\n                        </Button>\n\n                    </Header>\n\n                    <Content style={{ margin: '16px', overflow: 'auto', display: 'flex', flexDirection: 'column' }}>\n                        <Switch>\n                            <PageContainer>\n                                {filteredRoutes.map((route) => (\n                                    <Route\n                                        exact={!route.hasChildren}\n                                        key={route.path}\n                                        path={route.path}\n                                        component={route.component}\n                                    />\n                                ))}\n                                <Route\n                                    exact\n                                    path=\"/account\"\n                                    component={Account}\n                                />\n                            </PageContainer>\n                        </Switch>\n                    </Content>\n                </Layout>\n            </AppLayoutContainer>\n        )\n    }\n}\n\n\nexport default AppLayout;\n","import React from 'react';\nimport './App.css';\nimport LoginForm from './components/LoginForm/LoginForm';\n\nimport EmailVerify from './components/LoginForm/EmailVerify';\nimport ForgotPassword from './components/ForgotPassword/ForgotPassword';\nimport Resetpassword from './components/ResetPassword/ResetPassword';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport AuthenticatedRoute from './components/AuthenticatedRoute';\nimport AppLayout from './components/AppLayout';\n\nimport {\n  HashRouter as Router,\n  //BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\"\n  }\n});\n\nfunction App() {\n\n  const ForbiddenPage = props => {\n    return (\n      <div>\n        Forbidden page\n      </div>\n    );\n  };\n\n  const NotFoundPage = props => {\n\n    return (\n      <div>\n        page nor found\n      </div>\n    );\n  };\n\n  return (\n    <Router>\n\n    <div className=\"App\">\n        <div className=\"container d-flex align-items-center flex-column\">\n\n          <Switch\n            atEnter={{ opacity: 0 }}\n            atLeave={{ opacity: 0 }}\n            atActive={{ opacity: 1 }}\n            className=\"switch-wrapper\"\n          >\n            <Route exact path=\"/login\" component={LoginForm} />\n            <Route exact path=\"/forbidden\" component={ForbiddenPage} />\n            <Route exact path=\"/forgot\" component={ForgotPassword} />\n            <Route exact path=\"/verify\" component={EmailVerify} />\n            <Route exact path=\"/reset\" component={Resetpassword} />\n            <AuthenticatedRoute path=\"/\" component={AppLayout} />\n            <Route\n              exact\n              path=\"/\"\n              render={() => <Redirect to={{ pathname: \"/login\" }} />}\n            />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </div>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}